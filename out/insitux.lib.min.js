(()=>{"use strict";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.d(t,{invoker:()=>Br});var r={};e.r(r),e.d(r,{abs:()=>S,acos:()=>W,asin:()=>K,atan:()=>U,ceil:()=>J,charCode:()=>I,codeChar:()=>j,concat:()=>b,cos:()=>_,cosh:()=>V,ends:()=>y,flat:()=>h,floor:()=>G,getTimeMs:()=>N,has:()=>f,isArray:()=>i,isNum:()=>u,len:()=>c,log10:()=>te,log2:()=>ee,logn:()=>Z,lowerCase:()=>k,max:()=>O,min:()=>T,objKeys:()=>H,padEnd:()=>P,push:()=>g,randInt:()=>D,randNum:()=>M,range:()=>q,replace:()=>x,reverse:()=>C,round:()=>Y,sign:()=>Q,sin:()=>F,sinh:()=>L,slen:()=>o,slice:()=>a,sortBy:()=>A,splice:()=>s,sqrt:()=>X,starts:()=>d,strIdx:()=>p,sub:()=>m,subIdx:()=>v,substr:()=>l,tan:()=>R,tanh:()=>z,toNum:()=>n,trim:()=>w,trimEnd:()=>B,trimStart:()=>E,upperCase:()=>$});const n=e=>Number(e),a=(e,t,r)=>e.slice(t,r),s=(e,t,r)=>e.splice(t,r),c=e=>e.length,o=e=>e.length,u=e=>""!==e&&!Number.isNaN(Number(e)),i=e=>Array.isArray(e),l=(e,t,r)=>e.substring(t,t+(r??e.length)),p=(e,t)=>e[t],m=(e,t)=>e.includes(t),v=(e,t)=>e.indexOf(t),f=(e,t)=>e.includes(t),d=(e,t)=>e.startsWith(t),y=(e,t)=>e.endsWith(t),x=(e,t,r)=>e.split(t).join(r),h=e=>e.flat(),b=(e,t)=>e.concat(t),g=(e,t)=>e.push(...t),A=(e,t)=>e.sort(t),C=e=>e.reverse(),k=e=>e.toLowerCase(),$=e=>e.toUpperCase(),w=e=>e.trim(),E=e=>e.trimStart(),B=e=>e.trimEnd(),P=(e,t)=>e.padEnd(t),I=e=>e.charCodeAt(0),j=e=>String.fromCharCode(e),M=(e,t)=>e+Math.random()*(t-e),D=(e,t)=>Math.floor(M(e,t)),q=e=>[...Array(e).keys()],H=e=>Object.keys(e),N=()=>(new Date).getTime(),S=Math.abs,T=Math.min,O=Math.max,F=Math.sin,_=Math.cos,R=Math.tan,L=Math.sinh,V=Math.cosh,z=Math.tanh,K=Math.asin,W=Math.acos,U=Math.atan,X=Math.sqrt,Y=Math.round,G=Math.floor,J=Math.ceil,Q=Math.sign,Z=Math.log,ee=Math.log2,te=Math.log10,re={print:{returns:["null"]},"print-str":{returns:["null"]},"!":{exactArity:1,returns:["bool"]},"=":{minArity:2,returns:["bool"]},"!=":{minArity:2,returns:["bool"]},"+":{minArity:2,numeric:!0},"-":{minArity:1,numeric:!0},"*":{minArity:2,numeric:!0},"/":{minArity:2,numeric:!0},"//":{minArity:2,numeric:!0},"**":{minArity:1,maxArity:2,numeric:!0},"<":{minArity:2,numeric:!0},">":{minArity:2,numeric:!0},"<=":{minArity:2,numeric:!0},">=":{minArity:2,numeric:!0},"fast=":{exactArity:2},"fast!=":{exactArity:2},"fast+":{exactArity:2,numeric:!0},"fast-":{exactArity:2,numeric:!0},"fast*":{exactArity:2,numeric:!0},"fast/":{exactArity:2,numeric:!0},"fast//":{exactArity:2,numeric:!0},"fast<":{exactArity:2,numeric:!0},"fast>":{exactArity:2,numeric:!0},"fast<=":{exactArity:2,numeric:!0},"fast>=":{exactArity:2,numeric:!0},inc:{exactArity:1,numeric:!0},dec:{exactArity:1,numeric:!0},min:{minArity:2,numeric:!0},max:{minArity:2,numeric:!0},abs:{exactArity:1,numeric:!0},sqrt:{exactArity:1,numeric:!0},round:{minArity:1,maxArity:2,numeric:!0},floor:{exactArity:1,numeric:!0},ceil:{exactArity:1,numeric:!0},logn:{exactArity:1,numeric:!0},log2:{exactArity:1,numeric:!0},log10:{exactArity:1,numeric:!0},and:{minArity:1},or:{minArity:1},xor:{exactArity:2},"&":{exactArity:2,numeric:!0},"|":{exactArity:2,numeric:!0},"^":{exactArity:2,numeric:!0},"~":{exactArity:1,numeric:!0},"<<":{exactArity:2,numeric:!0},">>":{exactArity:2,numeric:!0},">>>":{exactArity:2,numeric:!0},"odd?":{exactArity:1,numeric:"in only",returns:["bool"]},"even?":{exactArity:1,numeric:"in only",returns:["bool"]},"pos?":{exactArity:1,numeric:"in only",returns:["bool"]},"neg?":{exactArity:1,numeric:"in only",returns:["bool"]},"zero?":{exactArity:1,numeric:"in only",returns:["bool"]},"null?":{exactArity:1,returns:["bool"]},"num?":{exactArity:1,returns:["bool"]},"bool?":{exactArity:1,returns:["bool"]},"str?":{exactArity:1,returns:["bool"]},"vec?":{exactArity:1,returns:["bool"]},"dict?":{exactArity:1,returns:["bool"]},"key?":{exactArity:1,returns:["bool"]},"func?":{exactArity:1,returns:["bool"]},"wild?":{exactArity:1,returns:["bool"]},"ext?":{exactArity:1,returns:["bool"]},"type-of":{exactArity:1,returns:["str"]},rem:{minArity:2,numeric:!0},sin:{exactArity:1,numeric:!0},cos:{exactArity:1,numeric:!0},tan:{exactArity:1,numeric:!0},asin:{exactArity:1,numeric:!0},acos:{exactArity:1,numeric:!0},atan:{exactArity:1,numeric:!0},sinh:{exactArity:1,numeric:!0},cosh:{exactArity:1,numeric:!0},tanh:{exactArity:1,numeric:!0},vec:{returns:["vec"]},dict:{returns:["dict"]},len:{exactArity:1,params:[["str","vec","dict"]],returns:["num"]},"to-num":{exactArity:1,params:[["str","num"]],returns:["num","null"]},"to-key":{exactArity:1,params:[["str","num"]],returns:["key"]},"to-vec":{exactArity:1,params:[["str","dict"]],returns:["vec"]},"substr?":{exactArity:2,params:["str","str"],returns:["bool"]},idx:{exactArity:2,params:["any",["str","vec"]],returns:["num"]},"set-at":{exactArity:3,params:["vec","any",["vec","dict"]],returns:["vec","dict"]},map:{minArity:2,returns:["vec"]},for:{minArity:2,returns:["vec"]},reduce:{minArity:2,maxArity:3},filter:{minArity:2,params:["any",["vec","dict","str"]],returns:["vec","str","dict"]},remove:{minArity:2,params:["any",["vec","dict","str"]],returns:["vec","str","dict"]},find:{minArity:2,params:["any",["vec","dict","str"]]},count:{minArity:2,params:["any",["vec","dict","str"]],returns:["num"]},repeat:{minArity:2,params:["any","num"]},"->":{minArity:2},str:{returns:["str"]},rand:{maxArity:2,numeric:!0,returns:["num"]},"rand-int":{maxArity:2,numeric:!0,returns:["num"]},".":{minArity:1},"..":{minArity:2},"...":{minArity:2},into:{exactArity:2,params:[["vec","dict"],["vec","dict"]],returns:["vec","dict"]},assoc:{exactArity:3,params:["any","any","dict"],returns:["dict"]},omit:{exactArity:2,params:["any","dict"],returns:["dict"]},insert:{exactArity:3,params:["any","num","vec"],returns:["vec"]},append:{exactArity:2,params:["any","vec"],returns:["vec"]},prepend:{exactArity:2,params:["any","vec"],returns:["vec"]},sect:{minArity:1,maxArity:3,params:[["vec","str"],"num","num"],returns:["vec","str"]},reverse:{exactArity:1,params:[["vec","str"]],returns:["vec","str"]},flatten:{exactArity:1,params:["vec"],returns:["vec"]},shuffle:{exactArity:1,params:["vec"],returns:["vec"]},sort:{exactArity:1,params:[["vec","str"]],returns:["vec"]},"sort-by":{exactArity:2,params:["any",["vec","dict","str"]],returns:["vec"]},distinct:{returns:["vec"]},"group-by":{exactArity:2,params:["any",["vec","dict","str"]],returns:["dict"]},"part-by":{exactArity:2,params:["any",["vec","dict","str"]],returns:["vec"]},frequencies:{exactArity:1,params:[["vec","str"]],returns:["dict"]},keys:{exactArity:1,params:["dict"]},vals:{exactArity:1,params:["dict"]},do:{minArity:1},val:{minArity:1},range:{minArity:1,maxArity:3,numeric:"in only",returns:["vec"]},"empty?":{exactArity:1,params:[["str","vec","dict"]],returns:["bool"]},split:{exactArity:2,params:["str","str"],returns:["vec"]},join:{exactArity:2,params:["str",["vec","dict","str"]],returns:["str"]},replace:{exactArity:3,params:["str","str","str"],returns:["str"]},"starts?":{exactArity:2,params:["str","str"],returns:["bool"]},"ends?":{exactArity:2,params:["str","str"],returns:["bool"]},"lower-case":{exactArity:1,params:["str"],returns:["str"]},"upper-case":{exactArity:1,params:["str"],returns:["str"]},trim:{exactArity:1,params:["str"],returns:["str"]},"trim-start":{exactArity:1,params:["str"],returns:["str"]},"trim-end":{exactArity:1,params:["str"],returns:["str"]},"str*":{exactArity:2,params:["str","num"],returns:["str"]},"char-code":{minArity:1,maxArity:2,params:[["str","num"],"num"],returns:["str","num","null"]},time:{exactArity:0,returns:["num"]},version:{exactArity:0,returns:["num"]},tests:{minArity:0,maxArity:1,params:["bool"],returns:["str"]},symbols:{exactArity:0,returns:["vec"]},eval:{exactArity:1,params:["str"]},about:{exactArity:1,params:[["str","func"]],returns:["dict"]},reset:{exactArity:0},recur:{}},ne=["function","fn","var","let","var!","let!","return","if","if!","when","unless","while","loop","match","catch"],ae={null:"null",str:"string",num:"number",bool:"boolean",key:"keyword",ref:"reference",vec:"vector",dict:"dictionary",func:"function",clo:"closure",wild:"wildcard",ext:"external"},se=e=>"bool"===e.t?e.v:"null"!==e.t;function ce(e,t,r){const{exactArity:n,maxArity:a,minArity:s}=re[e],c=(n,a)=>[{e:"Arity",m:`${e} needs ${n} argument${1!==a?"s":""}, not ${t}`,errCtx:r}];if(void 0!==n){if(t!==n)return c(`exactly ${n}`,n)}else{if(s&&!a&&t<s)return c(`at least ${s}`,s);if(!s&&a&&t>a)return c(`at most ${a}`,a);if(s&&a&&(t<s||t>a))return c(`between ${s} and ${a}`,a)}}function oe(e,t,r,n=!1){const{params:a,numeric:s}=re[e],o=c(t);if(s){const a=t.findIndex((e=>!!c(e)&&(n?!e.find((e=>"num"===e)):"num"!==e[0])));if(-1===a)return;const s=t[a].map((e=>ae[e])).join(", ");return[ue(`${e} takes numeric arguments only, not ${s}`,r)]}if(!a)return;const u=a.map(((e,r)=>{if(r>=o||!t[r]||"any"===e)return!1;const a=t[r];if(i(e)){if(n?!c(a)||a.some((t=>f(e,t))):1===c(a)&&f(e,a[0]))return!1;const t=a.map((e=>ae[e]));return`argument ${r+1} must be either: ${e.map((e=>ae[e])).join(", ")}, not ${t}`}{if(n?!c(a)||f(a,e):1===c(a)&&e===a[0])return!1;const t=a.map((e=>ae[e]));return`argument ${r+1} must be ${ae[e]}, not ${t}`}})).filter((e=>!!e));return c(u)?u.map((e=>ue(e,r))):void 0}const ue=(e,t)=>({e:"Type",m:e,errCtx:t});function ie(e,t){const r=t.map((e=>ae[e])).join(", ");return[ue(`number as operation argument must be string, vector, or dictionary, not ${r}`,e)]}function le(e,t){const r=t.map((e=>ae[e])).join(", ");return[ue(`keyword as operation argument must be dictionary or vector, not ${r}`,e)]}function pe(e,t,r){const n=[],a=[],s=t;for(let e=0,t=c(r);e<t;++e){const c=r[e];let o=!1;"clo"!==c.typ?("let"===c.typ||"var"===c.typ?s.push(c.value):ve(s,c,e+1!==t&&r[e+1])&&(a.push(c),o=!0),n.push(o)):e+=c.value.length}return{name:e,length:c(r),captures:n,derefs:a}}function me({name:e,length:t,captures:r,derefs:n},s,c){const o=[],u=n.map((e=>e.errCtx));for(let e=0,n=0;e<t;++e){const t=s[e];"clo"===t.typ?(g(o,a(s,e,e+1+t.value.length)),e+=t.value.length):r[n++]?o.push({typ:"val",value:c.shift(),errCtx:u.shift()}):o.push(t)}return{name:e,ins:o}}function ve(e,t,r){return r&&"val"===t.typ&&"str"===t.value.t&&"exe"===r.typ||"npa"===t.typ&&!f(e,t.text)||"ref"===t.typ&&!f(e,t.value)}const{has:fe,flat:de,push:ye,slice:xe,splice:he}=r,{slen:be,starts:ge,sub:Ae,substr:Ce,strIdx:ke,subIdx:$e}=r,{isNum:we,len:Ee,toNum:Be}=r,Pe={t:"null",v:void 0},Ie={t:"bool",v:!1},je=e=>!!e&&"errCtx"in e,Me=(e,t=0)=>{if(je(e))return"";const r=e[t];return je(r)&&fe(["sym","str"],r.typ)&&r.text||""};function De(e){const t=Me(e,0),r=fe(["#","@"],t);return r&&(e=xe(e,1)),`${r?t:""}(${e.map((e=>je(e)?(({typ:e,text:t})=>"str"===e?`"${t}"`:t)(e):De(e))).join(" ")})`}const qe=e=>{if(1===Ee(e))return de(e);const t=e[Ee(e)-1],r=xe(e,0,Ee(e)-1),n={typ:"pop",value:Ee(r),errCtx:t[0].errCtx};return de([...r,[n],t])},He=(e,t)=>je(e)?Se(e,t):Ne(e,t);function Ne(e,t,r=!0){if(!Ee(e))return[];const n=e=>He(e,t);let a=e.shift(),s=n(a);const{errCtx:c}=s[0];if(je(a)&&"sym"===a.typ){if(a.text in re){const{exactArity:t,minArity:r}=re[a.text],n=t??r;n&&1!==n&&Ee(e)+1===n&&(e.unshift(a),a={typ:"sym",text:"@",errCtx:a.errCtx})}fe(["var","let"],a.text)&&Ee(e)&&Ee(e)%2&&(e.unshift(a),e.push({typ:"sym",text:"%",errCtx:a.errCtx}),a={typ:"sym",text:"#",errCtx:a.errCtx});const{text:c,errCtx:o}=a,u=(e,t=o)=>[{typ:"err",value:e,errCtx:t}];if(fe(["if","if!","when","unless","match"],c)&&!Ee(e))return u("provide a condition");if(fe(["if","if!"],c)){if(1===Ee(e))return u("provide at least one branch");if(Ee(e)>3)return u(`provide one or two branches, not ${Ee(e)}`);const t=e.map(n),[r,a]=t;let s=t[2];return s||(s=[{typ:"val",value:Pe,errCtx:o}]),[...r,..."if!"===c&&[{typ:"val",value:{t:"func",v:"!"},errCtx:o},{typ:"exe",value:1,errCtx:o}]||[],{typ:"if",value:Ee(a)+1,errCtx:o},...a,{typ:"jmp",value:Ee(s),errCtx:o},...s]}if("when"===c||"unless"===c){if(1===Ee(e))return u("provide a body");const t=e.map(n),[r,a]=[t[0],xe(t,1)],s=qe(a);return[...r,..."unless"===c?[{typ:"val",value:{t:"func",v:"!"}},{typ:"exe",value:1}]:[],{typ:"if",value:Ee(s)+1,errCtx:o},...s,{typ:"jmp",value:1,errCtx:o},{typ:"val",value:Pe,errCtx:o}]}if("match"===c){const t=e.map(n),[r,a]=[t[0],xe(t,1)],s=Ee(a)%2?a.pop():[];if(!Ee(a))return u("provide at least one case");const c=Ee(s);let i=a.reduce(((e,t)=>e+Ee(t)),0)+(c||2)+Ee(a);const l=r;for(;Ee(a)>1;){const[e,t]=[a.shift(),a.shift()];ye(l,e),l.push({typ:"mat",value:Ee(t)+1,errCtx:o}),ye(l,t),i-=Ee(e)+Ee(t)+2,l.push({typ:"jmp",value:i,errCtx:o})}return Ee(s)?ye(l,s):(l.push({typ:"pop",value:1,errCtx:o}),l.push({typ:"val",value:Ie,errCtx:o})),l}if("catch"===c){if(Ee(e)<2)return u("provide at least 2 arguments");const t=n(e.pop());return[...de(e.map(n)),{typ:"cat",value:Ee(t),errCtx:o},...t]}if("and"===c||"or"===c||"while"===c){const t=e.map(n);if(Ee(t)<2)return u("provide at least 2 arguments");const r=[];if("while"===c){const[e,n]=[t[0],xe(t,1)],a=qe(n),s=Ee(a)+2,c=-(Ee(e)+Ee(a)+3);return r.push({typ:"val",value:Pe,errCtx:o}),ye(r,e),r.push({typ:"if",value:s,errCtx:o}),r.push({typ:"pop",value:1,errCtx:o}),ye(r,a),r.push({typ:"loo",value:c,errCtx:o}),r}let a=t.reduce(((e,t)=>e+Ee(t)),0);a+=Ee(t),a+=Be("and"===c);const s="and"===c?"if":"or";for(let e=0;e<Ee(t);++e)ye(r,t[e]),a-=Ee(t[e]),r.push({typ:s,value:a,errCtx:o}),--a;return"and"===c&&ye(r,[{typ:"val",value:{t:"bool",v:!0},errCtx:o},{typ:"jmp",value:1,errCtx:o}]),r.push({typ:"val",value:Ie,errCtx:o}),r}if("loop"===c){if(Ee(e)<3)return u("provide at least 3 arguments");const t=e.map(n),r=e[1],a=qe(xe(t,2));return je(r)?[{typ:"val",value:{t:"num",v:0},errCtx:o},{typ:"let",value:r.text,errCtx:o},...t[0],{typ:"let",value:r.text+"-limit",errCtx:o},{typ:"pop",value:1,errCtx:o},...a,{typ:"ref",value:r.text,errCtx:o},{typ:"val",value:{t:"func",v:"inc"},errCtx:o},{typ:"exe",value:1,errCtx:o},{typ:"let",value:r.text,errCtx:o},{typ:"ref",value:r.text+"-limit",errCtx:o},{typ:"val",value:{t:"func",v:"<"},errCtx:o},{typ:"exe",value:2,errCtx:o},{typ:"if",value:2,errCtx:o},{typ:"pop",value:1,errCtx:o},{typ:"loo",value:-(Ee(a)+10),errCtx:o}]:u("argument 2 must be symbol")}if("var"===c||"let"===c){const r=e.filter(((e,t)=>!(t%2))),a=e.filter(((e,t)=>!!(t%2)));if(!Ee(r))return u("provide at least 1 declaration name and value");if(Ee(r)>Ee(a))return u("provide a value after each declaration name");const s=[],i=`${c} name must be a new symbol or destructuring`;for(let e=0,l=Ee(r);e<l;++e){ye(s,n(a[e]));const l=r[e];if(je(l)){const n=He(r[e],t);if(Ee(n)>1||"ref"!==n[0].typ)return u(i,n[0].errCtx);s.push({typ:c,value:n[0].value,errCtx:o})}else{const{shape:e,errors:t}=Te([l],!0);if(Ee(t))return t;if(!Ee(e))return u(i);const r="var"===c?"dva":"dle";s.push({typ:r,value:e,errCtx:o})}}return s}if("var!"===c||"let!"===c){if(Ee(e)<2)return u("provide 1 declaration name and 1 function");const t=e.map(n),[r,a,s]=[t[0][0],t[1],xe(t,2)];if("ref"!==r.typ)return u("declaration name must be symbol",r.errCtx);const i=[{typ:"ref",value:r.value,errCtx:o}];ye(i,[...de(s),...a]),i.push({typ:"exe",value:Ee(s)+1,errCtx:o});const l="var!"===c?"var":"let";return i.push({typ:l,value:r.value,errCtx:o}),i}if("#"===c||"@"===c||"fn"===c){const r=[],n=De([a,...e]),s=[];let i=!1;if("fn"===c){const n=Te(e,!1);if(ye(s,n.shape.map((e=>e.name))),t=n.shape,ye(r,n.errors),!Ee(e))return u("provide a body");i=1===Ee(e),e.unshift({typ:"sym",text:"do",errCtx:o})}if("@"===c){const t=Me(e,0);if(fe(ne,t)){const{errCtx:r}=e[0];return u(`"${t}" syntax unavailable in partial closure`,r)}e=[{typ:"sym",text:"...",errCtx:o},...e,{typ:"sym",text:"args",errCtx:o}]}ye(r,Ne(e,t,"@"!==c));const l=r.filter((e=>"err"!==e.typ)),p=r.filter((e=>"err"===e.typ));return Ee(p)?p:(i&&(l.pop(),l.pop()),[{typ:"clo",value:pe(n,s,l),errCtx:o},...l])}if(re[c]&&r){const t=ce(c,Ee(e),o),r=(e,t=o)=>[{typ:"err",value:e,errCtx:t}];ye(s,t?.map((e=>r(e.m)[0]))??[]),t||2===Ee(e)&&re[`fast${c}`]&&(s=n({typ:"sym",text:`fast${c}`,errCtx:o}))}}const o=e.map(n),u=de(o);if("return"===Me([a]))return[...u,{typ:"ret",value:!!Ee(o),errCtx:c}];if(1===Ee(s)&&"ref"===s[0].typ){const{value:e,errCtx:t}=s[0];s[0]={typ:"val",value:{t:"str",v:e},errCtx:t}}ye(u,s);const i=Ee(s)>1||fe(["npa","upa"],s[0].typ)?"exa":"exe";return[...u,{typ:i,value:Ee(o),errCtx:c}]}function Se(e,t){if(je(e)){const{errCtx:r}=e;if("str"===e.typ)return[{typ:"val",value:{t:"str",v:e.text},errCtx:r}];if("num"===e.typ)return[{typ:"val",value:{t:"num",v:Be(e.text)},errCtx:r}];if("sym"===e.typ){const{text:n}=e,a=t.map((({name:e})=>e));if("true"===n||"false"===n)return[{typ:"val",value:{t:"bool",v:"true"===n},errCtx:r}];if("null"===n)return[{typ:"val",value:Pe,errCtx:r}];if("_"===n)return[{typ:"val",value:{t:"wild",v:void 0},errCtx:r}];if(ge(n,":"))return[{typ:"val",value:{t:"key",v:n},errCtx:r}];if("%"===n||ge(n,"%")&&we(Ce(n,1))){const e="%"===n?0:Be(Ce(n,1));return e<0?[{typ:"val",value:Pe,errCtx:r}]:[{typ:"upa",value:e,text:n,errCtx:r}]}if(fe(a,n)){const e=t.find((({name:e})=>e===n));return 1===Ee(e.position)?[{typ:"npa",value:e.position[0],text:n,errCtx:r}]:[{typ:"dpa",value:e.position,errCtx:r}]}return"args"===n?[{typ:"upa",value:-1,text:"args",errCtx:r}]:"PI"===n||"E"===n?[{typ:"val",value:{t:"num",v:"PI"===n?3.141592653589793:2.718281828459045},errCtx:r}]:re[n]?[{typ:"val",value:{t:"func",v:n},errCtx:r}]:[{typ:"ref",value:n,errCtx:r}]}return[]}return Ee(e)?Ne(e,t):[]}function Te(e,t,r=[]){const n=[],a=[];let s=0;for(;Ee(e)>(t?0:1)&&(je(e[0])||"vec"===Me(e[0]));){const t=e.shift();if(je(t)){const{typ:e,errCtx:c}=t;"sym"===e?n.push({name:t.text,position:[...r,s]}):a.push({typ:"err",value:"provide parameter name",errCtx:c})}else{t.shift();const e=Te(t,!0,[...r,s]);ye(n,e.shape),ye(a,e.errors)}++s}return{shape:n,errors:a}}function Oe({name:e,nodes:t}){const{shape:r,errors:n}=Te(t,!1),a=[...n,...de(t.map((e=>Se(e,r))))];for(let e=0,t=Ee(a);e<t;e++){const{typ:t,value:r,errCtx:n}=a[e];if("err"===t)return{e:"Parse",m:r,errCtx:n}}return{name:e,ins:a}}function Fe(e){const t=[];for(let r=0,n=Ee(e);r<n;++r){const n=e[r];switch(n.typ){case"val":t.push({types:[n.value.t],val:n.value});break;case"exa":case"exe":{const e=t.pop(),r=he(t,Ee(t)-n.value,n.value),a=e=>r.findIndex((({types:t})=>t&&!e.find((e=>fe(t,e))))),s=t=>e.val?e.val.t===t:e.types&&1===Ee(e.types)&&e.types[0]===t;if(e.val&&"func"===e.val.t){if("recur"===e.val.v){he(t,Ee(t)-n.value,n.value);break}const a=oe(e.val.v,r.map((e=>e.types??[])),n.errCtx,!0);if(a)return a;const{returns:s,numeric:c}=re[e.val.v];t.push(c&&"in only"!==c?{types:["num"]}:{types:s})}else if(s("num")){const e=a(["str","dict","vec"]);if(-1!==e)return ie(n.errCtx,r[e].types);t.push({})}else if(s("key")){const e=a(["dict","vec"]);if(-1!==e)return le(n.errCtx,r[e].types);t.push({})}else s("str")||s("bool")?t.push({}):e.types||e.val||t.push({});break}case"or":t.pop(),t.push({}),r+=n.value;break;case"cat":case"var":case"let":case"dva":case"dle":case"loo":case"jmp":break;case"clo":{const a=Fe(xe(e,r+1,r+n.value.length));if(a)return a;t.push({})}case"ref":case"npa":case"upa":case"dpa":t.push({});break;case"if":{t.pop(),t.push({});const a=Fe(xe(e,r+1,n.value+1));if(a)return a;r+=n.value-1;break}case"mat":t.pop(),t.pop(),r+=n.value,r+=e[r].value,t.push({});break;case"pop":he(t,Ee(t)-n.value,n.value);break;case"ret":n.value&&t.pop()}}}function _e(e,t){const{tokens:r,stringError:n}=function(e,t,r=!0,n=!1){const a=[],s=e=>Ae("0123456789",e);let[c,o,u,i]=[!1,1,0,[1,0]],[l,p,m]=[!1,!1,!1];for(let v=0,f=be(e);v<f;++v){const d=ke(e,v),y=v+1!==f?ke(e,v+1):"";if(++u,"\\"===d&&c){a[Ee(a)-1].text+=r?{n:"\n",t:"\t",r:"\r",'"':'"'}[y]||("\\"===y?"\\":`\\${y}`):`\\${y}`,++u,++v;continue}const x={invokeId:t,line:o,col:u};if('"'===d){(c=!c)&&(i=[o,u],a.push({typ:"str",text:"",errCtx:x})),p=l=!1;continue}const h=Ae(" \t\n\r,",d);if(!c&&h){l=!1,p&&(p=","===d),"\n"===d&&(++o,u=0);continue}if(!c&&";"===d){const t=$e(Ce(e,++v),"\n"),r=Ce(e,v,t>0?t:f-v);v+=be(r),++o,u=0,n&&a.push({typ:"rem",text:r,errCtx:x});continue}const b=Ae("()[]{}",d);if(p&&!s(d)){const e="x"===d&&"0"===a[Ee(a)-1].text;m=m||e,p="b"===d&&"0"===a[Ee(a)-1].text||"."===d&&!Ae(a[Ee(a)-1].text,".")||m&&(e||Ae("ABCDEFabcdef",d)),p||b||h||(l=!0,a[Ee(a)-1].typ="sym")}if(l&&b&&(l=!1),!c&&!l&&!p){if(b){const e=-1===$e("[{(",d)?")":"(";a.push({typ:e,text:r?e:d,errCtx:x}),!r||"["!==d&&"{"!==d||a.push({typ:"sym",text:"["===d?"vec":"dict",errCtx:x});continue}p=s(d)||"."===d&&s(y)||"-"===d&&(s(y)||"."===y),m=l=!p;const e=l?"sym":"num";a.push({typ:e,text:"",errCtx:x})}a[Ee(a)-1].text+=d}return{tokens:a,stringError:c?i:void 0}}(e,t),a=function(e,t){const r=Ee(t)?t[0].errCtx.invokeId:"",n=[],a=(e,t)=>n.push({e:"Parse",m:e,errCtx:t});if(e){const[t,s]=e;return a("unmatched double quotation marks",{invokeId:r,line:t,col:s}),n}const s=e=>Ee(t.filter((({typ:t})=>t===e))),[c,o]=[s("("),s(")")];{const[e,n]=function(e,t,r){const n=r>=t,[a,s]=[n?"(":")",n?")":"("],c=n?1:-1;for(let t=Ee(e),r=n?0:t-1,o=0;n?r<t:r>=0;r+=c){const{typ:t,errCtx:{line:n,col:c}}=e[r];if(o+=Be(t===a)-Be(t===s),o<0)return[n,c]}return[0,0]}(t,c,o);e+n&&a("unmatched parenthesis",{invokeId:r,line:e,col:n})}let u;for(let e=0,r=!1;e<Ee(t);++e){if(r&&")"===t[e].typ){u=t[e];break}r="("===t[e].typ}return u&&a("empty expression forbidden",u.errCtx),n}(n,r);if(Ee(a))return{errors:a,funcs:{}};const s=[],c=[],o=function(e){const t=[],r=[];return e.forEach((e=>{if(!je(e)&&je(e[0])&&"function"===Me(e)){const r=Me(e,1);r?Ee(e)<3&&t.push({err:"empty function body",errCtx:e[0].errCtx}):t.push({err:"nameless function",errCtx:e[0].errCtx}),t.push({name:r,nodes:xe(e,2)})}else r.push(e)})),Ee(r)&&t.push({name:"entry",nodes:r}),t}(function(e){const t=[],r=e=>{let t;"sym"===e[0].typ&&Ae("@#",e[0].text)&&(t=e.shift());const n=e.shift();if("("!==n.typ&&")"!==n.typ)return n;const a=t?[t]:[];for(;")"!==e[0].typ;)a.push(r(e));return e.shift(),a};for(;Ee(e);)t.push(r(e));return t}(xe(r))),u=[];o.forEach((e=>{"err"in e?c.push({e:"Parse",m:e.err,errCtx:e.errCtx}):u.push({name:e.name,nodes:e.nodes})})),u.map(Oe).forEach((e=>{"e"in e?c.push(e):s.push(e)})),ye(c,de(s.map((e=>Fe(e.ins)??[]))));const i={};return s.forEach((e=>i[e.name??""]=e)),{errors:c,funcs:i}}function Re(e,t){return e.dict.has(t)?{kind:"val",value:e.dict.get(t)}:{kind:"err",err:`"${t}" not found.`}}function Le(e,t,r){e.dict.set(t,r)}function Ve(e,t,r){switch(t){case"test.function":e.output+=r[0].v+"\n";break;default:return{kind:"err",err:`operation "${t}" does not exist`}}return{kind:"val",value:{t:"null",v:void 0}}}const ze=[{name:"Hello, world!",code:'"Hello, world!"',out:"Hello, world!"},{name:"Say Hello, world!",code:';This is a test comment\n           (print "Hello, world!")',out:"Hello, world!\nnull"},{name:"1 + 1 = 2",code:"(+ 1 1)",out:"2"},{name:"Negate 1 = -1",code:"(- 1)",out:"-1"},{name:"(1+1)+1+(1+1) = 5",code:"(+ (+ 1 1) 1 (+ 1 1))",out:"5"},{name:"Conditional head",code:"((if true + -) 12 9 1)",out:"22"},{name:"when and unless",code:'[(when 123 (print "hi") 234) (unless true (print "bye"))]',out:"hi\n[234 null]"},{name:"match and wildcard",code:'(match [1 2]\n             [0 0] (print "hello")\n             [0 2] (print "bye")\n             [1 _] "hey")',out:"hey"},{name:"Cond number head",code:"((if false 1 2) [:a :b :c])",out:":c"},{name:"and & short-circuit",code:'[(and true (if true null 1) (print "hi")) (and 1 2 3)]',out:"[false true]"},{name:"or & short-circuit",code:'[(or true (print "hi") 1) (or false (print-str "-> ") 1)]',out:"-> [true 1]"},{name:"String retrieve",code:'(2 "Hello")',out:"l"},{name:"Vector retrieve",code:"(2 [:a :b :c :d])",out:":c"},{name:"Key as operation",code:'[(:age {:name "Patrick" :age 24}) (:abc [:a :abc :c])]',out:"[24 :abc]"},{name:"Dictionary as op 1",code:'({"name" "Patrick" "age" 24} "age")',out:"24"},{name:"Dictionary as op 2",code:'({"name" "Patrick"} "age" 24)',out:'{"name" "Patrick", "age" 24}'},{name:"Equalities",code:'[(= 1 2 1)\n            (!= 1 2 1)\n            (= "Hello" "hello")\n            (!= "world" "world")\n            (= [0 [1]] [0 [1]])]',out:"[false true false false true]"},{name:"Define and retrieve",code:"(var a 1) a",out:"1"},{name:"Define and add",code:"(var a 1) (inc a)",out:"2"},{name:"Define op and call",code:"(var f +) (f 2 2)",out:"4"},{name:"Define vec and call",code:"(var f [1]) (f 1)",out:"1"},{name:"Define num and call",code:"(var f 1) (f [:a :b :c])",out:":b"},{name:"Apply op to var",code:"(var a 10) (var! a + 10)",out:"20"},{name:"Apply op to let",code:"(let a 10) (let! a (if true + -) (+ 2 3) 5)",out:"20"},{name:"Print simple vector",code:"[1 2 3]",out:"[1 2 3]"},{name:"Boolean select",code:"[(true 1 2) (false 1)]",out:"[1 null]"},{name:"Sum vector of numbers",code:"[(reduce + [1 2 3]) (reduce + 3 [1 2 3])]",out:"[6 9]"},{name:"Sum vectors of numbers",code:"(map + [1 2 3] [1 2 3 4])",out:"[2 4 6]"},{name:"For XY list",code:"(for vec [0 1] [0 1])",out:"[[0 0] [1 0] [0 1] [1 1]]"},{name:"Filter by integer",code:'(filter 2 [[1] [:a :b :c] "hello" "hi"])',out:'[[:a :b :c] "hello"]'},{name:"Comments, short decimal",code:';((print "Hello")\n           .456',out:"0.456"},{name:"Dictionary into vector",code:"(into [1 2] {3 4 5 6})",out:"[1 2 [3 4] [5 6]]"},{name:"Vector into dictionary",code:"(into {[0] 1 [2] 3} [[0] 2])",out:"{[0] 2, [2] 3}"},{name:"While loop",code:"(var n 5)\n           (while (< 0 n)\n             (print-str n)\n             (var n (dec n)))",out:"543210"},{name:"Loop",code:"(loop 3 i (print-str i))",out:"012null"},{name:"Catch error",code:'(catch\n             (:e (catch (let a :a) (+ 1 a) (0 errors)))\n             (print "hi"))',out:"Type"},{name:"Define with no call",code:'(function func (print "Nothing."))'},{name:"Call greet func",code:'(function greeting (print "Hello!")) (greeting)',out:"Hello!\nnull"},{name:"Call const value func",code:"(function const 123) (const)",out:"123"},{name:"Call identity funcs",code:"(function id1 %)\n           (function id2 x x)\n           [(id1 123) (id2 456)]",out:"[123 456]"},{name:"Call greet with name",code:'(function greeting name (print "Hello, " name "!"))\n           (greeting "Patrick")',out:"Hello, Patrick!\nnull"},{name:"Call with too few args",code:"(function func a b c [a b c]) (func 1 2)",out:"[1 2 null]"},{name:"Define func and call",code:"(function func a b (+ a b)) (var f func) (f 2 2)",out:"4"},{name:"Anonymous parameters",code:"(function avg<n? (< (/ (.. + %) (len %)) %1))\n           (avg<n? [0 10 20 30 40] 5)",out:"false"},{name:"Call parameter",code:'(function f x (x "hello")) (f print)',out:"hello\nnull"},{name:"Let and retrieve",code:"(function f (let a 1) a) (f)",out:"1"},{name:"Let num op and call",code:"(function f (let n 0) (n [1])) (f)",out:"1"},{name:"Explicit return",code:"(function f (return 123) (print 456)) (f)",out:"123"},{name:"Closure 1",code:"(let x 10)\n           (let closure #(+ x x))\n           (let x 11)\n           (closure)",out:"20"},{name:"Closure 2",code:"(filter #(or (.. = args) (even? %)) (range 10) 5)",out:"[0 2 4 5 6 8]"},{name:"Closure 3",code:"(function f #(+ x x))\n           (var x 10) (let c20 (f))\n           (var x 20) (let c40 (f))\n           [(c20) (c40)]",out:"[20 40]"},{name:"Closure with ext func",code:"(#(test.function %) 1)",out:"1\nnull"},{name:"Func returns closure",code:"(function f x #(x 2 2))\n           (let closure (f +))\n           (closure)",out:"4"},{name:"Dictionary closure",code:"(function f x #{x 2})\n           (let closure (f :a))\n           (closure)",out:"{:a 2}"},{name:"Vector closure",code:"(function f x #[1 x %])\n           (let closure (f 2))\n           (closure 3)",out:"[1 2 3]"},{name:"Closure as head",code:"(#[% %1 %2] 1 2 3)",out:"[1 2 3]"},{name:"Partial closure 1",code:"(@[] 1 2 3)",out:"[1 2 3]"},{name:"Partial closure 2",code:"(@((do +) 2) 2)",out:"4"},{name:"Parameterised closure 1",code:"((fn a b (+ a b)) 2 2)",out:"4"},{name:"Parameterised closure 2",code:"((fn a b (print-str a b) (+ a b)) 2 2)",out:"224"},{name:"Parameterised closure 3",code:"(reduce\n             (fn primes num\n               (if (find zero? (map (rem num) primes))\n                 primes\n                 (append num primes)))\n             [2]\n             (range 3 10))",out:"[2 3 5 7]"},{name:"Closure with inter-lets",code:"(let a + c 5 d 10)\n           (let closure (fn b (let d 1) (a b c d)))\n           (let a - c 4 d 11)\n           (closure 1)",out:"7"},{name:"Closure with inner-let",code:"(((fn x (let y 1) #[x y]) 2))",out:"[2 1]"},{name:"Closure with captured f",code:"[((fn x (@(val x))) 0) (var f val) ((fn x (@(f x))) 0)]",out:"[0 val 0]"},{name:"Destructure var",code:"(var [x [y]] [1 [2]]) [y x]",out:"[2 1]"},{name:"Destructure string",code:'(let [a b c] "hello") [a b c]',out:'["h" "e" "l"]'},{name:"Destructure function",code:"(function f a [[b c] d] e [e d c b a]) (f 0 [[1 2] 3] 4)",out:"[4 3 2 1 0]"},{name:"Destructuring closure",code:"(let f (fn a [b [c]] d [d c b a])) (f 0 [1 [2]] 3)",out:"[3 2 1 0]"},{name:"Destructuring fn decoy",code:"(let f (fn a [a [a]])) (f 0)",out:"[0 [0]]"},{name:"Implicit currying",code:"(-> 1 inc (+ 10))",out:"12"},{name:"String instead of number",code:'(function sum (.. + args))\n           (print (sum 2 2))\n           (sum 2 "hi")',out:"4",err:["Type"]},{name:"Reference non-existing",code:"x",err:["Reference"]},{name:"Expired let retrieve",code:"(function f (let a 1) a) (f) a",err:["Reference"]},{name:"Call non-existing",code:"(x)",err:["External"]},{name:"Call budget",code:"(function f (f)) (f)",err:["Budget"]},{name:"Loop budget",code:"(var n 10000)\n           (while (< 0 n)\n             (var n (dec n)))",err:["Budget"]},{name:"Range budget",code:"(range 10000)",err:["Budget"]},{name:"Head exe arity check",code:"(((fn +)) 1)",err:["Arity"]},{name:"Fibonacci 13",code:"(function fib n\n             (if (< n 2) n\n               (+ (fib (dec n))\n                  (fib (- n 2)))))\n           (fib 13)",out:"233"},{name:"dedupe (recur)",code:"(function dedupe list -out\n             (let out (or -out []))\n             (let next (if (out (0 list)) [] [(0 list)]))\n             (if (empty? list) out\n                 (recur (sect list) (into out next))))\n           (dedupe [1 1 2 3 3 3])",out:"[1 2 3]"},{name:"frequencies",code:'(function frequencies list\n             (reduce #(% %1 (inc (or (% %1) 0))) {} list))\n           (frequencies "12121212")',out:'{"1" 4, "2" 4}'},{name:"set get",code:"[($globals.time_offset 5.5) $globals.time_offset]",out:"[5.5 5.5]"},{name:"exe",code:"(test.function 123)",out:"123\nnull"},{name:"Empty parens",code:"()",err:["Parse"]},{name:"Imbalanced parens 1",code:'(print ("hello!")',err:["Parse"]},{name:"Imbalanced parens 2",code:'print "hello!")',err:["Parse"]},{name:"Imbalanced quotes",code:'(print "Hello)',err:["Parse"]},{name:"Function as op",code:"(function)",err:["Parse"]},{name:"Function without name",code:"(function (+))",err:["Parse"]},{name:"Function without body",code:"(function func)",err:["Parse"]},{name:"Variable not symbol",code:"(var 1 2)",err:["Parse"]},{name:"Parser type error 1",code:"(function f (+ 1 :a))",err:["Type"]},{name:"Parser type error 2",code:"(function f (+ 1 (into {} {})))",err:["Type"]},{name:"Parser type error 3",code:"(function f (if true (into 2 {}) (+ 2 2)))",err:["Type"]},{name:"Parser arity error 1",code:"(abs)",err:["Parse"]}],Ke=({v:e})=>e,We=({v:e})=>e,Ue=({v:e})=>e,Xe=({v:e})=>e,Ye=(e,t)=>c(e)===c(t)&&!e.some(((e,r)=>!Ge(e,t[r]))),Ge=(e,t)=>{if("wild"===e.t||"wild"===t.t)return!0;if(e.t!==t.t)return!1;switch(e.t){case"null":return!0;case"bool":case"num":return e.v===t.v;case"vec":return Ye(e.v,Ue(t));case"dict":{const r=Xe(t);return c(e.v.keys)===c(r.keys)&&Ye(e.v.keys,r.keys)}case"str":case"ref":case"key":case"func":return We(e)===We(t);case"clo":return e.v.name===t.v.name;case"ext":return e.v===t.v}return 0},Je=e=>e.reduce(((e,t)=>e+Qe(t)),""),Qe=e=>{const t=e=>{return"str"===e.t?`"${t=e.v,t.split("").map((e=>'"'===e?'\\"':e)).join("")}"`:Qe(e);var t};if("clo"===e.t)return e.v.name??"";if("vec"===e.t)return`[${e.v.map(t).join(" ")}]`;if("dict"===e.t){const{keys:r,vals:n}=e.v,[a,s]=[r.map(t),n.map(t)];return`{${a.map(((e,t)=>`${e} ${s[t]}`)).join(", ")}}`}return"null"===e.t?"null":"wild"===e.t?"_":`${e.v}`},Ze=e=>"vec"===e.t?a(e.v):"str"===e.t?[...e.v].map((e=>({t:"str",v:e}))):"dict"===e.t?e.v.keys.map(((t,r)=>({t:"vec",v:[t,e.v.vals[r]]}))):[],et=e=>{c(e)%2==1&&e.pop();const t=e.filter(((e,t)=>t%2==0)),r=e.filter(((e,t)=>t%2==1)),n=[],a=[];return t.forEach(((e,t)=>{const s=n.findIndex((t=>Ge(t,e)));-1===s?(n.push(e),a.push(r[t])):a[s]=r[t]})),{t:"dict",v:{keys:n,vals:a}}},tt=({keys:e,vals:t},r)=>{const n=e.findIndex((e=>Ge(e,r)));return-1===n?{t:"null",v:void 0}:t[n]},rt=({keys:e,vals:t},r,n)=>{const[s,c]=[a(e),a(t)],o=e.findIndex((e=>Ge(e,r)));return-1!==o?c[o]=n:(s.push(r),c.push(n)),{keys:s,vals:c}};function nt(e,t,r){if(!c(e)||"vec"!==r.t&&"dict"!==r.t||"vec"===r.t&&("num"!==e[0].t||e[0].v<0||e[0].v>c(r.v)))return r;if("vec"===r.t){const n=a(r.v),s=Ke(e[0]);return 1===c(e)?(n[s]=t,{t:"vec",v:n}):(n[s]=nt(a(e,1),t,n[s]),{t:"vec",v:n})}return 1===c(e)?{t:"dict",v:rt(r.v,e[0],t)}:{t:"dict",v:rt(r.v,e[0],nt(a(e,1),t,tt(r.v,e[0])))}}const{abs:at,sign:st,sqrt:ct,floor:ot,ceil:ut,round:it,max:lt,min:pt,logn:mt,log2:vt,log10:ft}=r,{cos:dt,sin:yt,tan:xt,acos:ht,asin:bt,atan:gt,sinh:At,cosh:Ct,tanh:kt}=r,{concat:$t,has:wt,flat:Et,push:Bt,reverse:Pt,slice:It,splice:jt,sortBy:Mt}=r,{ends:Dt,slen:qt,starts:Ht,sub:Nt,subIdx:St,substr:Tt,upperCase:Ot,lowerCase:Ft}=r,{trim:_t,trimStart:Rt,trimEnd:Lt,charCode:Vt,codeChar:zt,strIdx:Kt,replace:Wt}=r,{getTimeMs:Ut,randInt:Xt,randNum:Yt}=r,{isNum:Gt,len:Jt,objKeys:Qt,range:Zt,toNum:er,isArray:tr}=r,rr={};let nr,ar=[],sr={};const cr=e=>({t:"bool",v:e}),or=e=>({t:"num",v:e}),ur=(e="")=>({t:"str",v:e}),ir=e=>({t:"key",v:e}),lr=(e=[])=>({t:"vec",v:e}),pr=e=>({t:"dict",v:e}),mr=e=>({t:"func",v:e});function vr(e){throw{errors:e}}function fr(e){return!!e&&"object"==typeof e&&"errors"in e}const dr=(e,t)=>vr([ue(e,t)]);function yr(e,t,r,n){switch(e){case"str":return ur(Je(t));case"print":case"print-str":return r.print(Je(t),"print"===e),{t:"null",v:void 0};case"vec":return lr(t);case"dict":return et(t);case"len":return or("str"===t[0].t?qt(t[0].v):"vec"===t[0].t?Jt(t[0].v):Jt(Xe(t[0]).keys));case"to-num":return Gt(t[0].v)?or(er(t[0].v)):{t:"null",v:void 0};case"to-key":return ir(`:${Qe(t[0])}`);case"to-vec":return lr(Ze(t[0]));case"!":return cr(!se(t[0]));case"=":case"!=":for(let r=1,n=Jt(t);r<n;++r)if(Ge(t[r-1],t[r])!==("="===e))return cr(!1);return cr(!0);case"-":return or(1===Jt(t)?-Ke(t[0]):t.map(Ke).reduce(((e,t)=>e-t)));case"**":return or(Ke(t[0])**(1===Jt(t)?2:Ke(t[1])));case"+":return or(t.map(Ke).reduce(((e,t)=>e+t)));case"*":return or(t.map(Ke).reduce(((e,t)=>e*t)));case"/":return or(t.map(Ke).reduce(((e,t)=>e/t)));case"//":return or(t.map(Ke).reduce(((e,t)=>ot(e/t))));case"fast=":case"fast!=":return cr(Ge(t[0],t[1])===("fast="===e));case"fast-":return or(t[0].v-t[1].v);case"fast+":return or(t[0].v+t[1].v);case"fast*":return or(t[0].v*t[1].v);case"fast/":return or(t[0].v/t[1].v);case"fast//":return or(ot(t[0].v/t[1].v));case"fast<":return cr(t[0].v<t[1].v);case"fast>":return cr(t[0].v>t[1].v);case"fast<=":return cr(t[0].v<=t[1].v);case"fast>=":return cr(t[0].v>=t[1].v);case"rem":return or(t.map(Ke).reduce(((e,t)=>e%t)));case"min":return or(t.map(Ke).reduce(((e,t)=>pt(e,t))));case"max":return or(t.map(Ke).reduce(((e,t)=>lt(e,t))));case"<":case">":case"<=":case">=":for(let r=1,n=Jt(t);r<n;++r){const[n,a]=[t[r-1].v,t[r].v];if("<"===e&&n>=a||">"===e&&n<=a||"<="===e&&n>a||">="===e&&n<a)return cr(!1)}return cr(!0);case"inc":return or(t[0].v+1);case"dec":return or(t[0].v-1);case"abs":return or(at(t[0].v));case"round":if(2===Jt(t)){const e=10**t[0].v;return or(it(t[1].v*e)/e)}return or(it(t[0].v));case"sin":case"cos":case"tan":case"sqrt":case"floor":case"ceil":case"logn":case"log2":case"log10":return or((0,{sin:yt,cos:dt,tan:xt,sqrt:ct,floor:ot,ceil:ut,logn:mt,log2:vt,log10:ft}[e])(Ke(t[0])));case"asin":case"acos":case"atan":case"sinh":case"cosh":case"tanh":return or((0,{asin:bt,acos:ht,atan:gt,sinh:At,cosh:Ct,tanh:kt}[e])(Ke(t[0])));case"and":return cr(t.every(se));case"or":return cr(t.some(se));case"xor":return se(t[0])!==se(t[1])?se(t[0])?t[0]:t[1]:cr(!1);case"&":case"|":case"^":case"<<":case">>":case">>>":const[o,u]=[Ke(t[0]),Ke(t[1])];return or("&"===e?o&u:"|"===e?o|u:"^"===e?o^u:"<<"===e?o<<u:">>"===e?o>>u:o>>>u);case"~":return or(~Ke(t[0]));case"odd?":case"even?":return cr(Ke(t[0])%2==("odd?"===e?1:0));case"pos?":case"neg?":case"zero?":{const r=Ke(t[0]);return cr("pos?"===e?r>0:"neg?"===e?r<0:!r)}case"null?":case"num?":case"bool?":case"str?":case"dict?":case"vec?":case"key?":case"func?":case"wild?":case"ext?":{const{t:r}=t[0];return cr("func?"===e&&("func"===r||"clo"===r)||Tt(e,0,qt(e)-1)===r)}case"type-of":return ur(t[0].t);case"substr?":return cr(Nt(We(t[1]),We(t[0])));case"idx":{let e=-1;return"str"===t[0].t?"str"!==t[1].t?dr("strings can only contain strings",n):e=St(t[1].v,t[0].v):"vec"===t[0].t&&(e=t[0].v.findIndex((e=>Ge(e,t[1])))),-1===e?{t:"null",v:void 0}:or(e)}case"set-at":{const[e,r,n]=t;return nt(Ue(e),r,n)}case"map":case"for":case"reduce":case"filter":case"remove":case"find":case"count":{const a=br(r,t.shift(),n);if("map"===e||"for"===e){const e=t.findIndex((({t:e})=>"vec"!==e&&"str"!==e&&"dict"!==e));if(-1!==e){const r=ae[t[e].t];dr(`argument ${e+2} must be either: string, vector, dictionary, not ${r}`,n)}}if("for"===e){const e=t.map(Ze),s=e.map(Jt),c=s.map(((e,t)=>It(s,0,t+1).reduce(((e,t)=>e*t))));c.unshift(1);const o=c.pop();o>r.loopBudget&&vr([{e:"Budget",m:"would exceed loop budget",errCtx:n}]);const u=[];for(let t=0;t<o;++t){const r=c.map(((e,r)=>ot(t/e%s[r])));u.push(a(e.map(((e,t)=>e[r[t]]))))}return lr(u)}if("map"===e){const e=t.map(Ze),r=pt(...e.map(Jt)),n=[];for(let t=0;t<r;++t)n.push(a(e.map((e=>e[t]))));return lr(n)}if("reduce"!==e){const r=t.shift(),n=Ze(r),s="remove"===e,c="find"===e,o="count"===e,u=[];let i=0;for(let e=0,r=Jt(n);e<r;++e){const r=se(a([n[e],...t]));if(o)i+=r?1:0;else if(c){if(r)return n[e]}else r!==s&&u.push(n[e])}switch(e){case"count":return or(i);case"find":return{t:"null",v:void 0}}return"str"===r.t?ur(u.map((e=>Qe(e))).join("")):"dict"===r.t?et(Et(u.map((e=>e.v)))):lr(u)}const s=t.pop();wt(["vec","dict","str"],s.t)||dr(`must reduce either: string, vector, dictionary, not ${ae[s.t]}`,n);const c=Ze(s);if(!Jt(c))return Jt(t)?t[0]:lr();if(Jt(c)<2&&!Jt(t))return c[0];let o=(Jt(t)?t:c).shift();for(let e=0,t=Jt(c);e<t;++e)o=a([o,c[e]]);return o}case"repeat":{const e=t.shift(),a=[],s=Ke(t[0]);if(s>r.rangeBudget&&vr([{e:"Budget",m:"would exceed range budget",errCtx:n}]),r.rangeBudget-=s,"func"===e.t||"clo"===e.t){const t=br(r,e,n);for(let e=0;e<s;++e)a.push(t([or(e)]))}else for(let t=0;t<s;++t)a.push(e);return lr(a)}case"->":{let e=t.shift();for(let a=0,s=Jt(t);a<s;++a)try{e=br(r,t[a],n)([e])}catch(e){if(fr(e))throw e.errors.forEach((e=>e.m=`-> arg ${a+2}: ${e.m}`)),e}return e}case"rand-int":case"rand":{const r=Jt(t),[n,a]=[r<2?0:Ke(t[0]),0===r?1+er("rand-int"===e):Ke(1===r?t[0]:t[1])];return or("rand-int"===e?Xt(n,a):Yt(n,a))}case"do":case"val":return"do"===e?t.pop():t.shift();case".":case"..":case"...":{const a=br(r,t.shift(),n);if("."===e)return a(t);let s=t;if(".."===e)s=Et(t.map((e=>"vec"===e.t?e.v:[e])));else{const e=s.pop();Bt(s,Et(["vec"===e.t?e.v:[e]]))}return a(s)}case"into":if("vec"===t[0].t)return lr($t(t[0].v,Ze(t[1])));if("vec"===t[1].t)return et($t(Et(Ze(t[0]).map(Ue)),t[1].v));{const{keys:e,vals:r}=Xe(t[0]),{keys:n,vals:a}=Xe(t[1]);return pr({keys:$t(e,n),vals:$t(r,a)})}case"omit":return(({keys:e,vals:t},r)=>{const[n,c]=[a(e),a(t)],o=e.findIndex((e=>Ge(e,r)));return-1!==o&&(s(n,o,1),s(c,o,1)),{t:"dict",v:{keys:n,vals:c}}})(Xe(t[1]),t[0]);case"assoc":return pr(rt(Xe(t[2]),t[0],t[1]));case"append":return lr($t(Ue(t[1]),[t[0]]));case"prepend":return lr($t([t[0]],Ue(t[1])));case"insert":{const e=Ue(t[2]);let r=Ke(t[1]);return 0===r?lr($t([t[0]],e)):-1===r?lr($t(e,[t[0]])):(r=r>0?pt(r,Jt(e)):lt(Jt(e)+1+r,0),lr($t($t(It(e,0,r),[t[0]]),It(e,r))))}case"sect":{const e=t[0],r="vec"===e.t?Jt(e.v):qt(We(e));let n=0,a=r;switch(Jt(t)){case 1:n=1;break;case 2:{const e=Ke(t[1]);e<0?a+=e:n+=e;break}case 3:{const e=Ke(t[1]),s=Ke(t[2]);n=e<0?r+e+(s<0?s:0):n+e,a=(s<0?a:n)+s;break}}return n=lt(n,0),a=pt(a,r),n>a?("vec"===e.t?lr:ur)():"vec"===e.t?lr(It(e.v,n,a)):ur(Tt(We(t[0]),n,a-n))}case"reverse":return"str"===t[0].t?ur(Je(Pt(Ze(t[0])))):lr(Pt(Ze(t[0])));case"flatten":{const e=Ue(t[0]),r=[],n=e=>e.forEach((e=>"vec"===e.t?n(e.v):r.push(e)));return n(e),lr(r)}case"shuffle":{const e=It(Ue(t[0]));for(let t=Jt(e)-1;t;--t){const r=ot(Xt(0,t+1));[e[t],e[r]]=[e[r],e[t]]}return lr(e)}case"sort":case"sort-by":{const a=Ze(t["sort"===e?0:1]);if(!Jt(a))return lr();const s=[];if("sort"===e)Bt(s,a.map((e=>[e,e])));else{const e=br(r,t[0],n);for(let t=0,r=Jt(a);t<r;++t)s.push([a[t],e([a[t]])])}const c=s[0][1].t;return s.some((([e,{t}])=>t!==c||!wt(["num","str"],t)))&&dr("can only sort by all number or all string",n),Mt(s,"num"===c?([e,t],[r,n])=>Ke(t)>Ke(n)?1:-1:([e,t],[r,n])=>We(t)>We(n)?1:-1),lr(s.map((([e])=>e)))}case"group-by":{const e=br(r,t[0],n),a={keys:[],vals:[]};if("dict"===t[1].t){const{keys:r,vals:n}=Xe(t[1]);for(let t=0,s=Jt(r);t<s;++t){const s=e([r[t],n[t]]),c=a.keys.findIndex((e=>Ge(e,s)));if(-1===c)a.keys.push(s),a.vals.push(pr({keys:[r[t]],vals:[n[t]]}));else{const e=Xe(a.vals[c]);e.keys.push(r[t]),e.vals.push(n[t])}}}else{const r=Ze(t[1]);for(let t=0,n=Jt(r);t<n;++t){const n=e([r[t]]),s=a.keys.findIndex((e=>Ge(e,n)));-1===s?(a.keys.push(n),a.vals.push(lr([r[t]]))):Ue(a.vals[s]).push(r[t])}}return pr(a)}case"part-by":{const e=br(r,t[0],n);if("dict"===t[1].t){const{keys:r,vals:n}=Xe(t[1]),a=[{keys:[],vals:[]},{keys:[],vals:[]}];for(let t=0,s=Jt(r);t<s;++t){const s=se(e([r[t],n[t]]))?0:1;a[s].keys.push(r[t]),a[s].vals.push(n[t])}return lr(a.map(pr))}{const r=Ze(t[1]),n=[[],[]];for(let t=0,a=Jt(r);t<a;++t)n[se(e([r[t]]))?0:1].push(r[t]);return lr(n.map(lr))}}case"frequencies":{const e=Ze(t[0]),r=[],n=[];return e.forEach((e=>{const t=r.findIndex((t=>Ge(e,t)));-1!==t?++n[t]:(r.push(e),n.push(1))})),pr({keys:r,vals:n.map(or)})}case"distinct":{const e=1===Jt(t)&&"vec"===t[0].t?Ue(t[0]):t,r=[];return e.forEach((e=>{r.some((t=>Ge(e,t)))||r.push(e)})),lr(r)}case"range":{const[e,a,s]=t.map(Ke),c=s&&s<0&&e<a,[o,u]=Jt(t)>1?c?[a-1,e-1]:[e,a]:[0,e],i=st((u-o)*(s||1))*(s||1),l=ut(at((u-o)/i));if(!l)return lr();l>r.rangeBudget&&vr([{e:"Budget",m:"would exceed range budget",errCtx:n}]),r.rangeBudget-=l;const p=Zt(l).map((e=>e*i+o));return lr(p.map(or))}case"empty?":return cr(!Jt(Ze(t[0])));case"keys":case"vals":return lr(Xe(t[0])["keys"===e?"keys":"vals"]);case"split":return lr(We(t[1]).split(We(t[0])).map(ur));case"join":return ur(Ze(t[1]).map(Qe).join(We(t[0])));case"replace":return ur(Wt(We(t[2]),We(t[0]),We(t[1])));case"starts?":case"ends?":return cr(("starts?"===e?Ht:Dt)(We(t[1]),We(t[0])));case"upper-case":case"lower-case":case"trim":case"trim-start":case"trim-end":return ur(("upper-case"===e?Ot:"lower-case"===e?Ft:"trim"===e?_t:"trim-start"===e?Rt:Lt)(We(t[0])));case"str*":{const e=We(t[0]);return ur(Zt(lt(ut(Ke(t[1])),0)).map((t=>e)).join(""))}case"char-code":if("str"===t[0].t){const e=Jt(t)>1?Ke(t[1]):0,r=We(t[0]);return qt(r)<=e||e<0?{t:"null",v:void 0}:or(Vt(Kt(r,e)))}return ur(zt(Ke(t[0])));case"time":return or(Ut());case"version":return or(220304);case"tests":return ur(function(e,t=!0){const r=[];for(let t=0;t<c(ze);++t){const{name:n,code:a,err:s,out:c}=ze[t],o={dict:new Map,output:""},u={funcs:{},vars:{}},i=N(),l=e({get:e=>Re(o,e),set:(e,t)=>Le(o,e,t),print:(e,t)=>{o.output+=e+(t?"\n":"")},exe:(e,t)=>Ve(o,e,t),functions:[],env:u,loopBudget:1e4,rangeBudget:1e3,callBudget:1e3,recurBudget:1e4},a,a,!0),p="errors"===l.kind?l.errors:[],m=(s||[]).join()===p.map((({e})=>e)).join(),v=!c||w(o.output)===c,f=N()-i,[d,y,x,h,b]=[P(`${t+1}`,3),P(n,24),P(`${Y(f)}ms`,6),v||c+"\t!=\t"+w(o.output),m||p.map((({e,m:t,errCtx:{line:r,col:n}})=>`${e} ${r}:${n}: ${t}`))];r.push({okErr:m,okOut:v,elapsedMs:f,display:`${d} ${y} ${x} ${h} ${b}`})}const n=r.reduce(((e,{elapsedMs:t})=>e+t),0),a=c(r.filter((({okOut:e,okErr:t})=>e&&t)));return b(r.filter((e=>!t||!e.okOut||!e.okErr)).map((e=>e.display)),[`---- ${a}/${c(r)} tests passed in ${Y(n)}ms.`])}($r,!(Jt(t)&&se(t[0]))).join("\n"));case"symbols":return lr(function(e,t=!0){let r=[];t&&Bt(r,ne),Bt(r,["args","PI","E"]),r=$t(r,Qt(re)),r=$t(r,Qt(e.env.funcs)),r=$t(r,Qt(e.env.vars));const n=["entry"];return r=r.filter((e=>!wt(n,e))),Mt(r,((e,t)=>e>t?1:-1))}(r,!1).map(ur));case"eval":{delete r.env.funcs.entry;const e=`${n.invokeId} eval`;try{return kr(r,We(t[0]),e,[])||{t:"null",v:void 0}}catch(e){fr(e)&&vr([{e:"Eval",m:"error within evaluated code",errCtx:n},...e.errors])}}case"about":{const e=We(t[0]),r=re[e];if(!r)return{t:"null",v:void 0};const n=[],a=(e,t)=>n.push(ir(`:${e}`),t),s=e=>lr(e.map((e=>tr(e)?lr(e.map(ur)):ur(e))));return a("external?",cr(!!r.external)),r.exactArity?a("exact-arity",or(r.exactArity)):(r.minArity&&a("minimum-arity",or(r.minArity)),r.maxArity&&a("maximum-arity",or(r.maxArity))),(r.params||r.numeric)&&a("in-types",s(r.params?r.params:["num"])),(r.returns||!0===r.numeric)&&a("out-types",s(r.returns?r.returns:["num"])),et(n)}case"recur":return nr=t,{t:"null",v:void 0};case"reset":return r.env.vars={},r.env.funcs={},ar=[],{t:"null",v:void 0}}return vr([{e:"Unexpected",m:"operation doesn't exist",errCtx:n}])}const xr=(e,t)=>[{e:"Arity",m:`${ae[e]} as op requires one sole argument`,errCtx:t}];function hr(e,t,r,n){if(n){const n=ce(e,Jt(t),r);if(n)return n}return oe(e,t.map((e=>[e.t])),r)||!1}function br(e,t,r,n=!0){if("str"===t.t||"func"===t.t){const a=t.v;return re[a]?re[a].external?e=>{const t=hr(a,e,r,n);t&&vr(t);const s=rr[a](e);if("err"===s.kind)throw[{e:"External",m:s.err,errCtx:r}];return s.value}:t=>{const s=hr(a,t,r,n);return s&&vr(s),yr(a,t,e,r)}:a in e.env.funcs&&"entry"!==a?t=>Cr(e,e.env.funcs[a],t):a in e.env.vars?br(e,e.env.vars[a],r):a in sr?br(e,sr[a],r):Ht(a,"$")?n=>{if(Jt(n)||vr(xr(t.t,r)),!e.set)return vr([{e:"External",m:'"set" feature not implemented on this platform',errCtx:r}]);const s=e.set(Tt(a,1),n[0]);return s&&vr([{e:"External",m:s,errCtx:r}]),n[0]}:t=>{if(!e.exe)return vr([{e:"External",m:`operation "${a}" does not exist"`,errCtx:r}]);const n=e.exe(a,t);return"val"===n.kind?n.value:vr([{e:"External",m:n.err,errCtx:r}])}}if("clo"===t.t)return r=>Cr(e,t.v,r);if("key"===t.t)return e=>(Jt(e)||vr(xr(t.t,r)),"dict"===e[0].t?tt(Xe(e[0]),t):"vec"===e[0].t?Ue(e[0]).find((e=>Ge(e,t)))??{t:"null",v:void 0}:vr(le(r,[e[0].t])));if("num"===t.t){const e=ot(t.v);return n=>{Jt(n)||vr(xr(t.t,r));const a=n[0];if("str"!==a.t&&"vec"!==a.t&&"dict"!==a.t)return vr(ie(r,[a.t]));const s=Ze(a),c=Jt(s);return e>=0&&e>=c||e<0&&-e>c?{t:"null",v:void 0}:e<0?s[c+e]:s[e]}}if("vec"===t.t){const{v:e}=t;return n=>(Jt(n)||vr(xr(t.t,r)),e.find((e=>Ge(e,n[0])))??{t:"null",v:void 0})}if("dict"===t.t){const e=t.v;return t=>1===Jt(t)?tt(e,t[0]):2===Jt(t)?pr(rt(e,t[0],t[1])):vr([{e:"Arity",m:"provide 1 or 2 arguments for dictionary",errCtx:r}])}if("bool"===t.t){const e=t.v;return t=>!Jt(t)||Jt(t)>2?vr([{e:"Arity",m:"provide 1 or 2 arguments for boolean",errCtx:r}]):e?t[0]:Jt(t)>1?t[1]:{t:"null",v:void 0}}return e=>vr([{e:"Operation",m:`${Qe(t)} is an invalid operation`,errCtx:r}])}function gr(e){const t=(e,t,r)=>rt(e,ir(t),r);return e.map((({e,m:r,errCtx:n})=>{let a=t({keys:[],vals:[]},":e",ur(e));return a=t(a,":m",ur(r)),a=t(a,":line",or(n.line)),a=t(a,":col",or(n.col)),pr(a)}))}function Ar(e,t){let r=e;for(let e=0,n=Jt(t)-1;e<n;++e){const a=r[t[e]];if("vec"!==a.t)return"str"===a.t&&e+1===n&&t[e+1]<qt(a.v)?ur(Kt(a.v,t[e+1])):{t:"null",v:void 0};r=a.v}const n=t[Jt(t)-1];return n>=Jt(r)?{t:"null",v:void 0}:r[n]}function Cr(e,t,r,n=!1){--e.callBudget,n||(ar.push({}),sr=ar[Jt(ar)-1]);const a=[];for(let n=0,s=Jt(t.ins);n<s;++n){const c=t.ins[n],{errCtx:o}=t.ins[n],u=e.loopBudget<1;switch((u||e.callBudget<1)&&vr([{e:"Budget",m:(u?"looped":"called")+" too many times",errCtx:o}]),c.typ){case"val":a.push(c.value);break;case"var":e.env.vars[c.value]=a[Jt(a)-1];break;case"let":sr[c.value]=a[Jt(a)-1];break;case"dle":case"dva":{const t=a.pop();let r;c.value.forEach((({name:n,position:a})=>{r="dva"===c.typ?e.env.vars[n]=Ar([t],a):sr[n]=Ar([t],a)})),a.push(r);break}case"npa":case"upa":{const e=c.value;-1===e?a.push(lr(r)):Jt(r)<=e?a.push({t:"null",v:void 0}):a.push(r[e]);break}case"dpa":a.push(Ar(r,c.value));break;case"ref":{const t=c.value;if(re[t])a.push(mr(t));else if(Ht(t,"$")){if(!e.get)return vr([{e:"External",m:'"get" feature not implemented on this platform',errCtx:o}]);const r=e.get(Tt(t,1));if("err"===r.kind)return vr([{e:"External",m:r.err,errCtx:o}]);a.push(r.value)}else t in e.env.vars?a.push(e.env.vars[t]):t in sr?a.push(sr[t]):t in e.env.funcs?a.push(mr(t)):vr([{e:"Reference",m:`"${t}" did not exist`,errCtx:o}]);break}case"exa":case"exe":{const s=a.pop(),u=br(e,s,o,"exa"===c.typ),i=c.value,l=jt(a,Jt(a)-i,i);try{a.push(u(l))}catch(e){if(fr(e)){const r=It(t.ins,n).findIndex((e=>"cat"===e.typ));if(-1!==r){n+=r,sr.errors=lr(gr(e.errors));break}}throw e}nr&&(ar[Jt(ar)-1]={},n=-1,r=nr,nr=void 0,--e.recurBudget,e.recurBudget||vr([{e:"Budget",m:"recurred too many times",errCtx:o}]));break}case"or":se(a[Jt(a)-1])?n+=c.value:a.pop();break;case"mat":{const e=a[Jt(a)-2];Ge(e,a.pop())?a.pop():n+=c.value;break}case"if":se(a.pop())||(n+=c.value);break;case"jmp":case"cat":n+=c.value;break;case"loo":n+=c.value,--e.loopBudget;break;case"pop":1===c.value?a.pop():jt(a,Jt(a)-c.value,c.value);break;case"ret":c.value||a.push({t:"null",v:void 0}),n=s;break;case"clo":{const s=It(c.value.derefs).map((t=>{const r="val"===t.typ&&"str"===t.value.t&&(sr[t.value.v]??e.env.vars[t.value.v]);return r?{typ:"val",value:r}:t})),o=Cr(e,{ins:s},r,!0).v,u=It(t.ins,n+1,n+1+c.value.length);a.push({t:"clo",v:me(c.value,u,o)}),n+=c.value.length;break}}}return n?lr(a):(ar.pop(),sr=ar[Jt(ar)-1],a[Jt(a)-1])}function kr(e,t,r,n){const a=_e(t,r);if(Jt(a.errors)&&vr(a.errors),e.env.funcs={...e.env.funcs,...a.funcs},"entry"in e.env.funcs)return Cr(e,e.env.funcs.entry,n)}function $r(e,t,r,n=!1,a=[]){return function(e,t,r){const{callBudget:n,loopBudget:a,recurBudget:s,rangeBudget:c}=e;e.functions.forEach((({name:e,definition:t,handler:r})=>{if(re[e]&&!rr[e])throw"Redefining internal operations is disallowed.";re[e]={...t,external:!0},rr[e]=r}));let o,u=[];try{o=t()}catch(e){fr(e)&&(u=e.errors)}return e.functions.forEach((({name:e})=>{delete re[e],delete rr[e]})),[e.callBudget,e.recurBudget]=[n,s],[e.loopBudget,e.rangeBudget]=[a,c],delete e.env.funcs.entry,ar=[],Jt(u)?{kind:"errors",errors:u}:(r&&o&&e.print(Qe(o),!0),o?{kind:"val",value:o}:{kind:"empty"})}(e,(()=>kr(e,t,r,a)),n)}const wr=new Map,Er=/[\[\]\(\) ,]/;function Br(e,t,r,n=!0){return r=r?`-${r}`:`${N()}`,wr.set(r,t),function(e){if("errors"!==e.kind)return[];let t=[];const r=e=>t.push({type:"message",text:e}),n=e=>t.push({type:"error",text:e});return e.errors.forEach((({e,m:t,errCtx:{line:a,col:s,invokeId:c}})=>{const u=wr.get(c);if(!u)return void r(`${e} Error: ${c} line ${a} col ${s}: ${t}\n`);const i=u.split("\n")[a-1],p=l(i,s-1).split(Er)[0],m=E(l(i,0,s-1)),v=d(c,"-")?`${l(c,1)} `:"";if(r(`${v}${P(`${a}`,4)} ${m}`),p){const e=l(i,s-1+o(p));n(p),r(`${e}\n`)}else{const e=l(i,s);n(i[s-1]),r(`${e}\n`)}r(`${e} Error: ${t}.\n`)})),t}($r(e,t,r,n))}window.insitux=t.invoker})();
//# sourceMappingURL=insitux.lib.min.js.map