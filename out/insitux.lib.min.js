(()=>{"use strict";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.d(t,{invoker:()=>ar});var r={};e.r(r),e.d(r,{abs:()=>S,ceil:()=>W,charCode:()=>I,codeChar:()=>P,concat:()=>h,cos:()=>F,ends:()=>y,flat:()=>x,floor:()=>V,getTimeMs:()=>N,has:()=>m,isArray:()=>u,isNum:()=>i,len:()=>o,log10:()=>X,log2:()=>U,logn:()=>z,lowerCase:()=>C,max:()=>T,min:()=>q,objKeys:()=>H,padEnd:()=>E,push:()=>b,randInt:()=>M,randNum:()=>j,range:()=>D,reverse:()=>A,round:()=>L,sign:()=>K,sin:()=>O,slen:()=>c,slice:()=>a,sortBy:()=>g,splice:()=>s,sqrt:()=>R,starts:()=>f,strIdx:()=>d,sub:()=>v,subIdx:()=>p,substr:()=>l,tan:()=>_,toNum:()=>n,trim:()=>$,trimEnd:()=>B,trimStart:()=>w,upperCase:()=>k});const n=e=>Number(e),a=(e,t,r)=>e.slice(t,r),s=(e,t,r)=>e.splice(t,r),o=e=>e.length,c=e=>e.length,i=e=>!Number.isNaN(Number(e)),u=e=>Array.isArray(e),l=(e,t,r)=>e.substring(t,t+(r??e.length)),d=(e,t)=>e[t],v=(e,t)=>e.includes(t),p=(e,t)=>e.indexOf(t),m=(e,t)=>e.includes(t),f=(e,t)=>e.startsWith(t),y=(e,t)=>e.endsWith(t),x=e=>e.flat(),h=(e,t)=>e.concat(t),b=(e,t)=>e.push(...t),g=(e,t)=>e.sort(t),A=e=>e.reverse(),C=e=>e.toLowerCase(),k=e=>e.toUpperCase(),$=e=>e.trim(),w=e=>e.trimStart(),B=e=>e.trimEnd(),E=(e,t)=>e.padEnd(t),I=e=>e.charCodeAt(0),P=e=>String.fromCharCode(e),j=(e,t)=>e+Math.random()*(t-e),M=(e,t)=>Math.floor(j(e,t)),D=e=>[...Array(e).keys()],H=e=>Object.keys(e),N=()=>(new Date).getTime(),S=Math.abs,q=Math.min,T=Math.max,O=Math.sin,F=Math.cos,_=Math.tan,R=Math.sqrt,L=Math.round,V=Math.floor,W=Math.ceil,K=Math.sign,z=Math.log,U=Math.log2,X=Math.log10,Y={print:{returns:["null"]},"print-str":{returns:["null"]},"!":{exactArity:1,returns:["bool"]},"=":{minArity:2},"!=":{minArity:2},"+":{minArity:2,numeric:!0},"-":{minArity:1,numeric:!0},"*":{minArity:2,numeric:!0},"/":{minArity:2,numeric:!0},"//":{minArity:2,numeric:!0},"**":{minArity:1,maxArity:2,numeric:!0},"<":{minArity:2,numeric:!0},">":{minArity:2,numeric:!0},"<=":{minArity:2,numeric:!0},">=":{minArity:2,numeric:!0},"fast=":{exactArity:2},"fast!=":{exactArity:2},"fast+":{exactArity:2,numeric:!0},"fast-":{exactArity:2,numeric:!0},"fast*":{exactArity:2,numeric:!0},"fast/":{exactArity:2,numeric:!0},"fast//":{exactArity:2,numeric:!0},"fast<":{exactArity:2,numeric:!0},"fast>":{exactArity:2,numeric:!0},"fast<=":{exactArity:2,numeric:!0},"fast>=":{exactArity:2,numeric:!0},inc:{exactArity:1,numeric:!0},dec:{exactArity:1,numeric:!0},min:{minArity:2,numeric:!0},max:{minArity:2,numeric:!0},abs:{exactArity:1,numeric:!0},sqrt:{exactArity:1,numeric:!0},round:{minArity:1,maxArity:2,numeric:!0},floor:{exactArity:1,numeric:!0},ceil:{exactArity:1,numeric:!0},logn:{exactArity:1,numeric:!0},log2:{exactArity:1,numeric:!0},log10:{exactArity:1,numeric:!0},and:{minArity:1},or:{minArity:1},xor:{exactArity:2},"&":{exactArity:2,numeric:!0},"|":{exactArity:2,numeric:!0},"^":{exactArity:2,numeric:!0},"~":{exactArity:1,numeric:!0},"<<":{exactArity:2,numeric:!0},">>":{exactArity:2,numeric:!0},">>>":{exactArity:2,numeric:!0},"odd?":{exactArity:1,numeric:"in only",returns:["bool"]},"even?":{exactArity:1,numeric:"in only",returns:["bool"]},"pos?":{exactArity:1,numeric:"in only",returns:["bool"]},"neg?":{exactArity:1,numeric:"in only",returns:["bool"]},"zero?":{exactArity:1,numeric:"in only",returns:["bool"]},"null?":{exactArity:1,returns:["bool"]},"num?":{exactArity:1,returns:["bool"]},"bool?":{exactArity:1,returns:["bool"]},"str?":{exactArity:1,returns:["bool"]},"vec?":{exactArity:1,returns:["bool"]},"dict?":{exactArity:1,returns:["bool"]},"key?":{exactArity:1,returns:["bool"]},"func?":{exactArity:1,returns:["bool"]},"wild?":{exactArity:1,returns:["bool"]},"ext?":{exactArity:1,returns:["bool"]},rem:{minArity:2,numeric:!0},sin:{exactArity:1,numeric:!0},cos:{exactArity:1,numeric:!0},tan:{exactArity:1,numeric:!0},vec:{returns:["vec"]},dict:{returns:["dict"]},len:{exactArity:1,params:[["str","vec","dict"]],returns:["num"]},"to-num":{exactArity:1,params:[["str","num"]],returns:["num","null"]},"to-key":{exactArity:1,params:[["str","num"]],returns:["key"]},"has?":{exactArity:2,params:["str","str"],returns:["bool"]},idx:{exactArity:2,params:[[],["str","vec"]],returns:["num"]},"set-at":{exactArity:3,params:["vec",[],["vec","dict"]],returns:["vec","dict"]},map:{minArity:2,returns:["vec"]},for:{minArity:2,returns:["vec"]},reduce:{minArity:2,maxArity:3},filter:{minArity:2,params:[[],["vec","dict","str"]],returns:["vec","str","dict"]},remove:{minArity:2,params:[[],["vec","dict","str"]],returns:["vec","str","dict"]},find:{minArity:2,params:[[],["vec","dict","str"]]},count:{minArity:2,params:[[],["vec","dict","str"]],returns:["num"]},repeat:{minArity:2,params:[[],"num"]},"->":{minArity:2},str:{returns:["str"]},rand:{maxArity:2,numeric:!0,returns:["num"]},"rand-int":{maxArity:2,numeric:!0,returns:["num"]},".":{minArity:1},"..":{minArity:2},"...":{minArity:2},into:{exactArity:2,params:[["vec","dict"],["vec","dict"]],returns:["vec","dict"]},push:{minArity:2,maxArity:3,params:[["vec","dict"]],returns:["vec","dict"]},sect:{minArity:1,maxArity:3,params:[["vec","str"],"num","num"],returns:["vec","str"]},reverse:{exactArity:1,params:[["vec","str"]],returns:["vec","str"]},sort:{minArity:1,maxArity:2,params:[["vec","dict","str"]],returns:["vec"]},keys:{exactArity:1,params:["dict"]},vals:{exactArity:1,params:["dict"]},do:{minArity:1},val:{minArity:1},range:{minArity:1,maxArity:3,numeric:"in only",returns:["vec"]},"empty?":{exactArity:1,params:[["str","vec","dict"]],returns:["bool"]},split:{minArity:1,maxArity:2,params:["str","str"],returns:["vec"]},join:{exactArity:2,params:["str",["vec","dict","str"]],returns:["str"]},"starts?":{exactArity:2,params:["str","str"],returns:["bool"]},"ends?":{exactArity:2,params:["str","str"],returns:["bool"]},"lower-case":{exactArity:1,params:["str"],returns:["str"]},"upper-case":{exactArity:1,params:["str"],returns:["str"]},trim:{exactArity:1,params:["str"],returns:["str"]},"trim-start":{exactArity:1,params:["str"],returns:["str"]},"trim-end":{exactArity:1,params:["str"],returns:["str"]},"str*":{exactArity:2,params:["str","num"],returns:["str"]},"char-code":{minArity:1,maxArity:2,params:[["str","num"],"num"],returns:["str","num","null"]},time:{exactArity:0,returns:["num"]},version:{exactArity:0,returns:["num"]},tests:{minArity:0,maxArity:1,params:["bool"],returns:["str"]},symbols:{exactArity:0,returns:["vec"]},eval:{exactArity:1,params:["str"]},reset:{exactArity:0},recur:{}},G={null:"null",str:"string",num:"number",bool:"boolean",key:"keyword",ref:"reference",vec:"vector",dict:"dictionary",func:"function",clo:"closure",wild:"wildcard",ext:"external"},J=e=>"bool"===e.t?e.v:"null"!==e.t;function Q(e,t,r){const{exactArity:n,maxArity:a,minArity:s}=Y[e],o=(n,a)=>[{e:"Arity",m:`${e} needs ${n} argument${1!==a?"s":""}, not ${t}`,errCtx:r}];if(void 0!==n){if(t!==n)return o(`exactly ${n}`,n)}else{if(s&&!a&&t<s)return o(`at least ${s}`,s);if(!s&&a&&t>a)return o(`at most ${a}`,a);if(s&&a&&(t<s||t>a))return o(`between ${s} and ${a}`,a)}}function Z(e,t,r,n=!1){const{params:a,numeric:s}=Y[e],c=o(t);if(s){const a=t.findIndex((e=>!!o(e)&&(n?!e.find((e=>"num"===e)):"num"!==e[0])));if(-1===a)return;const s=t[a].map((e=>G[e])).join(", ");return[ee(`${e} takes numeric arguments only, not ${s}`,r)]}if(!a)return;const i=a.map(((e,r)=>{if(r>=c||!t[r])return!1;const a=t[r];if(u(e)){if(!o(e)||(n?!o(a)||a.some((t=>m(e,t))):1===o(a)&&m(e,a[0])))return!1;const t=a.map((e=>G[e]));return`argument ${r+1} must be either: ${e.map((e=>G[e])).join(", ")}, not ${t}`}{if(n?!o(a)||m(a,e):1===o(a)&&e===a[0])return!1;const t=a.map((e=>G[e]));return`argument ${r+1} must be ${G[e]}, not ${t}`}})).filter((e=>!!e));return o(i)?i.map((e=>ee(e,r))):void 0}const ee=(e,t)=>({e:"Type",m:e,errCtx:t});function te(e,t){const r=t.map((e=>G[e])).join(", ");return[ee(`number as operation argument must be string, vector, or dictionary, not ${r}`,e)]}function re(e,t){const r=t.map((e=>G[e])).join(", ");return[ee(`keyword as operation argument must be dictionary or vector, not ${r}`,e)]}const{has:ne,flat:ae,push:se,slice:oe,splice:ce}=r,{slen:ie,starts:ue,sub:le,substr:de,strIdx:ve,subIdx:pe}=r,{isNum:me,len:fe,toNum:ye}=r,xe={t:"null",v:void 0},he={t:"bool",v:!1},be=e=>!!e&&"errCtx"in e,ge=(e,t=0)=>{if(be(e))return"";const r=e[t];return be(r)&&ne(["sym","str"],r.typ)&&r.text||""},Ae=e=>e.map((e=>be(e)?(({typ:e,text:t})=>"str"===e?`"${t}"`:t)(e):`(${Ae(e)})`)).join(" "),Ce=(e,t)=>be(e)?$e(e,t):ke(e,t);function ke(e,t,r=!0){if(!fe(e))return[];const n=e=>Ce(e,t);let a=e.shift(),s=n(a);const{errCtx:o}=s[0];if(be(a)&&"sym"===a.typ){if(a.text in Y){const{exactArity:t,minArity:r}=Y[a.text],n=t??r;n&&1!==n&&fe(e)+1===n&&(e.unshift(a),a={typ:"sym",text:"@",errCtx:a.errCtx})}ne(["var","let"],a.text)&&fe(e)&&fe(e)%2&&(e.unshift(a),e.push({typ:"sym",text:"%",errCtx:a.errCtx}),a={typ:"sym",text:"#",errCtx:a.errCtx});const{text:o,errCtx:c}=a,i=(e,t=c)=>[{typ:"err",value:e,errCtx:t}];if(ne(["if","if!","when","match"],o)&&!fe(e))return i("provide a condition");if(ne(["if","if!"],o)){if(1===fe(e))return i("provide at least one branch");if(fe(e)>3)return i("provide fewer than two branches");const t=e.map(n),[r,a]=t;let s=t[2];return s||(s=[{typ:"val",value:xe,errCtx:c}]),[...r,..."if!"===o&&[{typ:"val",value:{t:"func",v:"!"},errCtx:c},{typ:"exe",value:1,errCtx:c}]||[],{typ:"if",value:fe(a)+1,errCtx:c},...a,{typ:"jmp",value:fe(s),errCtx:c},...s]}if("when"===o){if(1===fe(e))return i("provide a body");const t=e.map(n),[r,a]=[t[0],oe(t,1)],s=ae(a);return[...r,{typ:"if",value:fe(s)+1,errCtx:c},...s,{typ:"jmp",value:1,errCtx:c},{typ:"val",value:xe,errCtx:c}]}if("match"===o){const t=e.map(n),[r,a]=[t[0],oe(t,1)],s=fe(a)%2?a.pop():[];if(!fe(a))return i("provide at least one case");const o=fe(s);let u=a.reduce(((e,t)=>e+fe(t)),0)+(o||2)+fe(a);const l=r;for(;fe(a)>1;){const[e,t]=[a.shift(),a.shift()];se(l,e),l.push({typ:"mat",value:fe(t)+1,errCtx:c}),se(l,t),u-=fe(e)+fe(t)+2,l.push({typ:"jmp",value:u,errCtx:c})}return fe(s)?se(l,s):(l.push({typ:"pop",value:1,errCtx:c}),l.push({typ:"val",value:he,errCtx:c})),l}if("catch"===o){if(fe(e)<2)return i("provide at least 2 arguments");const t=n(e.pop());return[...ae(e.map(n)),{typ:"cat",value:fe(t),errCtx:c},...t]}if("and"===o||"or"===o||"while"===o){const t=e.map(n);let r=t.reduce(((e,t)=>e+fe(t)),0);if(fe(t)<2)return i("provide at least 2 arguments");const a=[];if("while"===o){a.push({typ:"val",value:xe,errCtx:c}),r+=2;const[e,n]=[t[0],oe(t,1)];return se(a,e),a.push({typ:"if",value:r-fe(e),errCtx:c}),a.push({typ:"pop",value:fe(n),errCtx:c}),se(a,ae(n)),a.push({typ:"loo",value:-(r+1),errCtx:c}),a}r+=fe(t),r+=ye("and"===o);const s="and"===o?"if":"or";for(let e=0;e<fe(t);++e)se(a,t[e]),r-=fe(t[e]),a.push({typ:s,value:r,errCtx:c}),--r;return"and"===o&&se(a,[{typ:"val",value:{t:"bool",v:!0},errCtx:c},{typ:"jmp",value:1,errCtx:c}]),a.push({typ:"val",value:he,errCtx:c}),a}if("var"===o||"let"===o){const r=e.filter(((e,t)=>!(t%2))),a=e.filter(((e,t)=>!!(t%2)));if(!fe(r))return i("provide at least 1 declaration name and value");if(fe(r)>fe(a))return i("provide a value after each declaration name");const s=[];for(let e=0,u=fe(r);e<u;++e){se(s,n(a[e]));const u=r[e];if(be(u)){const n=Ce(r[e],t);if(fe(n)>1||"ref"!==n[0].typ)return i("declaration name must be symbol",n[0].errCtx);s.push({typ:o,value:n[0].value,errCtx:c})}else{const{shape:e,errors:t}=we([u],!0);if(fe(t))return t;const r="var"===o?"dva":"dle";s.push({typ:r,value:e,errCtx:c})}}return s}if("var!"===o||"let!"===o){if(fe(e)<2)return i("provide 1 declaration name and 1 function");const t=e.map(n),[r,a,s]=[t[0][0],t[1],oe(t,2)];if("ref"!==r.typ)return i("declaration name must be symbol",r.errCtx);const u=[{typ:"ref",value:r.value,errCtx:c}];se(u,[...ae(s),...a]),u.push({typ:"exe",value:fe(s)+1,errCtx:c});const l="var!"===o?"var":"let";return u.push({typ:l,value:r.value,errCtx:c}),u}if("#"===o||"@"===o||"fn"===o){const r=[];let n=Ae(e);if(n="fn"===o?`(fn ${n})`:`${o}(${n})`,"fn"===o){const n=we(e,!1);if(t=n.shape,se(r,n.errors),!fe(e))return i("provide a body");e.unshift({typ:"sym",text:"do",errCtx:c})}"@"===o&&(e=[{typ:"sym",text:"...",errCtx:c},...e,{typ:"sym",text:"args",errCtx:c}]),se(r,ke(e,t,"@"!==o));const a=r.filter((e=>"err"!==e.typ)),s=r.filter((e=>"err"===e.typ));if(fe(s))return s;"fn"===o&&a.forEach((e=>{"npa"===e.typ&&(e.typ="upa")}));const u=[],l=[];for(let e=0;e<fe(a);++e){const t=a[e],r="val"===t.typ&&e+1<fe(a)&&"exe"===a[e+1].typ&&("func"===t.value.t&&!Y[t.value.v]||"str"===t.value.t);l[e]="ref"===t.typ&&!a.find((e=>"let"===e.typ&&e.value===t.value))||"npa"===t.typ||r,l[e]&&u.push(t)}return[{typ:"@"===o?"par":"clo",value:{name:n,closureIns:a,captureIns:u,captured:l},errCtx:c}]}if(Y[o]&&r){const t=Q(o,fe(e),c),r=(e,t=c)=>[{typ:"err",value:e,errCtx:t}];se(s,t?.map((e=>r(e.m)[0]))??[]),t||2===fe(e)&&Y[`fast${o}`]&&(s=n({typ:"sym",text:`fast${o}`,errCtx:c}))}}const c=e.map(n),i=ae(c);if("return"===ge([a]))return[...i,{typ:"ret",value:!!fe(c),errCtx:o}];if("ref"===s[0].typ){const{value:e,errCtx:t}=s[0];s[0]={typ:"val",value:{t:"str",v:e},errCtx:t}}se(i,s);const u=fe(s)>1?"exa":"exe";return[...i,{typ:u,value:fe(c),errCtx:o}]}function $e(e,t){if(be(e)){const{errCtx:r}=e;if("str"===e.typ)return[{typ:"val",value:{t:"str",v:e.text},errCtx:r}];if("num"===e.typ)return[{typ:"val",value:{t:"num",v:ye(e.text)},errCtx:r}];if("sym"===e.typ){const{text:n}=e,a=t.map((({name:e})=>e));if("true"===n||"false"===n)return[{typ:"val",value:{t:"bool",v:"true"===n},errCtx:r}];if("null"===n)return[{typ:"val",value:xe,errCtx:r}];if("_"===n)return[{typ:"val",value:{t:"wild",v:void 0},errCtx:r}];if(ue(n,":"))return[{typ:"val",value:{t:"key",v:n},errCtx:r}];if(ue(n,"%")&&me(de(n,1))){const e=ye(de(n,1));return e<0?[{typ:"val",value:xe,errCtx:r}]:[{typ:"upa",value:e,errCtx:r}]}if(ne(a,n)){const e=t.find((({name:e})=>e===n));return 1===fe(e.position)?[{typ:"npa",value:e.position[0],errCtx:r}]:[{typ:"dpa",value:e.position,errCtx:r}]}return"args"===n?[{typ:"upa",value:-1,errCtx:r}]:"PI"===n||"E"===n?[{typ:"val",value:{t:"num",v:"PI"===n?3.141592653589793:2.718281828459045},errCtx:r}]:Y[n]?[{typ:"val",value:{t:"func",v:n},errCtx:r}]:[{typ:"ref",value:n,errCtx:r}]}return[]}return fe(e)?ke(e,t):[]}function we(e,t,r=[]){const n=[],a=[];let s=0;for(;fe(e)>(t?0:1)&&(be(e[0])||"vec"===ge(e[0]));){const t=e.shift();if(be(t)){const{typ:e,errCtx:o}=t;"sym"===e?n.push({name:t.text,position:[...r,s]}):a.push({typ:"err",value:"provide parameter name",errCtx:o})}else{t.shift();const e=we(t,!0,[...r,s]);se(n,e.shape),se(a,e.errors)}++s}return{shape:n,errors:a}}function Be({name:e,nodes:t}){const{shape:r,errors:n}=we(t,!1),a=[...n,...ae(t.map((e=>$e(e,r))))];for(let e=0,t=fe(a);e<t;e++){const{typ:t,value:r,errCtx:n}=a[e];if("err"===t)return{e:"Parse",m:r,errCtx:n}}return{name:e,ins:a}}function Ee(e){const t=[];for(let r=0,n=fe(e);r<n;++r){const n=e[r];switch(n.typ){case"val":t.push({types:[n.value.t],val:n.value});break;case"exa":case"exe":{const e=t.pop(),r=ce(t,fe(t)-n.value,n.value),a=e=>r.findIndex((({types:t})=>t&&!e.find((e=>ne(t,e))))),s=t=>e.val?e.val.t===t:e.types&&1===fe(e.types)&&e.types[0]===t;if(e.val&&"func"===e.val.t){if("recur"===e.val.v){ce(t,fe(t)-n.value,n.value);break}const a=Z(e.val.v,r.map((e=>e.types??[])),n.errCtx,!0);if(a)return a;const{returns:s,numeric:o}=Y[e.val.v];t.push(o&&"in only"!==o?{types:["num"]}:{types:s})}else if(s("num")){const e=a(["str","dict","vec"]);if(-1!==e)return te(n.errCtx,r[e].types);t.push({})}else if(s("key")){const e=a(["dict","vec"]);if(-1!==e)return re(n.errCtx,r[e].types);t.push({})}else s("str")||s("bool")?t.push({}):e.types||e.val||t.push({});break}case"or":t.pop(),t.push({}),r+=n.value;break;case"cat":case"var":case"let":case"dva":case"dle":case"loo":case"jmp":break;case"clo":case"par":{const e=Ee(n.value.closureIns);if(e)return e}case"ref":case"npa":case"upa":case"dpa":t.push({});break;case"if":{t.pop(),t.push({});const a=Ee(oe(e,r+1,n.value+1));if(a)return a;r+=n.value-1;break}case"mat":t.pop(),t.pop(),r+=n.value,r+=e[r].value,t.push({});break;case"pop":ce(t,fe(t)-n.value,n.value);break;case"ret":n.value&&t.pop()}}}function Ie(e,t){const{tokens:r,stringError:n}=function(e,t,r=!0,n=!1){const a=[],s=e=>le("0123456789",e);let[o,c,i,u]=[!1,1,0,[1,0]],[l,d,v]=[!1,!1,!1];for(let p=0,m=ie(e);p<m;++p){const f=ve(e,p),y=p+1!==m?ve(e,p+1):"";if(++i,"\\"===f&&o){a[fe(a)-1].text+={n:"\n",t:"\t",r:"\r",'"':'"'}[y]||("\\"===y?"\\":`\\${y}`),++i,++p;continue}const x={invokeId:t,line:c,col:i};if('"'===f){(o=!o)&&(u=[c,i],a.push({typ:"str",text:"",errCtx:x})),d=l=!1;continue}const h=le(" \t\n\r,",f);if(!o&&h){d=l=!1,"\n"===f&&(++c,i=0);continue}if(!o&&";"===f){const t=pe(de(e,++p),"\n"),r=de(e,p,t>0?t:m-p);p+=ie(r),++c,i=0,n&&a.push({typ:"rem",text:r,errCtx:x});continue}const b=le("()[]{}",f);if(d&&!s(f)){const e="x"===f&&"0"===a[fe(a)-1].text;v=v||e,d="b"===f&&"0"===a[fe(a)-1].text||"."===f&&!le(a[fe(a)-1].text,".")||v&&(e||le("ABCDEFabcdef",f)),d||b||h||(l=!0,a[fe(a)-1].typ="sym")}if(l&&b&&(l=!1),!o&&!l&&!d){if(b){const e=-1===pe("[{(",f)?")":"(";a.push({typ:e,text:r?e:f,errCtx:x}),!r||"["!==f&&"{"!==f||a.push({typ:"sym",text:"["===f?"vec":"dict",errCtx:x});continue}d=s(f)||"."===f&&s(y)||"-"===f&&(s(y)||"."===y),v=l=!d;const e=l?"sym":"num";a.push({typ:e,text:"",errCtx:x})}a[fe(a)-1].text+=f}return{tokens:a,stringError:o?u:void 0}}(e,t),a=function(e,t){const r=fe(t)?t[0].errCtx.invokeId:"",n=[],a=(e,t)=>n.push({e:"Parse",m:e,errCtx:t});if(e){const[t,s]=e;return a("unmatched double quotation marks",{invokeId:r,line:t,col:s}),n}const s=e=>fe(t.filter((({typ:t})=>t===e))),[o,c]=[s("("),s(")")];{const[e,n]=function(e,t,r){const n=r>=t,[a,s]=[n?"(":")",n?")":"("],o=n?1:-1;for(let t=fe(e),r=n?0:t-1,c=0;n?r<t:r>=0;r+=o){const{typ:t,errCtx:{line:n,col:o}}=e[r];if(c+=ye(t===a)-ye(t===s),c<0)return[n,o]}return[0,0]}(t,o,c);e+n&&a("unmatched parenthesis",{invokeId:r,line:e,col:n})}let i;for(let e=0,r=!1;e<fe(t);++e){if(r&&")"===t[e].typ){i=t[e];break}r="("===t[e].typ}return i&&a("empty expression forbidden",i.errCtx),n}(n,r);if(fe(a))return{errors:a,funcs:{}};const s=[],o=[],c=function(e){const t=[],r=[];return e.forEach((e=>{if(!be(e)&&be(e[0])&&"function"===ge(e)){const r=ge(e,1);r?fe(e)<3&&t.push({err:"empty function body",errCtx:e[0].errCtx}):t.push({err:"nameless function",errCtx:e[0].errCtx}),t.push({name:r,nodes:oe(e,2)})}else r.push(e)})),fe(r)&&t.push({name:"entry",nodes:r}),t}(function(e){const t=[],r=e=>{let t;"sym"===e[0].typ&&le("@#",e[0].text)&&(t=e.shift());const n=e.shift();if("("!==n.typ&&")"!==n.typ)return n;const a=t?[t]:[];for(;")"!==e[0].typ;)a.push(r(e));return e.shift(),a};for(;fe(e);)t.push(r(e));return t}(oe(r))),i=[];c.forEach((e=>{"err"in e?o.push({e:"Parse",m:e.err,errCtx:e.errCtx}):i.push({name:e.name,nodes:e.nodes})})),i.map(Be).forEach((e=>{"e"in e?o.push(e):s.push(e)})),se(o,ae(s.map((e=>Ee(e.ins)??[]))));const u={};return s.forEach((e=>u[e.name??""]=e)),{errors:o,funcs:u}}function Pe(e,t){return e.dict.has(t)?{kind:"val",value:e.dict.get(t)}:{kind:"err",err:`"${t}" not found.`}}function je(e,t,r){e.dict.set(t,r)}function Me(e,t,r){switch(t){case"test.function":e.output+=r[0].v+"\n";break;default:return{kind:"err",err:`operation "${t}" does not exist`}}return{kind:"val",value:{t:"null",v:void 0}}}const De=[{name:"Hello, world!",code:'"Hello, world!"',out:"Hello, world!"},{name:"Say Hello, world!",code:'(print "Hello, world!")',out:"Hello, world!\nnull"},{name:"1 + 1 = 2",code:"(+ 1 1)",out:"2"},{name:"Negate 1 = -1",code:"(- 1)",out:"-1"},{name:"(1+1)+1+(1+1) = 5",code:"(+ (+ 1 1) 1 (+ 1 1))",out:"5"},{name:"Conditional head",code:"((if true + -) 12 9 1)",out:"22"},{name:"Whens",code:'[(when 123 (print "hi") 234) (when false (print "bye"))]',out:"hi\n[234 null]"},{name:"match and wildcard",code:'(match [1 2]\n             [0 0] (print "hello")\n             [0 2] (print "bye")\n             [1 _] "hey")',out:"hey"},{name:"Cond number head",code:"((if false 1 2) [:a :b :c])",out:":c"},{name:"and & short-circuit",code:'[(and true (if true null 1) (print "hi")) (and 1 2 3)]',out:"[false true]"},{name:"or & short-circuit",code:'[(or true (print "hi") 1) (or false (print-str "-> ") 1)]',out:"-> [true 1]"},{name:"String retrieve",code:'(2 "Hello")',out:"l"},{name:"Vector retrieve",code:"(2 [:a :b :c :d])",out:":c"},{name:"Key as operation",code:'[(:age {:name "Patrick" :age 24}) (:abc [:a :abc :c])]',out:"[24 :abc]"},{name:"Dictionary as op 1",code:'({"name" "Patrick" "age" 24} "age")',out:"24"},{name:"Dictionary as op 2",code:'({"name" "Patrick"} "age" 24)',out:'{"name" "Patrick", "age" 24}'},{name:"Equalities",code:'[(= 1 2 1)\n            (!= 1 2 1)\n            (= "Hello" "hello")\n            (!= "world" "world")\n            (= [0 [1]] [0 [1]])]',out:"[false 1 false false [0 [1]]]"},{name:"Define and retrieve",code:"(var a 1) a",out:"1"},{name:"Define and add",code:"(var a 1) (inc a)",out:"2"},{name:"Define op and call",code:"(var f +) (f 2 2)",out:"4"},{name:"Define vec and call",code:"(var f [1]) (f 1)",out:"1"},{name:"Define num and call",code:"(var f 1) (f [:a :b :c])",out:":b"},{name:"Apply op to var",code:"(var a 10) (var! a + 10)",out:"20"},{name:"Apply op to let",code:"(let a 10) (let! a (if true + -) (+ 2 3) 5)",out:"20"},{name:"Print simple vector",code:"[1 2 3]",out:"[1 2 3]"},{name:"Boolean select",code:"[(true 1 2) (false 1)]",out:"[1 null]"},{name:"Sum vector of numbers",code:"[(reduce + [1 2 3]) (reduce + 3 [1 2 3])]",out:"[6 9]"},{name:"Sum vectors of numbers",code:"(map + [1 2 3] [1 2 3 4])",out:"[2 4 6]"},{name:"For XY list",code:"(for vec [0 1] [0 1])",out:"[[0 0] [1 0] [0 1] [1 1]]"},{name:"Filter by integer",code:'(filter 2 [[1] [:a :b :c] "hello" "hi"])',out:'[[:a :b :c] "hello"]'},{name:"Comments, short decimal",code:';((print "Hello")\n           .456',out:"0.456"},{name:"Dictionary into vector",code:"(into [1 2] {3 4 5 6})",out:"[1 2 [3 4] [5 6]]"},{name:"Vector into dictionary",code:"(into {[0] 1 [2] 3} [[0] 2])",out:"{[0] 2, [2] 3}"},{name:"While loop",code:"(var n 5)\n           (while (< 0 n)\n             (print-str n)\n             (var n (dec n)))",out:"543210"},{name:"Catch error",code:'(catch\n             (:e (catch (let a :a) (+ 1 a) (0 errors)))\n             (print "hi"))',out:"Type"},{name:"Define with no call",code:'(function func (print "Nothing."))'},{name:"Call greet func",code:'(function greeting (print "Hello!")) (greeting)',out:"Hello!\nnull"},{name:"Call const value func",code:"(function const 123) (const)",out:"123"},{name:"Call identity funcs",code:"(function id1 %)\n           (function id2 x x)\n           [(id1 123) (id2 456)]",out:"[123 456]"},{name:"Call greet with name",code:'(function greeting name (print "Hello, " name "!"))\n           (greeting "Patrick")',out:"Hello, Patrick!\nnull"},{name:"Call with too few args",code:"(function func a b c [a b c]) (func 1 2)",out:"[1 2 null]"},{name:"Define func and call",code:"(function func a b (+ a b)) (var f func) (f 2 2)",out:"4"},{name:"Anonymous parameters",code:"(function avg<n? (< (/ (.. + %) (len %)) %1))\n           (avg<n? [0 10 20 30 40] 5)",out:"false"},{name:"Call parameter",code:'(function f x (x "hello")) (f print)',out:"hello\nnull"},{name:"Let and retrieve",code:"(function f (let a 1) a) (f)",out:"1"},{name:"Let num op and call",code:"(function f (let n 0) (n [1])) (f)",out:"1"},{name:"Explicit return",code:"(function f (return 123) (print 456)) (f)",out:"123"},{name:"Closure 1",code:"(let x 10)\n           (let closure #(+ x x))\n           (let x 11)\n           (closure)",out:"20"},{name:"Closure 2",code:"(filter #(or (.. = args) (even? %)) (range 10) 5)",out:"[0 2 4 5 6 8]"},{name:"Closure 3",code:"(function f #(+ x x))\n           (var x 10) (let c20 (f))\n           (var x 20) (let c40 (f))\n           [(c20) (c40)]",out:"[20 40]"},{name:"Func returns closure",code:"(function f x #(x 2 2))\n           (let closure (f +))\n           (closure)",out:"4"},{name:"Dictionary closure",code:"(function f x #{x 2})\n           (let closure (f :a))\n           (closure)",out:"{:a 2}"},{name:"Vector closure",code:"(function f x #[1 x %])\n           (let closure (f 2))\n           (closure 3)",out:"[1 2 3]"},{name:"Closure as head",code:"(#[% %1 %2] 1 2 3)",out:"[1 2 3]"},{name:"Partial closure 1",code:"(@[] 1 2 3)",out:"[1 2 3]"},{name:"Partial closure 2",code:"(@((do +) 2) 2)",out:"4"},{name:"Parameterised closure 1",code:"((fn a b (+ a b)) 2 2)",out:"4"},{name:"Parameterised closure 2",code:"((fn a b (print-str a b) (+ a b)) 2 2)",out:"224"},{name:"Closure with mixed lets",code:"(let a + c 5 d 10)\n           (let closure (fn b (let d 1) (a b c d)))\n           (let a - c 4 d 11)\n           (closure 1)",out:"7"},{name:"Destructure var",code:"(var [x [y]] [1 [2]]) [y x]",out:"[2 1]"},{name:"Destructure string",code:'(let [a b c] "hello") [a b c]',out:'["h" "e" "l"]'},{name:"Destructure function",code:"(function f a [[b c] d] e [e d c b a]) (f 0 [[1 2] 3] 4)",out:"[4 3 2 1 0]"},{name:"Destructuring closure",code:"(let f (fn a [b [c]] d [d c b a])) (f 0 [1 [2]] 3)",out:"[3 2 1 0]"},{name:"Destructuring fn decoy",code:"(let f (fn a [a [a]])) (f 0)",out:"[0 [0]]"},{name:"Threading",code:"(-> 1 inc @(+ 10))",out:"12"},{name:"String instead of number",code:'(function sum (.. + args))\n           (print (sum 2 2))\n           (sum 2 "hi")',out:"4",err:["Type"]},{name:"Reference non-existing",code:"x",err:["Reference"]},{name:"Expired let retrieve",code:"(function f (let a 1) a) (f) a",err:["Reference"]},{name:"Call non-existing",code:"(x)",err:["External"]},{name:"Call budget",code:"(function f (f)) (f)",err:["Budget"]},{name:"Loop budget",code:"(var n 10000)\n           (while (< 0 n)\n             (var n (dec n)))",err:["Budget"]},{name:"Range budget",code:"(range 10000)",err:["Budget"]},{name:"Head exe arity check",code:"(((fn +)) 1)",err:["Arity"]},{name:"Fibonacci 13",code:"(function fib n\n             (if (< n 2) n\n               (+ (fib (dec n))\n                  (fib (- n 2)))))\n           (fib 13)",out:"233"},{name:"dedupe (recur)",code:"(function dedupe list -out\n             (let out (or -out []))\n             (let next (if (out (0 list)) [] [(0 list)]))\n             (if (empty? list) out\n                 (recur (sect list) (into out next))))\n           (dedupe [1 1 2 3 3 3])",out:"[1 2 3]"},{name:"frequencies",code:'(function frequencies list\n             (reduce #(push % %1 (inc (or (% %1) 0))) {} list))\n           (frequencies "12121212")',out:'{"1" 4, "2" 4}'},{name:"set get",code:"[($globals.time_offset 5.5) $globals.time_offset]",out:"[5.5 5.5]"},{name:"exe",code:"(test.function 123)",out:"123\nnull"},{name:"Empty parens",code:"()",err:["Parse"]},{name:"Imbalanced parens 1",code:'(print ("hello!")',err:["Parse"]},{name:"Imbalanced parens 2",code:'print "hello!")',err:["Parse"]},{name:"Imbalanced quotes",code:'(print "Hello)',err:["Parse"]},{name:"Function as op",code:"(function)",err:["Parse"]},{name:"Function without name",code:"(function (+))",err:["Parse"]},{name:"Function without body",code:"(function func)",err:["Parse"]},{name:"Variable not symbol",code:"(var 1 2)",err:["Parse"]},{name:"Parser type error 1",code:"(function f (+ 1 :a))",err:["Type"]},{name:"Parser type error 2",code:"(function f (+ 1 (into {} {})))",err:["Type"]},{name:"Parser type error 3",code:"(function f (if true (into 2 {}) (+ 2 2)))",err:["Type"]},{name:"Parser arity error 1",code:"(abs)",err:["Parse"]}],He=({v:e})=>e,Ne=({v:e})=>e,Se=({v:e})=>e,qe=({v:e})=>e,Te=(e,t)=>o(e)===o(t)&&!e.some(((e,r)=>!Oe(e,t[r]))),Oe=(e,t)=>{if("wild"===e.t||"wild"===t.t)return!0;if(e.t!==t.t)return!1;switch(e.t){case"null":return!0;case"bool":case"num":return e.v===t.v;case"vec":return Te(e.v,Se(t));case"dict":{const r=qe(t);return o(e.v.keys)===o(r.keys)&&Te(e.v.keys,r.keys)}case"str":case"ref":case"key":case"func":return Ne(e)===Ne(t);case"clo":return e.v.name===t.v.name;case"ext":return e.v===t.v}return 0},Fe=e=>e.reduce(((e,t)=>e+_e(t)),""),_e=e=>{const t=e=>"str"===e.t?`"${e.v}"`:_e(e);if("clo"===e.t)return e.v.name??"";if("vec"===e.t)return`[${e.v.map(t).join(" ")}]`;if("dict"===e.t){const{keys:r,vals:n}=e.v,[a,s]=[r.map(t),n.map(t)];return`{${a.map(((e,t)=>`${e} ${s[t]}`)).join(", ")}}`}return"null"===e.t?"null":"wild"===e.t?"_":`${e.v}`},Re=e=>"vec"===e.t?a(e.v):"str"===e.t?[...e.v].map((e=>({t:"str",v:e}))):"dict"===e.t?e.v.keys.map(((t,r)=>({t:"vec",v:[t,e.v.vals[r]]}))):[],Le=e=>{o(e)%2==1&&e.pop();const t=e.filter(((e,t)=>t%2==0)),r=e.filter(((e,t)=>t%2==1)),n=[],a=[];return t.forEach(((e,t)=>{const s=n.findIndex((t=>Oe(t,e)));-1===s?(n.push(e),a.push(r[t])):a[s]=r[t]})),{t:"dict",v:{keys:n,vals:a}}},Ve=({keys:e,vals:t},r)=>{const n=e.findIndex((e=>Oe(e,r)));return-1===n?{t:"null",v:void 0}:t[n]},We=({keys:e,vals:t},r,n)=>{const[s,o]=[a(e),a(t)],c=e.findIndex((e=>Oe(e,r)));return-1!==c?o[c]=n:(s.push(r),o.push(n)),{keys:s,vals:o}};function Ke(e,t,r){if(!o(e)||"vec"!==r.t&&"dict"!==r.t||"vec"===r.t&&("num"!==e[0].t||e[0].v<0||e[0].v>o(r.v)))return r;if("vec"===r.t){const n=a(r.v),s=He(e[0]);return 1===o(e)?(n[s]=t,{t:"vec",v:n}):(n[s]=Ke(a(e,1),t,n[s]),{t:"vec",v:n})}return 1===o(e)?{t:"dict",v:We(r.v,e[0],t)}:{t:"dict",v:We(r.v,e[0],Ke(a(e,1),t,Ve(r.v,e[0])))}}const{abs:ze,cos:Ue,sin:Xe,tan:Ye,sign:Ge,sqrt:Je,floor:Qe,ceil:Ze,round:et,max:tt,min:rt}=r,{logn:nt,log2:at,log10:st}=r,{concat:ot,has:ct,flat:it,push:ut,reverse:lt,slice:dt,splice:vt,sortBy:pt}=r,{ends:mt,slen:ft,starts:yt,sub:xt,subIdx:ht,substr:bt,upperCase:gt,lowerCase:At}=r,{trim:Ct,trimStart:kt,trimEnd:$t,charCode:wt,codeChar:Bt,strIdx:Et}=r,{getTimeMs:It,randInt:Pt,randNum:jt}=r,{isNum:Mt,len:Dt,objKeys:Ht,range:Nt,toNum:St}=r,qt={};let Tt,Ot=[],Ft=[],_t={};const Rt=e=>Ot.push({t:"bool",v:e}),Lt=e=>Ot.push({t:"num",v:e}),Vt=(e="")=>Ot.push({t:"str",v:e}),Wt=(e=[])=>Ot.push({t:"vec",v:e}),Kt=e=>Ot.push({t:"dict",v:e}),zt=()=>Ot.push({t:"null",v:void 0}),Ut=e=>Ot.push({t:"func",v:e});function Xt(e,t,r,n,c){const i=e=>[ee(e,n)];if(c){const r=Q(e,Dt(t),n);if(r)return r}{const r=Z(e,t.map((e=>[e.t])),n);if(r)return r}switch(e){case"str":return void Ot.push({t:"str",v:Fe(t)});case"print":case"print-str":return r.print(Fe(t),"print"===e),void zt();case"vec":return void Wt(t);case"dict":return void Ot.push(Le(t));case"len":return void Lt("str"===t[0].t?ft(t[0].v):"vec"===t[0].t?Dt(t[0].v):Dt(qe(t[0]).keys));case"to-num":return void(Mt(t[0].v)?Lt(St(t[0].v)):zt());case"to-key":return void Ot.push({t:"key",v:`:${_e(t[0])}`});case"!":return void Rt(!J(t[0]));case"=":case"!=":for(let r=1,n=Dt(t);r<n;++r)if(Oe(t[r-1],t[r])!==("="===e))return void Rt(!1);return void Ot.push(t[0]);case"-":return void Lt(1===Dt(t)?-He(t[0]):t.map(He).reduce(((e,t)=>e-t)));case"**":return void Lt(He(t[0])**(1===Dt(t)?2:He(t[1])));case"+":return void Lt(t.map(He).reduce(((e,t)=>e+t)));case"*":return void Lt(t.map(He).reduce(((e,t)=>e*t)));case"/":return void Lt(t.map(He).reduce(((e,t)=>e/t)));case"//":return void Lt(t.map(He).reduce(((e,t)=>Qe(e/t))));case"fast=":case"fast!=":return Oe(t[0],t[1])!==("fast="===e)?void Rt(!1):void Ot.push(t[0]);case"fast-":return void Lt(t[0].v-t[1].v);case"fast+":return void Lt(t[0].v+t[1].v);case"fast*":return void Lt(t[0].v*t[1].v);case"fast/":return void Lt(t[0].v/t[1].v);case"fast//":return void Lt(Qe(t[0].v/t[1].v));case"fast<":return void Rt(t[0].v<t[1].v);case"fast>":return void Rt(t[0].v>t[1].v);case"fast<=":return void Rt(t[0].v<=t[1].v);case"fast>=":return void Rt(t[0].v>=t[1].v);case"rem":return void Lt(t.map(He).reduce(((e,t)=>e%t)));case"min":return void Lt(t.map(He).reduce(((e,t)=>rt(e,t))));case"max":return void Lt(t.map(He).reduce(((e,t)=>tt(e,t))));case"<":case">":case"<=":case">=":for(let r=1,n=Dt(t);r<n;++r){const[n,a]=[t[r-1].v,t[r].v];if("<"===e&&n>=a||">"===e&&n<=a||"<="===e&&n>a||">="===e&&n<a)return void Rt(!1)}return void Rt(!0);case"inc":return void Lt(t[0].v+1);case"dec":return void Lt(t[0].v-1);case"abs":return void Lt(ze(t[0].v));case"round":if(2===Dt(t)){const e=10**t[0].v;Lt(et(t[1].v*e)/e)}else Lt(et(t[0].v));return;case"sin":case"cos":case"tan":case"sqrt":case"floor":case"ceil":case"logn":case"log2":case"log10":return void Lt((0,{sin:Xe,cos:Ue,tan:Ye,sqrt:Je,floor:Qe,ceil:Ze,logn:nt,log2:at,log10:st}[e])(He(t[0])));case"and":return void Rt(t.every(J));case"or":return void Rt(t.some(J));case"xor":return void(J(t[0])!==J(t[1])?Ot.push(J(t[0])?t[0]:t[1]):Rt(!1));case"&":case"|":case"^":case"<<":case">>":case">>>":const[c,u]=[He(t[0]),He(t[1])];return void Lt("&"===e?c&u:"|"===e?c|u:"^"===e?c^u:"<<"===e?c<<u:">>"===e?c>>u:c>>>u);case"~":return void Lt(~He(t[0]));case"odd?":case"even?":return void Rt(He(t[0])%2==("odd?"===e?1:0));case"pos?":case"neg?":case"zero?":{const r=He(t[0]);return void Rt("pos?"===e?r>0:"neg?"===e?r<0:!r)}case"null?":case"num?":case"bool?":case"str?":case"dict?":case"vec?":case"key?":case"func?":case"wild?":case"ext?":{const{t:r}=t[0];return void Rt("func?"===e&&("func"===r||"clo"===r)||bt(e,0,ft(e)-1)===r)}case"has?":return void Rt(xt(Ne(t[0]),Ne(t[1])));case"idx":{let e=-1;if("str"===t[0].t){if("str"!==t[1].t)return i("strings can only contain strings");e=ht(t[1].v,t[0].v)}else"vec"===t[0].t&&(e=t[0].v.findIndex((e=>Oe(e,t[1]))));return void(-1===e?zt():Lt(e))}case"set-at":{const[e,r,n]=t;return void Ot.push(Ke(Se(e),r,n))}case"map":case"for":case"reduce":case"filter":case"remove":case"find":case"count":{const a=Gt(r,t.shift(),n);if("map"===e||"for"===e){const e=t.findIndex((({t:e})=>"vec"!==e&&"str"!==e&&"dict"!==e));if(-1!==e)return i(`argument ${e+2} must be either: string, vector, dictionary, not ${G[t[e].t]}`)}if("for"===e){const e=t.map(Re),s=e.map(Dt),o=s.map(((e,t)=>dt(s,0,t+1).reduce(((e,t)=>e*t))));o.unshift(1);const c=o.pop();if(c>r.loopBudget)return[{e:"Budget",m:"would exceed loop budget",errCtx:n}];const i=[];for(let t=0;t<c;++t){const r=o.map(((e,r)=>Qe(t/e%s[r]))),n=a(e.map(((e,t)=>e[r[t]])));if(n)return n;i.push(Ot.pop())}return void Wt(i)}if("map"===e){const e=t.map(Re),r=rt(...e.map(Dt)),n=[];for(let t=0;t<r;++t){const r=a(e.map((e=>e[t])));if(r)return r;n.push(Ot.pop())}return void Wt(n)}if("reduce"!==e){const r=t.shift(),n=Re(r),s="remove"===e,o="find"===e,c="count"===e,i=[];let u=0;for(let e=0,r=Dt(n);e<r;++e){const r=a([n[e],...t]);if(r)return r;const l=J(Ot.pop());if(c)u+=l?1:0;else if(o){if(l)return void Ot.push(n[e])}else l!==s&&i.push(n[e])}switch(e){case"count":return void Lt(u);case"find":return void zt()}return void("str"===r.t?Vt(i.map((e=>_e(e))).join("")):"dict"===r.t?Ot.push(Le(it(i.map((e=>e.v))))):Wt(i))}const s=t.pop();if(!ct(["vec","dict","str"],s.t))return i(`must reduce either: string, vector, dictionary, not ${G[s.t]}`);const o=Re(s);if(!Dt(o))return void(Dt(t)?Ot.push(t[0]):Wt());if(Dt(o)<2&&!Dt(t))return void ut(Ot,o);let c=(Dt(t)?t:o).shift();for(let e=0,t=Dt(o);e<t;++e){const t=a([c,o[e]]);if(t)return t;c=Ot.pop()}return void Ot.push(c)}case"repeat":{const e=t.shift(),a=[],s=He(t[0]);if(s>r.rangeBudget)return[{e:"Budget",m:"would exceed range budget",errCtx:n}];if(r.rangeBudget-=s,"func"===e.t||"clo"===e.t){const t=Gt(r,e,n);for(let e=0;e<s;++e){const r=t([{t:"num",v:e}]);if(r)return r;a.push(Ot.pop())}}else for(let t=0;t<s;++t)a.push(e);return void Wt(a)}case"->":Ot.push(t.shift());for(let e=0,a=Dt(t);e<a;++e){const a=Gt(r,t[e],n)([Ot.pop()]);if(a)return a}return;case"rand-int":case"rand":{const r=Dt(t),[n,a]=[r<2?0:He(t[0]),0===r?1+St("rand-int"===e):He(1===r?t[0]:t[1])];Lt("rand-int"===e?Pt(n,a):jt(n,a))}return;case"do":case"val":return void Ot.push("do"===e?t.pop():t.shift());case".":case"..":case"...":{const a=Gt(r,t.shift(),n);if("."===e)return a(t);let s=t;if(".."===e)s=it(t.map((e=>"vec"===e.t?e.v:[e])));else{const e=s.pop();ut(s,it(["vec"===e.t?e.v:[e]]))}return a(s)}case"into":if("vec"===t[0].t)Wt(ot(t[0].v,Re(t[1])));else if("vec"===t[1].t)Ot.push(Le(ot(it(Re(t[0]).map(Se)),t[1].v)));else{const{keys:e,vals:r}=qe(t[0]),n=qe(t[1]);Kt({keys:ot(e,n.keys),vals:ot(r,n.vals)})}return;case"push":if("vec"===t[0].t){const e=t[0].v;if(Dt(t)<3)Wt(ot(e,[t[1]]));else{const r=He(t[2]);Wt(ot(ot(dt(e,0,r),[t[1]]),dt(e,r)))}}else Dt(t)<3?Ot.push((({keys:e,vals:t},r)=>{const[n,o]=[a(e),a(t)],c=e.findIndex((e=>Oe(e,r)));return-1!==c&&(s(n,c,1),s(o,c,1)),{t:"dict",v:{keys:n,vals:o}}})(qe(t[0]),t[1])):Kt(We(qe(t[0]),t[1],t[2]));return;case"sect":{const e=t[0],r="vec"===e.t?Dt(e.v):ft(Ne(e));let n=0,a=r;switch(Dt(t)){case 1:n=1;break;case 2:{const e=He(t[1]);e<0?a+=e:n+=e;break}case 3:{const e=He(t[1]),s=He(t[2]);n=e<0?r+e+(s<0?s:0):n+e,a=(s<0?a:n)+s;break}}return n=tt(n,0),a=rt(a,r),n>a?void("vec"===e.t?Wt:Vt)():void("vec"===e.t?Wt(dt(e.v,n,a)):Vt(bt(Ne(t[0]),n,a-n)))}case"reverse":return void("str"===t[0].t?Vt(Fe(lt(Re(t[0])))):Wt(lt(Re(t[0]))));case"sort":{const e=Re(t[0]);if(!Dt(e))return void Wt();const a=[];if(1===Dt(t))ut(a,e.map((e=>[e,e])));else{const s=Gt(r,t.pop(),n);for(let t=0,r=Dt(e);t<r;++t){const r=s([e[t]]);if(r)return r;a.push([e[t],Ot.pop()])}}const s=a[0][1].t;return a.some((([e,{t}])=>t!==s||!ct(["num","str"],t)))?i("can only sort by all number or all string"):(pt(a,"num"===s?([e,t],[r,n])=>He(t)>He(n)?1:-1:([e,t],[r,n])=>Ne(t)>Ne(n)?1:-1),void Wt(a.map((([e])=>e))))}case"range":{const[e,a,s]=t.map(He),o=s&&s<0&&e<a,[c,i]=Dt(t)>1?o?[a-1,e-1]:[e,a]:[0,e],u=Ge((i-c)*(s||1))*(s||1),l=Ze(ze((i-c)/u));if(!l)return void Wt([]);if(l>r.rangeBudget)return[{e:"Budget",m:"would exceed range budget",errCtx:n}];r.rangeBudget-=l;const d=Nt(l).map((e=>e*u+c));return void Wt(d.map((e=>({t:"num",v:e}))))}case"empty?":return void Rt(!Dt(Re(t[0])));case"keys":case"vals":return void Wt(qe(t[0])["keys"===e?"keys":"vals"]);case"split":return void Wt(Ne(t[Dt(t)-1]).split(Dt(t)-1?Ne(t[0]):" ").map((e=>({t:"str",v:e}))));case"join":return void Vt(Re(t[1]).map(_e).join(Ne(t[0])));case"starts?":case"ends?":return void Rt(("starts?"===e?yt:mt)(Ne(t[1]),Ne(t[0])));case"upper-case":case"lower-case":case"trim":case"trim-start":case"trim-end":return void Vt(("upper-case"===e?gt:"lower-case"===e?At:"trim"===e?Ct:"trim-start"===e?kt:$t)(Ne(t[0])));case"str*":{const e=Ne(t[0]);return void Vt(Nt(tt(Ze(He(t[1])),0)).map((t=>e)).join(""))}case"char-code":if("str"===t[0].t){const e=Dt(t)>1?He(t[1]):0,r=Ne(t[0]);ft(r)<=e||e<0?zt():Lt(wt(Et(r,e)))}else Vt(Bt(He(t[0])));return;case"time":return void Lt(It());case"version":return void Lt(20220120);case"tests":return void Vt(function(e,t=!0){const r=[];for(let t=0;t<o(De);++t){const{name:n,code:a,err:s,out:o}=De[t],c={dict:new Map,output:""},i={funcs:{},vars:{}},u=N(),l=e({get:e=>Pe(c,e),set:(e,t)=>je(c,e,t),print:(e,t)=>{c.output+=e+(t?"\n":"")},exe:(e,t)=>Me(c,e,t),functions:[],env:i,loopBudget:1e4,rangeBudget:1e3,callBudget:1e3,recurBudget:1e4},a,a,!0),d="errors"===l.kind?l.errors:[],v=(s||[]).join()===d.map((({e})=>e)).join(),p=!o||$(c.output)===o,m=N()-u,[f,y,x,h,b]=[E(`${t+1}`,3),E(n,24),E(`${L(m)}ms`,6),p||o+"\t!=\t"+$(c.output),v||d.map((({e,m:t,errCtx:{line:r,col:n}})=>`${e} ${r}:${n}: ${t}`))];r.push({okErr:v,okOut:p,elapsedMs:m,display:`${f} ${y} ${x} ${h} ${b}`})}const n=r.reduce(((e,{elapsedMs:t})=>e+t),0),a=o(r.filter((({okOut:e,okErr:t})=>e&&t)));return h(r.filter((e=>!t||!e.okOut||!e.okErr)).map((e=>e.display)),[`---- ${a}/${o(r)} tests passed in ${L(n)}ms.`])}(tr,!(Dt(t)&&J(t[0]))).join("\n"));case"symbols":return void Wt(function(e,t=!0){let r=t?["function","let","var","if","if!","when","while","match","catch"]:[];ut(r,["args","PI","E"]),r=ot(r,Ht(Y)),r=ot(r,Ht(e.env.funcs)),r=ot(r,Ht(e.env.vars));const n=["entry"];return r=r.filter((e=>!ct(n,e))),pt(r,((e,t)=>e>t?1:-1))}(r,!1).map((e=>({t:"str",v:e}))));case"eval":{delete r.env.funcs.entry;const e=Dt(Ot),a=`${n.invokeId} eval`,s=er(r,Ne(t[0]),a);return s?[{e:"Eval",m:"error within evaluated code",errCtx:n},...s]:void(e===Dt(Ot)&&zt())}case"recur":return void(Tt=t);case"reset":return r.env.vars={},r.env.funcs={},Ft=[],void zt()}return[{e:"Unexpected",m:"operation doesn't exist",errCtx:n}]}const Yt=(e,t)=>[{e:"Arity",m:`${G[e]} as op requires one sole argument`,errCtx:t}];function Gt(e,t,r,n=!0){if("str"===t.t||"func"===t.t){const a=t.v;return Y[a]?Y[a].external?e=>{const t=qt[a](e);if("err"===t.kind)return[{e:"External",m:t.err,errCtx:r}];Ot.push(t.value)}:t=>Xt(a,t,e,r,n):a in e.env.funcs?t=>Zt(e,e.env.funcs[a],t):a in e.env.vars?Gt(e,e.env.vars[a],r):a in _t?Gt(e,_t[a],r):yt(a,"$")?n=>{if(!Dt(n))return Yt(t.t,r);const s=e.set(bt(a,1),n[0]);return Ot.push(n[0]),s?[{e:"External",m:s,errCtx:r}]:void 0}:t=>{const n=e.exe(a,t);if("val"!==n.kind)return[{e:"External",m:n.err,errCtx:r}];Ot.push(n.value)}}if("clo"===t.t)return r=>Zt(e,t.v,r);if("key"===t.t)return e=>{if(!Dt(e))return Yt(t.t,r);if("dict"===e[0].t)Ot.push(Ve(qe(e[0]),t));else{if("vec"!==e[0].t)return re(r,[e[0].t]);{const r=Se(e[0]).find((e=>Oe(e,t)));Ot.push(r??{t:"null",v:void 0})}}};if("num"===t.t){const e=Qe(t.v);return n=>{if(!Dt(n))return Yt(t.t,r);const a=n[0];if("str"!==a.t&&"vec"!==a.t&&"dict"!==a.t)return te(r,[a.t]);const s=Re(a),o=Dt(s);e>=0&&e>=o||e<0&&-e>o?zt():e<0?Ot.push(s[o+e]):Ot.push(s[e])}}if("vec"===t.t){const{v:e}=t;return n=>{if(!Dt(n))return Yt(t.t,r);const a=e.find((e=>Oe(e,n[0])));a?Ot.push(a):zt()}}if("dict"===t.t){const e=t.v;return t=>{if(1===Dt(t))Ot.push(Ve(e,t[0]));else{if(2!==Dt(t))return[{e:"Arity",m:"provide 1 or 2 arguments for dictionary",errCtx:r}];Kt(We(e,t[0],t[1]))}}}if("bool"===t.t){const e=t.v;return t=>{if(!Dt(t)||Dt(t)>2)return[{e:"Arity",m:"provide 1 or 2 arguments for boolean",errCtx:r}];Ot.push(e?t[0]:Dt(t)>1?t[1]:{t:"null",v:void 0})}}return e=>[{e:"Operation",m:`${_e(t)} is an invalid operation`,errCtx:r}]}function Jt(e){const t=(e,t,r)=>We(e,{t:"key",v:t},r);return e.map((({e,m:r,errCtx:n})=>{let a=t({keys:[],vals:[]},":e",{t:"str",v:e});return a=t(a,":m",{t:"str",v:r}),a=t(a,":line",{t:"num",v:n.line}),a=t(a,":col",{t:"num",v:n.col}),{t:"dict",v:a}}))}function Qt(e,t){let r=e;for(let e=0,n=Dt(t)-1;e<n;++e){const a=r[t[e]];if("vec"!==a.t)return"str"===a.t&&e+1===n&&t[e+1]<ft(a.v)?{t:"str",v:Et(a.v,t[e+1])}:{t:"null",v:void 0};r=a.v}const n=t[Dt(t)-1];return n>=Dt(r)?{t:"null",v:void 0}:r[n]}function Zt(e,t,r,n=!1){--e.callBudget,n||(Ft.push({}),_t=Ft[Dt(Ft)-1]);const a=Dt(Ot);for(let n=0,s=Dt(t.ins);n<s;++n){const o=t.ins[n],{errCtx:c}=t.ins[n],i=e.loopBudget<1;if(i||e.callBudget<1)return[{e:"Budget",m:(i?"looped":"called")+" too many times",errCtx:c}];switch(o.typ){case"val":Ot.push(o.value);break;case"var":e.env.vars[o.value]=Ot[Dt(Ot)-1];break;case"let":_t[o.value]=Ot[Dt(Ot)-1];break;case"dle":case"dva":{const t=Ot.pop();let r;o.value.forEach((({name:n,position:a})=>{r="dva"===o.typ?e.env.vars[n]=Qt([t],a):_t[n]=Qt([t],a)})),Ot.push(r);break}case"npa":case"upa":{const e=o.value;-1===e?Wt(r):Dt(r)<=e?zt():Ot.push(r[e]);break}case"dpa":Ot.push(Qt(r,o.value));break;case"ref":{const t=o.value;if(Y[t])Ut(t);else if(yt(t,"$")){const r=e.get(bt(t,1));if("err"===r.kind)return[{e:"External",m:r.err,errCtx:c}];Ot.push(r.value)}else if(t in e.env.vars)Ot.push(e.env.vars[t]);else if(t in _t)Ot.push(_t[t]);else{if(!(t in e.env.funcs))return[{e:"Reference",m:`"${t}" did not exist`,errCtx:c}];Ut(t)}break}case"exa":case"exe":{const a=Gt(e,Ot.pop(),c,"exa"===o.typ),s=o.value,i=a(vt(Ot,Dt(Ot)-s,s));if(i){const e=dt(t.ins,n).findIndex((e=>"cat"===e.typ));if(-1!==e){n+=e,_t.errors={t:"vec",v:Jt(i)};break}return i}if(Tt){if(Ft[Dt(Ft)-1]={},n=-1,o.value,r=Tt,Tt=void 0,--e.recurBudget,!e.recurBudget)return[{e:"Budget",m:"recurred too many times",errCtx:c}];break}break}case"or":J(Ot[Dt(Ot)-1])?n+=o.value:Ot.pop();break;case"mat":{const e=Ot[Dt(Ot)-2];Oe(e,Ot.pop())?Ot.pop():n+=o.value;break}case"if":J(Ot.pop())||(n+=o.value);break;case"jmp":case"cat":n+=o.value;break;case"loo":n+=o.value,--e.loopBudget;break;case"pop":vt(Ot,Dt(Ot)-o.value,o.value);break;case"ret":o.value?vt(Ot,a,Dt(Ot)-a-1):zt(),n=s;break;case"clo":case"par":{const{name:t,captured:n,captureIns:a}=o.value;let{closureIns:s}=o.value;const i=[];if(Dt(a)){s=s.map(((t,r)=>{const a="val"===t.typ&&"str"===t.value.t&&(_t[t.value.v]??e.env.vars[t.value.v]);return n[r]=!a&&n[r],a?{typ:"val",value:a}:t}));const t=Zt(e,{ins:a},r,!0);if(t)return t;const o=Dt(a),u=vt(Ot,Dt(Ot)-o,o),l=e=>({typ:"val",value:e,errCtx:c});for(let e=0,t=0;e<Dt(n);++e)i.push(n[e]?l(u[t++]):s[e])}else ut(i,s);Ot.push({t:"clo",v:{name:t,ins:i}});break}}}n||(Ft.pop(),_t=Ft[Dt(Ft)-1],vt(Ot,a,Dt(Ot)-(a+1)))}function er(e,t,r){const n=Ie(t,r);return Dt(n.errors)?n.errors:(e.env.funcs={...e.env.funcs,...n.funcs},"entry"in e.env.funcs?Zt(e,e.env.funcs.entry,[]):void 0)}function tr(e,t,r,n=!1){const a=function(e,t){const{callBudget:r,loopBudget:n,recurBudget:a,rangeBudget:s}=e;e.functions.forEach((({name:e,definition:t,handler:r})=>{if(Y[e]&&!qt[e])throw"Redefining internal operations is disallowed.";Y[e]={...t,external:!0},qt[e]=r}));const o=t();e.functions.forEach((({name:e})=>{delete Y[e],delete qt[e]})),[e.callBudget,e.recurBudget]=[r,a],[e.loopBudget,e.rangeBudget]=[n,s],delete e.env.funcs.entry;const c=Ot.pop();return[Ot,Ft]=[[],[]],o?{kind:"errors",errors:o}:c?{kind:"val",value:c}:{kind:"empty"}}(e,(()=>er(e,t,r)));return n&&"val"===a.kind&&e.print(_e(a.value),!0),a}const rr=new Map,nr=/[\[\]\(\) ,]/;function ar(e,t,r){r=r?`-${r}`:`${N()}`,rr.set(r,t);const n=tr(e,t,r,!0);if("errors"!==n.kind)return[];let a=[];const s=e=>a.push({type:"message",text:e}),o=e=>a.push({type:"error",text:e});return n.errors.forEach((({e,m:t,errCtx:{line:r,col:n,invokeId:a}})=>{const i=rr.get(a);if(!i)return void s(`${e} Error: ${a} line ${r} col ${n}: ${t}\n`);const u=i.split("\n")[r-1],d=l(u,n-1).split(nr)[0],v=w(l(u,0,n-1)),p=f(a,"-")?`${l(a,1)} `:"";if(s(`${p}${E(`${r}`,4)} ${v}`),d){const e=l(u,n-1+c(d));o(d),s(`${e}\n`)}else{const e=l(u,n);o(u[n-1]),s(`${e}\n`)}s(`${e} Error: ${t}.\n`)})),a}window.insitux=t.invoker})();
//# sourceMappingURL=insitux.lib.min.js.map