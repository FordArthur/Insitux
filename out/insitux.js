(()=>{"use strict";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.d(t,{invoker:()=>zt});var r={};e.r(r),e.d(r,{abs:()=>H,ceil:()=>W,charCode:()=>j,codeChar:()=>E,concat:()=>h,cos:()=>_,ends:()=>y,flat:()=>x,floor:()=>V,getTimeMs:()=>q,has:()=>m,isArray:()=>c,isNum:()=>u,len:()=>a,log10:()=>G,log2:()=>U,logn:()=>z,lowerCase:()=>C,max:()=>O,min:()=>D,objKeys:()=>S,padEnd:()=>I,push:()=>b,randInt:()=>M,randNum:()=>P,range:()=>N,reverse:()=>A,round:()=>L,sign:()=>K,sin:()=>T,slen:()=>i,slice:()=>s,sortBy:()=>g,splice:()=>o,sqrt:()=>R,starts:()=>f,strIdx:()=>p,sub:()=>v,subIdx:()=>d,substr:()=>l,tan:()=>F,toNum:()=>n,trim:()=>w,trimEnd:()=>B,trimStart:()=>$,upperCase:()=>k});const n=e=>Number(e),s=(e,t,r)=>e.slice(t,r),o=(e,t,r)=>e.splice(t,r),a=e=>e.length,i=e=>e.length,u=e=>!Number.isNaN(Number(e)),c=e=>Array.isArray(e),l=(e,t,r)=>e.substring(t,t+(r??e.length)),p=(e,t)=>e[t],v=(e,t)=>e.includes(t),d=(e,t)=>e.indexOf(t),m=(e,t)=>e.includes(t),f=(e,t)=>e.startsWith(t),y=(e,t)=>e.endsWith(t),x=e=>e.flat(),h=(e,t)=>e.concat(t),b=(e,t)=>e.push(...t),g=(e,t)=>e.sort(t),A=e=>e.reverse(),C=e=>e.toLowerCase(),k=e=>e.toUpperCase(),w=e=>e.trim(),$=e=>e.trimStart(),B=e=>e.trimEnd(),I=(e,t)=>e.padEnd(t),j=e=>e.charCodeAt(0),E=e=>String.fromCharCode(e),P=(e,t)=>e+Math.random()*(t-e),M=(e,t)=>Math.floor(P(e,t)),N=e=>[...Array(e).keys()],S=e=>Object.keys(e),q=()=>(new Date).getTime(),H=Math.abs,D=Math.min,O=Math.max,T=Math.sin,_=Math.cos,F=Math.tan,R=Math.sqrt,L=Math.round,V=Math.floor,W=Math.ceil,K=Math.sign,z=Math.log,U=Math.log2,G=Math.log10,J={print:{returns:["null"]},"print-str":{returns:["null"]},"!":{exactArity:1,returns:["bool"]},"=":{minArity:2},"!=":{minArity:2},"+":{minArity:2,numeric:!0},"-":{minArity:1,numeric:!0},"*":{minArity:2,numeric:!0},"/":{minArity:2,numeric:!0},"//":{minArity:2,numeric:!0},"**":{minArity:1,maxArity:2,numeric:!0},"<":{minArity:2,numeric:!0},">":{minArity:2,numeric:!0},"<=":{minArity:2,numeric:!0},">=":{minArity:2,numeric:!0},"fast=":{exactArity:2},"fast!=":{exactArity:2},"fast+":{exactArity:2,numeric:!0},"fast-":{exactArity:2,numeric:!0},"fast*":{exactArity:2,numeric:!0},"fast/":{exactArity:2,numeric:!0},"fast//":{exactArity:2,numeric:!0},"fast<":{exactArity:2,numeric:!0},"fast>":{exactArity:2,numeric:!0},"fast<=":{exactArity:2,numeric:!0},"fast>=":{exactArity:2,numeric:!0},inc:{exactArity:1,numeric:!0},dec:{exactArity:1,numeric:!0},min:{minArity:2,numeric:!0},max:{minArity:2,numeric:!0},abs:{exactArity:1,numeric:!0},sqrt:{exactArity:1,numeric:!0},round:{minArity:1,maxArity:2,numeric:!0},floor:{exactArity:1,numeric:!0},ceil:{exactArity:1,numeric:!0},logn:{exactArity:1,numeric:!0},log2:{exactArity:1,numeric:!0},log10:{exactArity:1,numeric:!0},and:{minArity:1},or:{minArity:1},xor:{exactArity:2},"&":{exactArity:2,numeric:!0},"|":{exactArity:2,numeric:!0},"^":{exactArity:2,numeric:!0},"~":{exactArity:1,numeric:!0},"<<":{exactArity:2,numeric:!0},">>":{exactArity:2,numeric:!0},">>>":{exactArity:2,numeric:!0},"odd?":{exactArity:1,numeric:"in only",returns:["bool"]},"even?":{exactArity:1,numeric:"in only",returns:["bool"]},"pos?":{exactArity:1,numeric:"in only",returns:["bool"]},"neg?":{exactArity:1,numeric:"in only",returns:["bool"]},"zero?":{exactArity:1,numeric:"in only",returns:["bool"]},"null?":{exactArity:1,returns:["bool"]},"num?":{exactArity:1,returns:["bool"]},"bool?":{exactArity:1,returns:["bool"]},"str?":{exactArity:1,returns:["bool"]},"vec?":{exactArity:1,returns:["bool"]},"dict?":{exactArity:1,returns:["bool"]},"key?":{exactArity:1,returns:["bool"]},"func?":{exactArity:1,returns:["bool"]},"wild?":{exactArity:1,returns:["bool"]},rem:{minArity:2,numeric:!0},sin:{exactArity:1,numeric:!0},cos:{exactArity:1,numeric:!0},tan:{exactArity:1,numeric:!0},vec:{returns:["vec"]},dict:{returns:["dict"]},len:{exactArity:1,types:[["str","vec","dict"]],returns:["num"]},"to-num":{exactArity:1,types:[["str","num"]],returns:["num","null"]},"to-key":{exactArity:1,types:[["str","num"]],returns:["key"]},"has?":{exactArity:2,types:["str","str"],returns:["bool"]},idx:{minArity:2,maxArity:3,types:[["str","vec"]],returns:["num"]},map:{minArity:2,returns:["vec"]},for:{minArity:2,returns:["vec"]},reduce:{minArity:2,maxArity:3,types:[[],["vec","dict","str"]]},filter:{minArity:2,types:[[],["vec","dict","str"]],returns:["vec"]},remove:{minArity:2,types:[[],["vec","dict","str"]],returns:["vec"]},find:{minArity:2,types:[[],["vec","dict","str"]]},count:{minArity:2,types:[[],["vec","dict","str"]],returns:["num"]},repeat:{minArity:2,types:[[],"num"]},"->":{minArity:2},str:{returns:["str"]},rand:{maxArity:2,numeric:!0,returns:["num"]},"rand-int":{maxArity:2,numeric:!0,returns:["num"]},".":{minArity:1},"..":{minArity:2},"...":{minArity:2},into:{exactArity:2,types:[["vec","dict"],["vec","dict"]],returns:["vec","dict"]},push:{minArity:2,maxArity:3,types:[["vec","dict"]],returns:["vec","dict"]},sect:{minArity:1,maxArity:3,types:[["vec","str"],"num","num"],returns:["vec","str"]},reverse:{exactArity:1,types:[["vec","str"]],returns:["vec","str"]},sort:{minArity:1,maxArity:2,types:[["vec","dict","str"]],returns:["vec"]},keys:{exactArity:1,types:["dict"]},vals:{exactArity:1,types:["dict"]},do:{minArity:1},val:{minArity:1},range:{minArity:1,maxArity:3,numeric:"in only",returns:["vec"]},"empty?":{exactArity:1,types:[["str","vec","dict"]],returns:["bool"]},split:{minArity:1,maxArity:2,types:["str","str"],returns:["vec"]},join:{minArity:1,maxArity:2,types:[["vec","dict","str"],"str"],returns:["str"]},"starts-with?":{exactArity:2,types:["str","str"],returns:["bool"]},"ends-with?":{exactArity:2,types:["str","str"],returns:["bool"]},"lower-case":{exactArity:1,types:["str"],returns:["str"]},"upper-case":{exactArity:1,types:["str"],returns:["str"]},trim:{exactArity:1,types:["str"],returns:["str"]},"trim-start":{exactArity:1,types:["str"],returns:["str"]},"trim-end":{exactArity:1,types:["str"],returns:["str"]},"str*":{exactArity:2,types:["str","num"],returns:["str"]},"char-code":{minArity:1,maxArity:2,types:[["str","num"],"num"],returns:["str","num","null"]},time:{exactArity:0,returns:["num"]},version:{exactArity:0,returns:["num"]},tests:{minArity:0,maxArity:1,types:["bool"],returns:["str"]},symbols:{exactArity:0,returns:["vec"]},eval:{exactArity:1,types:["str"]},reset:{exactArity:0},recur:{}},Q={null:"null",str:"string",num:"number",bool:"boolean",key:"keyword",ref:"reference",vec:"vector",dict:"dictionary",func:"function",clo:"closure",wild:"wildcard"},X=e=>"bool"===e.t?e.v:"null"!==e.t;function Y(e,t,r){const{exactArity:n,maxArity:s,minArity:o}=J[e],a=(n,s)=>[{e:"Arity",m:`${e} needs ${n} argument${1!==s?"s":""}, not ${t}`,errCtx:r}];if(void 0!==n){if(t!==n)return a(`exactly ${n}`,n)}else{if(o&&!s&&t<o)return a(`at least ${o}`,o);if(!o&&s&&t>s)return a(`at most ${s}`,s);if(o&&s&&(t<o||t>s))return a(`between ${o} and ${s}`,s)}}function Z(e,t,r,n=!1){const{types:s,numeric:o}=J[e],i=a(t);if(o){const s=t.findIndex((e=>!!a(e)&&(n?!e.find((e=>"num"===e)):"num"!==e[0])));if(-1===s)return;const o=t[s].map((e=>Q[e])).join(", ");return[ee(`${e} takes numeric arguments only, not ${o}`,r)]}if(!s)return;const u=s.map(((e,r)=>{if(r>=i||!t[r])return!1;const s=t[r];if(c(e)){if(!a(e)||(n?!a(s)||s.some((t=>m(e,t))):1===a(s)&&m(e,s[0])))return!1;const t=s.map((e=>Q[e]));return`argument ${r+1} must be either: ${e.map((e=>Q[e])).join(", ")}, not ${t}`}{if(n?!a(s)||m(s,e):1===a(s)&&e===s[0])return!1;const t=s.map((e=>Q[e]));return`argument ${r+1} must be ${Q[e]}, not ${t}`}})).filter((e=>!!e));return a(u)?u.map((e=>ee(e,r))):void 0}const ee=(e,t)=>({e:"Type",m:e,errCtx:t});function te(e,t){const r=t.map((e=>Q[e])).join(", ");return[ee(`number as operation argument must be string, vector, or dictionary, not ${r}`,e)]}function re(e,t){const r=t.map((e=>Q[e])).join(", ");return[ee(`keyword as operation argument must be dictionary or vector, not ${r}`,e)]}const{concat:ne,has:se,flat:oe,push:ae,slice:ie,splice:ue}=r,{slen:ce,starts:le,sub:pe,substr:ve,strIdx:de}=r,{isNum:me,len:fe,toNum:ye}=r,xe={t:"null",v:void 0},he={t:"bool",v:!1};function be(e,t){const r=[];for(;;){const n=ge(e,t);if(!fe(n))break;r.push(n)}return r}function ge(e,t,r=!1){if(!fe(e))return[];const{typ:n,text:s,errCtx:o}=e.shift();if("sym"===n&&pe("#@",s)&&fe(e)&&"("===e[0].typ){const r=e.map((e=>e.text)),n=ge(e,t,"@"===s),a=n.find((e=>"err"===e.typ));return a?[a]:[{typ:"#"===s?"clo":"par",value:[ie(r,0,fe(r)-fe(e)).join(" "),n],errCtx:o}]}switch(n){case"str":return[{typ:"val",value:{t:"str",v:s},errCtx:o}];case"num":return[{typ:"val",value:{t:"num",v:ye(s)},errCtx:o}];case"sym":if("true"===s||"false"===s)return[{typ:"val",value:{t:"bool",v:"true"===s},errCtx:o}];if("null"===s)return[{typ:"val",value:xe,errCtx:o}];if("_"===s)return[{typ:"val",value:{t:"wild",v:void 0},errCtx:o}];if(le(s,":"))return[{typ:"val",value:{t:"key",v:s},errCtx:o}];if(le(s,"%")&&me(ve(s,1))){const e=ye(ve(s,1));return e<0?[{typ:"val",value:xe,errCtx:o}]:[{typ:"upa",value:e,errCtx:o}]}return se(t,s)?[{typ:"npa",value:t.indexOf(s),errCtx:o}]:"args"===s?[{typ:"upa",value:-1,errCtx:o}]:"PI"===s||"E"===s?[{typ:"val",value:{t:"num",v:"PI"===s?3.141592653589793:2.718281828459045},errCtx:o}]:J[s]?[{typ:"val",value:{t:"func",v:s},errCtx:o}]:[{typ:"ref",value:s,errCtx:o}];case"(":return function(e,t,r=!0){const n=e.shift();if(!n)return[];const{typ:s,text:o,errCtx:a}=n;let i=o;const u=(e,t=a)=>[{typ:"err",value:e,errCtx:t}];if("catch"===i){if("("!==e[0].typ)return u("argument 1 must be expression");const r=ge(e,t),n=oe(be(e,t));return fe(r)&&fe(n)?[...r,{typ:"cat",value:fe(n),errCtx:a},...n]:u("must provide at least 2 arguments")}if("var"===i||"let"===i){const r=[];for(;;){const n=ge(e,t);if(fe(r)&&!fe(n))return r;const s=ge(e,t);if(!(fe(r)||fe(n)&&fe(s)))return u("must provide at least one declaration name and value");if(!fe(s))return u("must provide a value after each declaration name");const o=n[0];if("ref"!==o.typ)return[{typ:"err",value:`${i} declaration name must be a symbol`,errCtx:o.errCtx}];ae(r,s),r.push({typ:i,value:o.value,errCtx:a})}}else{if("var!"===i||"let!"===i){const r=[],n=ge(e,t);if(!fe(n))return u("must provide declaration name");const s=n[0];if("ref"!==s.typ)return u("declaration name must be symbol");const o=ge(e,t);if(!fe(o))return u("must provide an operation");const c=be(e,t);return r.push({typ:"ref",value:s.value,errCtx:a}),ae(r,oe(c)),ae(r,o),r.push({typ:"exe",value:fe(c)+1,errCtx:a}),r.push({typ:"var!"===i?"var":"let",value:s.value,errCtx:a}),r}if("if"===i||"if!"===i||"when"===i){const r=ge(e,t);if(!fe(r))return u("must provide condition");const n=r;if("if!"===i&&(n.push({typ:"val",value:{t:"func",v:"!"},errCtx:a}),n.push({typ:"exe",value:1,errCtx:a})),"if"===i||"if!"===i){const r=ge(e,t);if(!fe(r))return u("must provide a branch");n.push({typ:"if",value:fe(r)+1,errCtx:a}),ae(n,r);const s=ge(e,t);if(fe(s)){n.push({typ:"jmp",value:fe(s),errCtx:a}),ae(n,s);const r=ge(e,t);if(fe(r))return u("too many branches; delete this branch",r[0].errCtx)}else n.push({typ:"jmp",value:1,errCtx:a}),n.push({typ:"val",value:xe,errCtx:a})}else{const r=oe(be(e,t));n.push({typ:"if",value:fe(r)+1,errCtx:a}),ae(n,r),n.push({typ:"jmp",value:1,errCtx:a}),n.push({typ:"val",value:xe,errCtx:a})}return n}if("and"===i||"or"===i||"while"===i){const r=be(e,t);let n=r.reduce(((e,t)=>e+fe(t)),0);if(fe(r)<2)return u("requires at least two arguments");const s=[];if("while"===i){s.push({typ:"val",value:xe,errCtx:a}),n+=2;const e=r.shift();return ae(s,e),s.push({typ:"if",value:n-fe(e),errCtx:a}),s.push({typ:"pop",value:fe(r),errCtx:a}),r.forEach((e=>ae(s,e))),s.push({typ:"loo",value:-(n+1),errCtx:a}),s}n+=fe(r),n+=ye("and"===i);const o="and"===i?"if":"or";for(let e=0;e<fe(r);++e)ae(s,r[e]),n-=fe(r[e]),s.push({typ:o,value:n,errCtx:a}),--n;return"and"===i?ae(s,[{typ:"val",value:{t:"bool",v:!0},errCtx:a},{typ:"jmp",value:1,errCtx:a},{typ:"val",value:he,errCtx:a}]):s.push({typ:"val",value:he,errCtx:a}),s}if("match"===i){const r=ge(e,t);if(!fe(r))return u("must provide condition");const n=be(e,t),s=fe(n)%2?n.pop():[];if(!fe(n))return u("must provide at least one case");let o=n.reduce(((e,t)=>e+fe(t)+1),fe(s)?-1:0)+2;const i=r;for(;fe(n)>1;){const e=n.shift(),t=n.shift();ae(i,e),i.push({typ:"mat",value:fe(t)+1,errCtx:a}),ae(i,t),o-=fe(e)+fe(t)+2,i.push({typ:"jmp",value:o,errCtx:a})}return fe(s)?ae(i,s):(i.push({typ:"pop",value:1,errCtx:a}),i.push({typ:"val",value:he,errCtx:a})),i}}const c=[];if("("===s||se(t,o)||pe("%#@",de(o,0))){e.unshift(n);const s=ge(e,t);r&&c.push({typ:"exp",value:fe(s),errCtx:a}),ae(c,s)}const l=be(e,t),[p,v]=[oe(l),fe(l)];if("return"===i)return[...p,{typ:"ret",value:!!fe(p),errCtx:a}];if(J[i]&&!r){const e=Y(i,v,a);ae(c,e?.map((e=>u(e.m)[0]))??[]),e||2===v&&J[`fast${i}`]&&(i=`fast${i}`)}if(fe(c))c.push({typ:"exe",value:v,errCtx:a});else{const e="num"===s?{t:"num",v:ye(i)}:le(i,":")?{t:"key",v:i}:J[i]?{t:"func",v:i}:"true"===i||"false"===i?{t:"bool",v:"true"===i}:{t:"str",v:i};c.push({typ:"val",value:e,errCtx:a}),c.push({typ:"exe",value:v,errCtx:a})}return[...p,...c]}(e,t,r);case")":case"rem":return[];default:return 0}}function Ae(e){const t=[];for(let r=0,n=fe(e);r<n;++r){const n=e[r];switch(n.typ){case"val":t.push({types:[n.value.t],val:n.value});break;case"exe":{const e=t.pop(),r=ue(t,fe(t)-n.value,n.value),s=e=>r.findIndex((({types:t})=>t&&!e.find((e=>se(t,e))))),o=t=>e.val?e.val.t===t:e.types&&1===fe(e.types)&&e.types[0]===t;if(e.val&&"func"===e.val.t){if("recur"===e.val.v){ue(t,fe(t)-n.value,n.value);break}const s=Z(e.val.v,r.map((e=>e.types??[])),n.errCtx,!0);if(s)return s;const{returns:o,numeric:a}=J[e.val.v];t.push(a&&"in only"!==a?{types:["num"]}:{types:o})}else if(o("num")){const e=s(["str","dict","vec"]);if(-1!==e)return te(n.errCtx,r[e].types);t.push({})}else if(o("key")){const e=s(["dict","vec"]);if(-1!==e)return re(n.errCtx,r[e].types);t.push({})}else o("str")||o("bool")?t.push({}):e.types||e.val||t.push({});break}case"or":t.pop(),t.push({}),r+=n.value;break;case"exp":case"cat":case"var":case"let":case"loo":case"jmp":break;case"clo":case"par":{const e=Ae(n.value[1]);if(e)return e}case"ref":case"npa":case"upa":t.push({});break;case"if":{t.pop(),t.push({});const s=Ae(ie(e,r+1,n.value+1));if(s)return s;r+=n.value-1;break}case"mat":t.pop(),t.pop(),r+=n.value,r+=e[r].value,t.push({});break;case"pop":ue(t,fe(t)-n.value,n.value);break;case"ret":n.value&&t.pop()}}}function Ce(e,t){const{tokens:r,stringError:n}=function(e,t,r=!0,n=!1){const s=[];let o=!1,a=!1,i=[0,0],u=!1,c=!1,l=!1,p=1,v=0;for(let d=0,m=ce(e);d<m;++d){const f=de(e,d),y=d+1!==m?de(e,d+1):"";if(++v,l){"\n"===f?(l=!1,++p,v=0):n&&(s[fe(s)-1].text+=f);continue}if(a){a=!1,o&&(s[fe(s)-1].text+={n:"\n",t:"\t",'"':'"'}[f]||`\\${f}`);continue}if("\\"===f){a=!0;continue}if('"'===f){(o=!o)&&(i=[p,v],s.push({typ:"str",text:"",errCtx:{sourceId:t,line:p,col:v}})),c=u=!1;continue}const x=pe(" \t\n\r,",f);if(!o&&x){c=u=!1,"\n"===f&&(++p,v=0);continue}if(!o&&";"===f){l=!0,n&&s.push({typ:"rem",text:"",errCtx:{sourceId:t,line:p,col:v}});continue}const h={sourceId:t,line:p,col:v},b=e=>pe("0123456789",e),g=pe("()[]{}",f);if(c&&!b(f)&&(c="."===f&&!pe(s[fe(s)-1].text,"."),c||g||x||(u=!0,s[fe(s)-1].typ="sym")),u&&g&&(u=!1),!o&&!u&&!c){if(g){const e={"[":"(","{":"(","(":"(",")":")","}":")","]":")"}[f];s.push({typ:e,text:r?e:f,errCtx:h}),r&&("["===f?s.push({typ:"sym",text:"vec",errCtx:h}):"{"===f&&s.push({typ:"sym",text:"dict",errCtx:h}));continue}c=b(f)||"."===f&&b(y)||"-"===f&&(b(y)||"."===y),u=!c;const e=u?"sym":"num";s.push({typ:e,text:"",errCtx:h})}s[fe(s)-1].text+=f}return{tokens:s,stringError:o?i:void 0}}(e,t),s=function(e,t){const r=fe(t)?t[0].errCtx.sourceId:"",n=[],s=(e,t)=>n.push({e:"Parse",m:e,errCtx:t});if(e){const[t,o]=e;return s("unmatched double quotation marks",{sourceId:r,line:t,col:o}),n}const o=e=>fe(t.filter((({typ:t})=>t===e))),[a,i]=[o("("),o(")")];{const[e,n]=function(e,t,r){const n=r>=t,[s,o]=[n?"(":")",n?")":"("],a=n?1:-1;for(let t=fe(e),r=n?0:t-1,i=0;n?r<t:r>=0;r+=a){const{typ:t,errCtx:{line:n,col:a}}=e[r];if(i+=ye(t===s)-ye(t===o),i<0)return[n,a]}return[0,0]}(t,a,i);e+n&&s("unmatched parenthesis",{sourceId:r,line:e,col:n})}let u;for(let e=0,r=!1;e<fe(t);++e){if(r&&")"===t[e].typ){u=t[e];break}r="("===t[e].typ}return u&&s("empty expression forbidden",u.errCtx),n}(n,r);if(fe(s))return{errors:s,funcs:{}};const o=function(e){const t=e=>fe(e)>1&&"sym"===e[1].typ&&"function"===e[1].text,r=e.filter((e=>t(e))),n=oe(e.filter((e=>!t(e)))),s=r.map((e=>({name:e[2].text,tokens:ie(e,3),errCtx:e[2].errCtx})));return fe(n)?ne(s,[{name:"entry",tokens:n,errCtx:n[0].errCtx}]):s}(function(e){const t=[[]];let r=0;return e.forEach((e=>{t[fe(t)-1].push(e),r+=ye("("===e.typ)-ye(")"===e.typ),0===r&&t.push([])})),t}(r)).map((e=>function({name:e,tokens:t},r){const n=(e,t=r)=>["err",{e:"Parse",m:e,errCtx:t}],s=t.findIndex((e=>"sym"!==e.typ||pe("%#@",e.text))),o=ie(t,0,s),a=ie(t,s);if("("===e)return n("nameless function");if(!fe(o)&&!fe(a))return n("empty function body");if(fe(a)&&")"===a[0].typ){if(!fe(o))return n("empty function body");a.unshift(o.pop())}fe(o)&&!fe(a)&&a.push(o.pop());const i=[];for(;fe(a);)ae(i,ge(a,o.map((e=>e.text))));for(let e=0,t=fe(i);e<t;e++){const t=i[e];if("err"===t.typ)return n(t.value,t.errCtx)}return["func",{name:e,ins:i}]}(e,{sourceId:t,line:e.errCtx.line,col:e.errCtx.col}))),a=[],i=[];o.forEach((e=>{"err"===e[0]?i.push(e[1]):a.push(e[1])})),ae(i,oe(a.map((e=>Ae(e.ins)??[]))));const u={};return a.forEach((e=>u[e.name]=e)),{errors:i,funcs:u}}function ke(e,t){return e.dict.has(t)?{kind:"val",value:e.dict.get(t)}:{kind:"err",err:`"${t} not found.`}}function we(e,t,r){e.dict.set(t,r)}function $e(e,t,r){switch(t){case"print-str":e.output+=r[0].v;break;case"print":case"test.function":e.output+=r[0].v+"\n";break;default:return{kind:"err",err:`operation ${t} does not exist`}}return{kind:"val",value:{t:"null",v:void 0}}}const Be=[{name:"Hello, world!",code:'"Hello, world!"',out:"Hello, world!"},{name:"Say Hello, world!",code:'(print "Hello, world!")',out:"Hello, world!\nnull"},{name:"1 + 1 = 2",code:"(+ 1 1)",out:"2"},{name:"Negate 1 = -1",code:"(- 1)",out:"-1"},{name:"(1+1)+1+(1+1) = 5",code:"(+ (+ 1 1) 1 (+ 1 1))",out:"5"},{name:"Conditional head",code:"((if true + -) 12 9 1)",out:"22"},{name:"Whens",code:'[(when 123 (print "hi") 234) (when false (print "bye"))]',out:"hi\n[234 null]"},{name:"match and wildcard",code:'(match [1 2]\n             [0 0] (print "hello")\n             [0 2] (print "bye")\n             [1 _] "hey")',out:"hey"},{name:"Cond number head",code:"((if false 1 2) [:a :b :c])",out:":c"},{name:"and & short-circuit",code:"[(and true (if true null 1) true) (and 1 2 3)]",out:"[false true]"},{name:"or & short-circuit",code:'[(or true (print "hello") 1) (or false (print-str "-> ") 1)]',out:"-> [true 1]"},{name:"String retrieve",code:'(2 "Hello")',out:"l"},{name:"Vector retrieve",code:"(2 [:a :b :c :d])",out:":c"},{name:"Key as operation",code:'[(:age {:name "Patrick" :age 24}) (:abc [:a :abc :c])]',out:"[24 :abc]"},{name:"Dictionary as op 1",code:'({"name" "Patrick" "age" 24} "age")',out:"24"},{name:"Dictionary as op 2",code:'({"name" "Patrick"} "age" 24)',out:'{"name" "Patrick", "age" 24}'},{name:"Equalities",code:'[(= 1 2 1)\n            (!= 1 2 1)\n            (= "Hello" "hello")\n            (!= "world" "world")\n            (= [0 [1]] [0 [1]])]',out:"[false 1 false false [0 [1]]]"},{name:"Define and retrieve",code:"(var a 1) a",out:"1"},{name:"Define and add",code:"(var a 1) (inc a)",out:"2"},{name:"Define op and call",code:"(var f +) (f 2 2)",out:"4"},{name:"Define vec and call",code:"(var f [1]) (f 1)",out:"1"},{name:"Define num and call",code:"(var f 1) (f [:a :b :c])",out:":b"},{name:"Apply op to var",code:"(var a 10) (var! a + 10)",out:"20"},{name:"Apply op to let",code:"(let a 10) (let! a (if true + -) (+ 2 3) 5)",out:"20"},{name:"Print simple vector",code:"[1 2 3]",out:"[1 2 3]"},{name:"Boolean select",code:"[(true 1 2) (false 1)]",out:"[1 null]"},{name:"Sum vector of numbers",code:"[(reduce + [1 2 3]) (reduce + [1 2 3] 3)]",out:"[6 9]"},{name:"Sum vectors of numbers",code:"(map + [1 2 3] [1 2 3 4])",out:"[2 4 6]"},{name:"Filter by integer",code:'(filter 2 [[1] [:a :b :c] "hello" "hi"])',out:'[[:a :b :c] "hello"]'},{name:"Comments, short decimal",code:';((print "Hello")\n           .456',out:"0.456"},{name:"Dictionary into vector",code:"(into [1 2] {3 4 5 6})",out:"[1 2 [3 4] [5 6]]"},{name:"Vector into dictionary",code:"(into {[0] 1 [2] 3} [[0] 2])",out:"{[0] 2, [2] 3}"},{name:"While loop",code:"(var n 5)\n           (while (< 0 n)\n             (print-str n)\n             (var n (dec n)))",out:"543210"},{name:"Catch error",code:'(catch\n             (:e (catch (do (let a :a) (+ 1 a)) (0 errors)))\n             (print "hi"))',out:"Type"},{name:"Define with no call",code:'(function func (print "Nothing."))'},{name:"Call greet func",code:'(function greeting (print "Hello!")) (greeting)',out:"Hello!\nnull"},{name:"Call const value func",code:"(function const 123) (const)",out:"123"},{name:"Call identity funcs",code:"(function id1 %)\n           (function id2 x x)\n           [(id1 123) (id2 456)]",out:"[123 456]"},{name:"Call greet with name",code:'(function greeting name (print "Hello, " name "!"))\n           (greeting "Patrick")',out:"Hello, Patrick!\nnull"},{name:"Call with too few args",code:"(function func a b c [a b c]) (func 1 2)",out:"[1 2 null]"},{name:"Define func and call",code:"(function func a b (+ a b)) (var f func) (f 2 2)",out:"4"},{name:"Anonymous parameters",code:"(function avg<n? (< (/ (.. + %) (len %)) %1))\n           (avg<n? [0 10 20 30 40] 5)",out:"false"},{name:"Call parameter",code:'(function f x (x "hello")) (f print)',out:"hello\nnull"},{name:"Let and retrieve",code:"(function f (let a 1) a) (f)",out:"1"},{name:"Let num op and call",code:"(function f (let n 0) (n [1])) (f)",out:"1"},{name:"Explicit return",code:"(function f (return 123) (print 456)) (f)",out:"123"},{name:"Closure 1",code:"(let x 10)\n           (let closure #(+ x x))\n           (let x 11)\n           (closure)",out:"20"},{name:"Closure 2",code:"(filter #(or (.. = args) (even? %)) (range 10) 5)",out:"[0 2 4 5 6 8]"},{name:"Closure 3",code:"(function f #(+ x x))\n           (var x 10) (let c20 (f))\n           (var x 20) (let c40 (f))\n           [(c20) (c40)]",out:"[20 40]"},{name:"Func returns closure",code:"(function f x #(x 2 2))\n           (let closure (f +))\n           (closure)",out:"4"},{name:"Dictionary closure",code:"(function f x #{x 2})\n           (let closure (f :a))\n           (closure)",out:"{:a 2}"},{name:"Vector closure",code:"(function f x #[1 x %])\n           (let closure (f 2))\n           (closure 3)",out:"[1 2 3]"},{name:"Closure as head",code:"(#[% %1 %2] 1 2 3)",out:"[1 2 3]"},{name:"Partial closure 1",code:"(@[] 1 2 3)",out:"[1 2 3]"},{name:"Partial closure 2",code:"(@((do +) 2) 2)",out:"4"},{name:"Threading",code:"(-> 1 inc @(+ 10))",out:"12"},{name:"String instead of number",code:'(function sum (.. + args))\n           (print (sum 2 2))\n           (sum 2 "hi")',out:"4",err:["Type"]},{name:"Reference non-existing",code:"x",err:["Reference"]},{name:"Expired let retrieve",code:"(function f (let a 1) a) (f) a",err:["Reference"]},{name:"Call non-existing",code:"(x)",err:["External"]},{name:"Call budget",code:"(function f (f)) (f)",err:["Budget"]},{name:"Loop budget",code:"(var n 10000)\n           (while (< 0 n)\n             (var n (dec n)))",err:["Budget"]},{name:"Range budget",code:"(range 10000)",err:["Budget"]},{name:"Fibonacci 13",code:"(function fib n\n             (if (< n 2) n\n               (+ (fib (dec n))\n                  (fib (- n 2)))))\n           (fib 13)",out:"233"},{name:"dedupe (recur)",code:"(function dedupe list -out\n             (let out (or -out []))\n             (let next (if (out (0 list)) [] [(0 list)]))\n             (if (empty? list) out\n                 (recur (sect list) (into out next))))\n           (dedupe [1 1 2 3 3 3])",out:"[1 2 3]"},{name:"frequencies",code:'(function frequencies list\n             (reduce #(push % %1 (inc (or (% %1) 0))) list {}))\n           (frequencies "12121212")',out:'{"1" 4, "2" 4}'},{name:"set get",code:"[($globals.time_offset 5.5) $globals.time_offset]",out:"[5.5 5.5]"},{name:"exe",code:"(test.function 123)",out:"123\nnull"},{name:"Empty parens",code:"()",err:["Parse"]},{name:"Imbalanced parens 1",code:'(print ("hello!")',err:["Parse"]},{name:"Imbalanced parens 2",code:'print "hello!")',err:["Parse"]},{name:"Imbalanced quotes",code:'(print "Hello)',err:["Parse"]},{name:"Function as op",code:"(function)",err:["Parse"]},{name:"Function without name",code:"(function (+))",err:["Parse"]},{name:"Function without body",code:"(function func)",err:["Parse"]},{name:"Variable not symbol",code:"(var 1 2)",err:["Parse"]},{name:"Parser type error 1",code:"(function f (+ 1 :a))",err:["Type"]},{name:"Parser type error 2",code:"(function f (+ 1 (into {} {})))",err:["Type"]},{name:"Parser type error 3",code:"(function f (if true (into 2 {}) (+ 2 2)))",err:["Type"]}],Ie=({v:e})=>e,je=({v:e})=>e,Ee=({v:e})=>e,Pe=({v:e})=>e,Me=(e,t)=>a(e)===a(t)&&!e.some(((e,r)=>!Ne(e,t[r]))),Ne=(e,t)=>{if("wild"===e.t||"wild"===t.t)return!0;if(e.t!==t.t)return!1;switch(e.t){case"null":return!0;case"bool":case"num":return e.v===t.v;case"vec":return Me(e.v,Ee(t));case"dict":{const r=Pe(t);return a(e.v.keys)===a(r.keys)&&Me(e.v.keys,r.keys)}case"str":case"ref":case"key":case"func":return je(e)===je(t);case"clo":return e.v.name===t.v.name}return 0},Se=e=>e.reduce(((e,t)=>e+qe(t)),""),qe=e=>{const t=e=>"str"===e.t?`"${e.v}"`:qe(e);if("clo"===e.t)return`#${e.v.name}`;if("vec"===e.t)return`[${e.v.map(t).join(" ")}]`;if("dict"===e.t){const{keys:r,vals:n}=e.v,[s,o]=[r.map(t),n.map(t)];return`{${s.map(((e,t)=>`${e} ${o[t]}`)).join(", ")}}`}return"null"===e.t?"null":"wild"===e.t?"_":`${e.v}`},He=e=>"vec"===e.t?s(e.v):"str"===e.t?[...e.v].map((e=>({t:"str",v:e}))):"dict"===e.t?e.v.keys.map(((t,r)=>({t:"vec",v:[t,e.v.vals[r]]}))):[],De=e=>{a(e)%2==1&&e.pop();const t=e.filter(((e,t)=>t%2==0)),r=e.filter(((e,t)=>t%2==1)),n=[],s=[];return t.forEach(((e,t)=>{const o=n.findIndex((t=>Ne(t,e)));-1===o?(n.push(e),s.push(r[t])):s[o]=r[t]})),{t:"dict",v:{keys:n,vals:s}}},Oe=({keys:e,vals:t},r)=>{const n=e.findIndex((e=>Ne(e,r)));return-1===n?{t:"null",v:void 0}:t[n]},Te=({keys:e,vals:t},r,n)=>{const[o,a]=[s(e),s(t)],i=e.findIndex((e=>Ne(e,r)));return-1!==i?a[i]=n:(o.push(r),a.push(n)),{keys:o,vals:a}},{abs:_e,cos:Fe,sin:Re,tan:Le,sign:Ve,sqrt:We,floor:Ke,ceil:ze,round:Ue,max:Ge,min:Je}=r,{logn:Qe,log2:Xe,log10:Ye}=r,{concat:Ze,has:et,flat:tt,push:rt,reverse:nt,slice:st,splice:ot,sortBy:at}=r,{ends:it,slen:ut,starts:ct,sub:lt,subIdx:pt,substr:vt,upperCase:dt,lowerCase:mt}=r,{trim:ft,trimStart:yt,trimEnd:xt,charCode:ht,codeChar:bt,strIdx:gt}=r,{getTimeMs:At,randInt:Ct,randNum:kt}=r,{isNum:wt,len:$t,objKeys:Bt,range:It,toNum:jt}=r;let Et,Pt=[],Mt=[];const Nt=e=>Pt.push({t:"bool",v:e}),St=e=>Pt.push({t:"num",v:e}),qt=(e="")=>Pt.push({t:"str",v:e}),Ht=(e=[])=>Pt.push({t:"vec",v:e}),Dt=e=>Pt.push({t:"dict",v:e}),Ot=()=>Pt.push({t:"null",v:void 0}),Tt=e=>Pt.push({t:"func",v:e});function _t(e,t,r,n=!0){const i=[{e:"Arity",m:`${Q[t.t]} as op requires one sole argument`,errCtx:r}];if("str"===t.t||"func"===t.t){const u=t.v;return J[u]?t=>function(e,t,r,n,i){const u=e=>[ee(e,n)];if(i){const r=Y(e,$t(t),n);if(r)return r}{const r=Z(e,t.map((e=>[e.t])),n);if(r)return r}switch(e){case"str":return void Pt.push({t:"str",v:Se(t)});case"print":case"print-str":return r.exe(e,[{t:"str",v:Se(t)}]),void Ot();case"vec":return void Ht(t);case"dict":return void Pt.push(De(t));case"len":return void St("str"===t[0].t?ut(t[0].v):"vec"===t[0].t?$t(t[0].v):$t(Pe(t[0]).keys));case"to-num":return void(wt(t[0].v)?St(jt(t[0].v)):Ot());case"to-key":return void Pt.push({t:"key",v:`:${qe(t[0])}`});case"!":return void Nt(!X(t[0]));case"=":case"!=":for(let r=1,n=$t(t);r<n;++r)if(Ne(t[r-1],t[r])!==("="===e))return void Nt(!1);return void Pt.push(t[0]);case"-":return void St(1===$t(t)?-Ie(t[0]):t.map(Ie).reduce(((e,t)=>e-t)));case"**":return void St(Ie(t[0])**(1===$t(t)?2:Ie(t[1])));case"+":return void St(t.map(Ie).reduce(((e,t)=>e+t)));case"*":return void St(t.map(Ie).reduce(((e,t)=>e*t)));case"/":return void St(t.map(Ie).reduce(((e,t)=>e/t)));case"//":return void St(t.map(Ie).reduce(((e,t)=>Ke(e/t))));case"fast=":case"fast!=":return Ne(t[0],t[1])!==("fast="===e)?void Nt(!1):void Pt.push(t[0]);case"fast-":return void St(t[0].v-t[1].v);case"fast+":return void St(t[0].v+t[1].v);case"fast*":return void St(t[0].v*t[1].v);case"fast/":return void St(t[0].v/t[1].v);case"fast//":return void St(Ke(t[0].v/t[1].v));case"fast<":return void Nt(t[0].v<t[1].v);case"fast>":return void Nt(t[0].v>t[1].v);case"fast<=":return void Nt(t[0].v<=t[1].v);case"fast>=":return void Nt(t[0].v>=t[1].v);case"rem":return void St(t.map(Ie).reduce(((e,t)=>e%t)));case"min":return void St(t.map(Ie).reduce(((e,t)=>Je(e,t))));case"max":return void St(t.map(Ie).reduce(((e,t)=>Ge(e,t))));case"<":case">":case"<=":case">=":for(let r=1,n=$t(t);r<n;++r){const[n,s]=[t[r-1].v,t[r].v];if("<"===e&&n>=s||">"===e&&n<=s||"<="===e&&n>s||">="===e&&n<s)return void Nt(!1)}return void Nt(!0);case"inc":return void St(t[0].v+1);case"dec":return void St(t[0].v-1);case"abs":return void St(_e(t[0].v));case"round":if(2===$t(t)){const e=10**t[1].v;St(Ue(t[0].v*e)/e)}else St(Ue(t[0].v));return;case"sin":case"cos":case"tan":case"sqrt":case"floor":case"ceil":case"logn":case"log2":case"log10":return void St({sin:Re,cos:Fe,tan:Le,sqrt:We,floor:Ke,ceil:ze,logn:Qe,log2:Xe,log10:Ye}[e](Ie(t[0])));case"and":return void Nt(t.every(X));case"or":return void Nt(t.some(X));case"xor":return void(X(t[0])!==X(t[1])?Pt.push(X(t[0])?t[0]:t[1]):Nt(!1));case"&":case"|":case"^":case"<<":case">>":case">>>":const[i,c]=[Ie(t[0]),Ie(t[1])];return void St("&"===e?i&c:"|"===e?i|c:"^"===e?i^c:"<<"===e?i<<c:">>"===e?i>>c:i>>>c);case"~":return void St(~Ie(t[0]));case"odd?":case"even?":return void Nt(Ie(t[0])%2==("odd?"===e?1:0));case"pos?":case"neg?":case"zero?":{const r=Ie(t[0]);return void Nt("pos?"===e?r>0:"neg?"===e?r<0:!r)}case"null?":case"num?":case"bool?":case"str?":case"dict?":case"vec?":case"key?":case"func?":case"wild?":return void Nt("null?"===e&&"null"===t[0].t||"num?"===e&&"num"===t[0].t||"bool?"===e&&"bool"===t[0].t||"str?"===e&&"str"===t[0].t||"dict?"===e&&"dict"===t[0].t||"vec?"===e&&"vec"===t[0].t||"key?"===e&&"key"===t[0].t||"func?"===e&&("func"===t[0].t||"clo"===t[0].t)||"wild?"===e&&"wild"===t[0].t);case"has?":return void Nt(lt(je(t[0]),je(t[1])));case"idx":{let e=-1;if("str"===t[0].t){if("str"!==t[1].t)return u("strings can only contain strings");if(!($t(t)<3)){const e=t[0].v.split("");return e[Ie(t[2])]=t[1].v,void qt(e.join(""))}e=pt(t[0].v,t[1].v)}else if("vec"===t[0].t){if(!($t(t)<3)){const e=st(t[0].v);return e[Ie(t[2])]=t[1],void Ht(e)}e=t[0].v.findIndex((e=>Ne(e,t[1])))}return void(-1===e?Ot():St(e))}case"map":case"for":case"reduce":case"filter":case"remove":case"find":case"count":{const s=_t(r,t.shift(),n);if("map"===e||"for"===e){const e=t.findIndex((({t:e})=>"vec"!==e&&"str"!==e&&"dict"!==e));if(-1!==e)return u(`argument ${e+2} must be either: string, vector, dictionary, not ${Q[t[e].t]}`)}if("for"===e){const e=t.map(He),o=e.map($t),a=o.map(((e,t)=>st(o,0,t+1).reduce(((e,t)=>e*t))));a.unshift(1);const i=a.pop();if(i>r.loopBudget)return[{e:"Budget",m:"would exceed loop budget",errCtx:n}];const u=[];for(let t=0;t<i;++t){const r=a.map(((e,r)=>Ke(t/e%o[r]))),n=s(e.map(((e,t)=>e[r[t]])));if(n)return n;u.push(Pt.pop())}return void Ht(u)}if("map"===e){const e=t.map(He),r=Je(...e.map($t)),n=[];for(let t=0;t<r;++t){const r=s(e.map((e=>e[t])));if(r)return r;n.push(Pt.pop())}return void Ht(n)}const o=He(t.shift());if("reduce"!==e){const r="remove"===e,n="find"===e,a="count"===e,i=[];let u=0;for(let e=0,c=$t(o);e<c;++e){const c=s([o[e],...t]);if(c)return c;const l=X(Pt.pop());if(a)u+=l?1:0;else if(n){if(l)return void Pt.push(o[e])}else l!==r&&i.push(o[e])}switch(e){case"count":return void St(u);case"find":return void Ot()}return void Ht(i)}if(!$t(o))return void($t(t)?Pt.push(t[0]):Ht());if($t(o)<2&&!$t(t))return void rt(Pt,o);let a=($t(t)?t:o).shift();for(let e=0,t=$t(o);e<t;++e){const t=s([a,o[e]]);if(t)return t;a=Pt.pop()}return void Pt.push(a)}case"repeat":{const e=t.shift(),s=[],o=Ie(t[0]);if(o>r.rangeBudget)return[{e:"Budget",m:"would exceed range budget",errCtx:n}];if(r.rangeBudget-=o,"func"===e.t||"clo"===e.t){const t=_t(r,e,n);for(let e=0;e<o;++e){const r=t([{t:"num",v:e}]);if(r)return r;s.push(Pt.pop())}}else for(let t=0;t<o;++t)s.push(e);return void Ht(s)}case"->":Pt.push(t.shift());for(let e=0,s=$t(t);e<s;++e){const s=_t(r,t[e],n)([Pt.pop()]);if(s)return s}return;case"rand-int":case"rand":{const r=$t(t),[n,s]=[r<2?0:Ie(t[0]),0===r?1+jt("rand-int"===e):Ie(1===r?t[0]:t[1])];St("rand-int"===e?Ct(n,s):kt(n,s))}return;case"do":case"val":return void Pt.push("do"===e?t.pop():t.shift());case".":case"..":case"...":{const s=_t(r,t.shift(),n);if("."===e)return s(t);let o=t;if(".."===e)o=tt(t.map((e=>"vec"===e.t?e.v:[e])));else{const e=o.pop();rt(o,tt(["vec"===e.t?e.v:[e]]))}return s(o)}case"into":if("vec"===t[0].t)Ht(Ze(t[0].v,He(t[1])));else if("vec"===t[1].t)Pt.push(De(Ze(tt(He(t[0]).map(Ee)),t[1].v)));else{const{keys:e,vals:r}=Pe(t[0]),n=Pe(t[1]);Dt({keys:Ze(e,n.keys),vals:Ze(r,n.vals)})}return;case"push":if("vec"===t[0].t){const e=t[0].v;if($t(t)<3)Ht(Ze(e,[t[1]]));else{const r=Ie(t[2]);Ht(Ze(Ze(st(e,0,r),[t[1]]),st(e,r)))}}else $t(t)<3?Pt.push((({keys:e,vals:t},r)=>{const[n,a]=[s(e),s(t)],i=e.findIndex((e=>Ne(e,r)));return-1!==i&&(o(n,i,1),o(a,i,1)),{t:"dict",v:{keys:n,vals:a}}})(Pe(t[0]),t[1])):Dt(Te(Pe(t[0]),t[1],t[2]));return;case"sect":{const e=t[0],r="vec"===e.t?$t(e.v):ut(je(e));let n=0,s=r;switch($t(t)){case 1:n=1;break;case 2:{const e=Ie(t[1]);e<0?s+=e:n+=e;break}case 3:{const e=Ie(t[1]),o=Ie(t[2]);n=e<0?r+e+(o<0?o:0):n+e,s=(o<0?s:n)+o;break}}return n=Ge(n,0),s=Je(s,r),n>s?void("vec"===e.t?Ht:qt)():void("vec"===e.t?Ht(st(e.v,n,s)):qt(vt(je(t[0]),n,s-n)))}case"reverse":return void("str"===t[0].t?qt(Se(nt(He(t[0])))):Ht(nt(He(t[0]))));case"sort":{const e=He(t[0]);if(!$t(e))return void Ht();const s=[];if(1===$t(t))rt(s,e.map((e=>[e,e])));else{const o=_t(r,t.pop(),n);for(let t=0,r=$t(e);t<r;++t){const r=o([e[t]]);if(r)return r;s.push([e[t],Pt.pop()])}}const o=s[0][1].t;return s.some((([e,{t}])=>t!==o||!et(["num","str"],t)))?u("can only sort by all number or all string"):("num"===s[0][1].t?at(s,(([e,t],[r,n])=>Ie(t)>Ie(n)?1:-1)):at(s,(([e,t],[r,n])=>je(t)>je(n)?1:-1)),void Ht(s.map((([e])=>e))))}case"range":{const[e,s,o]=t.map(Ie),a=o&&o<0&&e<s,[i,u]=$t(t)>1?a?[s-1,e-1]:[e,s]:[0,e],c=Ve((u-i)*(o||1))*(o||1),l=ze(_e((u-i)/c));if(!l)return void Ht([]);if(l>r.rangeBudget)return[{e:"Budget",m:"would exceed range budget",errCtx:n}];r.rangeBudget-=l;const p=It(l).map((e=>e*c+i));return void Ht(p.map((e=>({t:"num",v:e}))))}case"empty?":return void Nt(!$t(He(t[0])));case"keys":case"vals":return void Ht(Pe(t[0])["keys"===e?"keys":"vals"]);case"split":return void Ht(je(t[0]).split($t(t)>1?je(t[1]):" ").map((e=>({t:"str",v:e}))));case"join":return void qt(He(t[0]).map(qe).join($t(t)>1?je(t[1]):" "));case"starts-with?":case"ends-with?":return void Nt(("starts-with?"===e?ct:it)(je(t[0]),je(t[1])));case"upper-case":case"lower-case":case"trim":case"trim-start":case"trim-end":return void qt(("upper-case"===e?dt:"lower-case"===e?mt:"trim"===e?ft:"trim-start"===e?yt:xt)(je(t[0])));case"str*":{const e=je(t[0]);return void qt(It(Ge(Ie(t[1]),0)).map((t=>e)).join(""))}case"char-code":if("str"===t[0].t){const e=$t(t)>1?Ie(t[1]):0,r=je(t[0]);ut(r)<=e||e<0?Ot():St(ht(gt(r,e)))}else qt(bt(Ie(t[0])));return;case"time":return void St(At());case"version":return void St(20211127);case"tests":return void qt(function(e,t=!0){const r=[];for(let t=0;t<a(Be);++t){const{name:n,code:s,err:o,out:a}=Be[t],i={dict:new Map,output:""},u={funcs:{},vars:{}},c=q(),l=e({get:e=>ke(i,e),set:(e,t)=>we(i,e,t),exe:(e,t)=>$e(i,e,t),env:u,loopBudget:1e4,rangeBudget:1e3,callBudget:1e3,recurBudget:1e4},s,"testing",!0),p="errors"===l.kind?l.errors:[],v=(o||[]).join()===p.map((({e})=>e)).join(),d=!a||w(i.output)===a,m=q()-c,[f,y,x,h,b]=[I(`${t+1}`,3),I(n,24),I(`${m}ms`,6),d||a+"\t=/=\t"+w(i.output),v||p.map((({e,m:t,errCtx:{line:r,col:n}})=>`${e} ${r}:${n}: ${t}`))];r.push({okErr:v,okOut:d,elapsedMs:m,display:`${f} ${y} ${x} ${h} ${b}`})}const n=r.reduce(((e,{elapsedMs:t})=>e+t),0),s=a(r.filter((({okOut:e,okErr:t})=>e&&t)));return h(r.filter((e=>!t||!e.okOut||!e.okErr)).map((e=>e.display)),[`---- ${s}/${a(r)} tests passed in ${n}ms.`])}(Vt,!($t(t)&&X(t[0]))).join("\n"));case"symbols":return void Ht(function(e,t=!0){let r=t?["function","let","var","if","if!","while"]:[];rt(r,["args","PI","E"]),r=Ze(r,Bt(J)),r=Ze(r,Bt(e.env.funcs)),r=Ze(r,Bt(e.env.vars));const n=["entry"];return r=r.filter((e=>!et(n,e))),at(r,((e,t)=>e>t?1:-1))}(r,!1).map((e=>({t:"str",v:e}))));case"eval":{delete r.env.funcs.entry;const e=$t(Pt),s=`${n.sourceId} eval`,o=Lt(r,je(t[0]),s);return o?[{e:"Eval",m:"error within evaluated code",errCtx:n},...o]:void(e===$t(Pt)&&Ot())}case"recur":return void(Et=t);case"reset":return r.env.vars={},r.env.funcs={},Mt=[],void Ot()}return[{e:"Unexpected",m:"operation doesn't exist",errCtx:n}]}(u,t,e,r,n):u in e.env.funcs?t=>Rt(e,e.env.funcs[u],t):u in e.env.vars?_t(e,e.env.vars[u],r):u in Mt[$t(Mt)-1]?_t(e,Mt[$t(Mt)-1][u],r):ct(u,"$")?t=>{if(!$t(t))return i;const n=e.set(vt(u,1),t[0]);return Pt.push(t[0]),n?[{e:"External",m:n,errCtx:r}]:void 0}:t=>{const n=e.exe(u,t);if("val"!==n.kind)return[{e:"External",m:n.err,errCtx:r}];Pt.push(n.value)}}if("clo"===t.t)return r=>Rt(e,t.v,r);if("key"===t.t)return e=>{if(!$t(e))return i;if("dict"===e[0].t)Pt.push(Oe(Pe(e[0]),t));else{if("vec"!==e[0].t)return re(r,[e[0].t]);{const r=Ee(e[0]).find((e=>Ne(e,t)));Pt.push(r??{t:"null",v:void 0})}}};if("num"===t.t){const e=Ke(t.v);return t=>{if(!$t(t))return i;const n=t[0];if("str"!==n.t&&"vec"!==n.t&&"dict"!==n.t)return te(r,[n.t]);const s=He(n);_e(e)>=$t(s)?Ot():e<0?Pt.push(s[$t(s)+e]):Pt.push(s[e])}}if("vec"===t.t){const{v:e}=t;return t=>{if(!$t(t))return i;const r=e.find((e=>Ne(e,t[0])));r?Pt.push(r):Ot()}}if("dict"===t.t){const e=t.v;return t=>{if(1===$t(t))Pt.push(Oe(e,t[0]));else{if(2!==$t(t))return[{e:"Arity",m:"dictionary as operation takes one or two arguments only",errCtx:r}];Dt(Te(e,t[0],t[1]))}}}if("bool"===t.t){const e=t.v;return t=>{if(!$t(t)||$t(t)>2)return[{e:"Arity",m:"boolean as operation takes one or two arguments only",errCtx:r}];Pt.push(e?t[0]:$t(t)>1?t[1]:{t:"null",v:void 0})}}return e=>[{e:"Operation",m:`${qe(t)} is an invalid operation`,errCtx:r}]}function Ft(e){const t=(e,t,r)=>Te(e,{t:"key",v:t},r);return e.map((({e,m:r,errCtx:n})=>{let s=t({keys:[],vals:[]},":e",{t:"str",v:e});return s=t(s,":m",{t:"str",v:r}),s=t(s,":line",{t:"num",v:n.line}),s=t(s,":col",{t:"num",v:n.col}),{t:"dict",v:s}}))}function Rt(e,t,r,n=!1){--e.callBudget,n||Mt.push({});const s=$t(Pt);for(let n=0,o=$t(t.ins);n<o;++n){const a=t.ins[n],{errCtx:i}=t.ins[n],u=e.loopBudget<1;if(u||e.callBudget<1)return[{e:"Budget",m:(u?"looped":"called")+" too many times",errCtx:i}];switch(a.typ){case"val":Pt.push(a.value);break;case"var":e.env.vars[a.value]=Pt[$t(Pt)-1];break;case"let":Mt[$t(Mt)-1][a.value]=Pt[$t(Pt)-1];break;case"npa":case"upa":{const e=a.value;-1===e?Ht(r):$t(r)<=e?Ot():Pt.push(r[e])}break;case"ref":{const t=a.value;if(J[t])Tt(t);else if(ct(t,"$")){const r=e.get(vt(t,1));if("err"===r.kind)return[{e:"External",m:r.err,errCtx:i}];Pt.push(r.value)}else if(t in e.env.vars)Pt.push(e.env.vars[t]);else if(t in Mt[$t(Mt)-1])Pt.push(Mt[$t(Mt)-1][t]);else{if(!(t in e.env.funcs))return[{e:"Reference",m:`"${t}" did not exist`,errCtx:i}];Tt(t)}}break;case"exe":{const s=_t(e,Pt.pop(),i,!1),o=a.value,u=s(ot(Pt,$t(Pt)-o,o));if(u){const e=st(t.ins,n).findIndex((e=>"cat"===e.typ));if(-1!==e){n+=e,Mt[$t(Mt)-1].errors={t:"vec",v:Ft(u)};break}return u}if(Et){if(Mt[$t(Mt)-1]={},n=-1,a.value,r=Et,Et=void 0,--e.recurBudget,!e.recurBudget)return[{e:"Budget",m:"recurred too many times",errCtx:i}];break}}break;case"or":X(Pt[$t(Pt)-1])?n+=a.value:Pt.pop();break;case"mat":{const e=Pt[$t(Pt)-2];Ne(e,Pt.pop())?Pt.pop():n+=a.value;break}case"if":X(Pt.pop())||(n+=a.value);break;case"jmp":case"cat":n+=a.value;break;case"loo":n+=a.value,--e.loopBudget;break;case"pop":ot(Pt,$t(Pt)-a.value,a.value);break;case"ret":a.value?ot(Pt,s,$t(Pt)-s-1):Ot(),n=o;break;case"clo":case"par":{const t=a.value[0];let n=a.value[1];const s=({typ:e,value:t},r)=>"ref"===e&&!n.find((e=>"let"===e.typ&&e.value===t))||"npa"===e||"val"===e&&r+1!==$t(n)&&"exe"===n[r+1].typ,o={name:"",ins:n.map(((e,t)=>{if(t+1===$t(n))return e;const r="val"===e.typ&&"str"===e.value.t&&"exe"===n[t+1].typ&&Mt[$t(Mt)-1][e.value.v];return r?{typ:"val",value:r}:e})).filter(s)},u=Rt(e,o,r,!0);if(u)return u;const c=$t(o.ins),l=ot(Pt,$t(Pt)-c,c);if(n=n.map(((e,t)=>s(e,t)?{typ:"val",value:l.shift(),errCtx:i}:e)),"par"===a.typ){const{value:e,errCtx:t}=n.pop();if($t(n)>0&&"exe"===n[$t(n)-1].typ){const e=n.findIndex((e=>"exp"===e.typ)),t=ot(n,e,$t(n)-e);rt(t,n),n=t}else n.unshift(n.pop());n.push({typ:"upa",value:-1,errCtx:t}),n.push({typ:"val",value:{t:"str",v:"..."},errCtx:t}),n.push({typ:"exe",value:e+2,errCtx:t})}Pt.push({t:"clo",v:{name:t,ins:n}})}}}n||(Mt.pop(),ot(Pt,s,$t(Pt)-(s+1)))}function Lt(e,t,r){const n=Ce(t,r);return $t(n.errors)?n.errors:(e.env.funcs={...e.env.funcs,...n.funcs},"entry"in e.env.funcs?Rt(e,e.env.funcs.entry,[]):void 0)}function Vt(e,t,r,n=!1){const{callBudget:s,loopBudget:o,recurBudget:a,rangeBudget:i}=e,u=Lt(e,t,r);[e.callBudget,e.recurBudget]=[s,a],[e.loopBudget,e.rangeBudget]=[o,i],delete e.env.funcs.entry;const c=Pt.pop();return[Pt,Mt]=[[],[]],n&&!u&&c&&e.exe("print",[{t:"str",v:qe(c)}]),u?{kind:"errors",errors:u}:c?{kind:"val",value:c}:{kind:"empty"}}const Wt=new Map,Kt=/[\[\]\(\) ,]/;function zt(e,t){const r=q().toString();Wt.set(r,t);const n=Vt(e,t,r,!0);if("errors"!==n.kind)return[];let s=[];return n.errors.forEach((({e,m:t,errCtx:{line:r,col:n,sourceId:o}})=>{const a=Wt.get(o);if(!a)return void s.push({type:"message",text:`${e} Error: line ${r} col ${n}: ${t}\n`});const u=a.split("\n")[r-1],c=l(u,n-1).split(Kt)[0],p=$(l(u,0,n-1));if(s.push({type:"message",text:I(`${r}`,4)+p}),c){const e=l(u,n-1+i(c));s.push({type:"error",text:c}),s.push({type:"message",text:`${e}\n`})}else{const e=l(u,n);s.push({type:"error",text:u[n-1]}),s.push({type:"message",text:`${e}\n`})}s.push({type:"message",text:`${e} Error: ${t}.\n`})})),s}window.insitux=t.invoker})();
//# sourceMappingURL=insitux.js.map