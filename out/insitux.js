(()=>{"use strict";var e={607:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.symbols=t.invoke=t.exeFunc=t.visKey=t.visFun=t.visDic=t.visVec=t.visNum=t.visStr=t.insituxVersion=void 0,t.insituxVersion=20210910;const r=n(306),s=n(17),a=n(127),o=n(699),i=({v:e,t})=>{switch(t){case"bool":case"num":return`${e}`;case"str":case"key":return e;case"vec":return`[${e.map((e=>i(e))).join(" ")}]`;case"dict":{const{keys:t,vals:n}=e,[r,s]=[t.map(i),n.map(i)];return`{${r.map(((e,t)=>`${e} ${s[t]}`)).join(", ")}}`}case"null":return"null";case"func":return`<${e}>`}return"?"};let c=[];const u=e=>c.push({t:"bool",v:e}),l=e=>c.push({t:"num",v:e}),m=(e="")=>c.push({t:"str",v:e}),p=(e=[])=>c.push({t:"vec",v:e}),d=e=>c.push({t:"dict",v:e}),f=()=>c.push({t:"null",v:void 0}),y=e=>c.push({t:"func",v:e}),v=({v:e})=>e,x=({v:e})=>e,h=({v:e})=>e,b=({v:e})=>e,g=({t:e,v:t})=>"bool"===e?t:"null"!==e;t.visStr=e=>"str"===e.t,t.visNum=e=>"num"===e.t,t.visVec=e=>"vec"===e.t,t.visDic=e=>"dict"===e.t,t.visFun=e=>"func"===e.t,t.visKey=e=>"key"===e.t;const A=({t:e,v:t})=>"vec"===e?(0,s.slice)(t):"str"===e?[...t].map((e=>({t:"str",v:e}))):"dict"===e?t.keys.map(((e,n)=>({t:"vec",v:[e,t.vals[n]]}))):[],k=e=>e.reduce(((e,t)=>e+i(t)),""),C=e=>{(0,s.len)(e)%2==1&&e.pop();const t=e.filter(((e,t)=>t%2==0)),n=e.filter(((e,t)=>t%2==1)),r=[],a=[];return t.forEach(((e,t)=>{const s=r.findIndex((t=>$(t,e)));-1===s?(r.push(e),a.push(n[t])):a[s]=n[t]})),{t:"dict",v:{keys:r,vals:a}}},N=(e,t)=>({e:"Type",m:e,errCtx:t}),w=(e,t)=>(0,s.len)(e)===(0,s.len)(t)&&!e.some(((e,n)=>!$(e,t[n]))),$=(e,t)=>e.t===t.t&&"num"===e.t?v(e)===v(t):"str"===e.t||"key"===e.t?x(e)===x(t):"vec"===e.t?w(h(e),h(t)):"dict"===e.t&&((e,t)=>{const[n,r]=[b(e),b(t)];return(0,s.len)(n.keys)===(0,s.len)(r.keys)&&w(n.keys,r.keys)})(e,t),B=({keys:e,vals:t},n)=>{const r=e.findIndex((e=>$(e,n)));return-1===r?{t:"null",v:void 0}:t[r]};async function M(e,n,r,y){const w=e=>[N(e,y)];{const t=function(e,t,n){const{types:r,exactArity:a,maxArity:i,minArity:c,onlyNum:u}=o.ops[e],l=(t,r)=>[{e:"Arity",m:`${e} needs ${t} argument${1!==r?"s":""}`,errCtx:n}],m=(0,s.len)(t);if(void 0!==a){if(m!==a)return l(`exactly ${a}`,a)}else{if(c&&!i&&m<c)return l(`at least ${c}`,c);if(!c&&i&&m>i)return l(`at most ${i}`,i);if(c&&i&&(m<c||m>i))return l(`between ${c} and ${i}`,i)}return u?-1!==t.findIndex((e=>"num"!==e.t))?[N("numeric arguments only",n)]:[]:r?r.map(((e,n)=>n<m&&((0,s.isArray)(e)?!(0,s.has)(e,t[n].t)&&`argument ${n+1} must be either: ${e.map((e=>o.typeNames[e])).join(", ")}`:e!==t[n].t&&`argument ${n+1} must be ${o.typeNames[e]}`))).filter((e=>!!e)).map((e=>N(e,n))):[]}(e,n,y);if((0,s.len)(t))return t}switch(e){case"execute-last":return await I(r,n.pop(),y)(n);case"str":return c.push({t:"str",v:k(n)}),[];case"print":case"print-str":return r.exe(e,[{t:"str",v:k(n)}]),f(),[];case"vec":return p(n),[];case"dict":return c.push(C(n)),[];case"len":return l("str"===n[0].t?(0,s.slen)(x(n[0])):"vec"===n[0].t?(0,s.len)(h(n[0])):(0,s.len)(b(n[0]).keys)),[];case"num":return(0,s.isNum)(n[0].v)?(l((0,s.toNum)(n[0].v)),[]):[{e:"Convert",m:`"${n[0].v}" could not be parsed as a number`,errCtx:y}];case"!":return u(!g(n[0])),[];case"=":case"!=":for(let t=1,r=(0,s.len)(n);t<r;++t)if($(n[t-1],n[t])!==("="===e))return u(!1),[];return u(!0),[];case"-":return l(1===(0,s.len)(n)?-v(n[0]):n.map(v).reduce(((e,t)=>e-t))),[];case"**":return l(v(n[0])**(1===(0,s.len)(n)?2:v(n[1]))),[];case"+":return l(n.map(v).reduce(((e,t)=>e+t))),[];case"*":return l(n.map(v).reduce(((e,t)=>e*t))),[];case"/":return l(n.map(v).reduce(((e,t)=>e/t))),[];case"//":return l(n.map(v).reduce(((e,t)=>(0,s.floor)(e/t)))),[];case"rem":return l(n.map(v).reduce(((e,t)=>e%t))),[];case"min":return l(n.map(v).reduce(((e,t)=>(0,s.min)(e,t)))),[];case"max":return l(n.map(v).reduce(((e,t)=>(0,s.max)(e,t)))),[];case"<":case">":case"<=":case">=":for(let t=1,r=(0,s.len)(n);t<r;++t){const[r,s]=[n[t-1].v,n[t].v];if("<"===e&&r>=s||">"===e&&r<=s||"<="===e&&r>s||">="===e&&r<s)return u(!1),[]}return u(!0),[];case"inc":return l(n[0].v+1),[];case"dec":return l(n[0].v-1),[];case"abs":return l((0,s.abs)(v(n[0]))),[];case"pi":return l(s.pi),[];case"sin":case"cos":case"tan":case"sqrt":case"round":case"floor":case"ceil":return l({sin:s.sin,cos:s.cos,tan:s.tan,sqrt:s.sqrt,round:s.round,floor:s.floor,ceil:s.ceil}[e](v(n[0]))),[];case"odd?":case"even?":return u(v(n[0])%2==("odd?"===e?1:0)),[];case"pos?":case"neg?":case"zero?":{const t=v(n[0]);return u("pos?"===e?t>0:"neg?"===e?t<0:!t),[]}case"null?":case"num?":case"bool?":case"str?":case"dict?":case"vec?":case"key?":case"func?":return u("null?"===e&&"null"===n[0].t||"num?"===e&&"num"===n[0].t||"bool?"===e&&"bool"===n[0].t||"str?"===e&&"str"===n[0].t||"dict?"===e&&"dict"===n[0].t||"vec?"===e&&"vec"===n[0].t||"key?"===e&&"key"===n[0].t||"func?"===e&&"func"===n[0].t),[];case"has?":return u((0,s.sub)(x(n[0]),x(n[1]))),[];case"idx":{let e=-1;if("str"===n[0].t){if("str"!==n[1].t)return w("strings can only contain strings");e=(0,s.subIdx)(x(n[0]),x(n[1]))}else"vec"===n[0].t&&(e=h(n[0]).findIndex((e=>$(e,n[1]))));return-1===e?f():l(e),[]}case"map":case"for":case"reduce":case"filter":{const t=I(r,n.shift(),y),a=e=>"vec"===e||"str"===e||"dict"===e;if(-1!==("map"===e||"for"===e?n.findIndex((({t:e})=>!a(e))):a(n[0].t)?-1:0))return w("argument 2 must be either: string, vector, dictionary");if("for"===e){const e=n.map(A),a=e.map(s.len),o=a.map(((e,t)=>(0,s.slice)(a,0,t+1).reduce(((e,t)=>e*t))));o.unshift(1);const i=o.pop();if(i>r.loopBudget)return[{e:"Budget",m:"would exceed loop budget",errCtx:y}];const u=[];for(let n=0;n<i;++n){const r=o.map(((e,t)=>(0,s.floor)(n/e%a[t]))),i=await t(e.map(((e,t)=>e[r[t]])));if((0,s.len)(i))return i;u.push(c.pop())}return p(u),[]}if("map"===e){const e=n.map(A),r=(0,s.min)(...e.map((e=>(0,s.len)(e)))),a=[];for(let n=0;n<r;++n){const r=await t(e.map((e=>e[n])));if((0,s.len)(r))return r;a.push(c.pop())}return p(a),[]}const o=A(n.shift());if("filter"===e){const e=[];for(let n=0,r=(0,s.len)(o);n<r;++n){const r=await t([o[n]]);if((0,s.len)(r))return r;g(c.pop())&&e.push(o[n])}return p(e),[]}if((0,s.len)(o)<2)return(0,s.push)(c,o),[];let i=((0,s.len)(n)?n:o).shift();for(let e=0,n=(0,s.len)(o);e<n;++e){const n=await t([i,o[e]]);if((0,s.len)(n))return n;i=c.pop()}c.push(i)}return[];case"rand-int":case"rand-num":{const t=(0,s.len)(n),[r,a]=[t<2?0:v(n[0]),0===t?1+(0,s.toNum)("rand-int"===e):v(1===t?n[0]:n[1])];l("rand-int"===e?(0,s.randInt)(r,a):(0,s.randNum)(r,a))}return[];case"do":case"val":return c.push("do"===e?n.pop():n.shift()),[];case"..":{const e=I(r,n.shift(),y);return await e((0,s.flat)(n.map((e=>"vec"===e.t?h(e):[e]))))}case"into":{const e="vec"===n[0].t,t="vec"===n[1].t;if(e)p((0,s.concat)(h(n[0]),t?h(n[1]):A(n[1])));else if(t){const e=A(n[1]);c.push(C((0,s.concat)((0,s.flat)(A(n[0]).map(h)),e)))}else{const{keys:e,vals:t}=b(n[0]),r=b(n[1]);d({keys:(0,s.concat)(e,r.keys),vals:(0,s.concat)(t,r.vals)})}return[]}case"push":if("vec"===n[0].t)p((0,s.concat)(A(n[0]),[n[1]]));else{if((0,s.len)(n)<3)return[{e:"Arity",m:"key and value both required",errCtx:y}];const{keys:e,vals:t}=b(n[0]);d({keys:(0,s.concat)(e,[n[1]]),vals:(0,s.concat)(t,[n[2]])})}return[];case"sect":{const e=n[0],t="vec"===e.t,r=t?(0,s.len)(h(e)):(0,s.slen)(x(e));let a=0,o=r;switch((0,s.len)(n)){case 1:a=1;break;case 2:{const e=v(n[1]);e<0?o+=e:a+=e;break}case 3:{const e=v(n[1]),t=v(n[2]);a=e<0?r+e+(t<0?t:0):a+e,o=(t<0?o:a)+t;break}}return a=(0,s.max)(a,0),o=(0,s.min)(o,r),a>o?((t?p:m)(),[]):(t?p((0,s.slice)(h(e),a,o)):m((0,s.substr)(x(n[0]),a,o-a)),[])}case"reverse":return"str"===n[0].t?m(k((0,s.reverse)(A(n[0])))):p((0,s.reverse)(A(n[0]))),[];case"sort":{if(!(0,s.len)(h(n[0])))return p(),[];const e=A(n[0]),a=[];if(1===(0,s.len)(n))(0,s.push)(a,e.map((e=>[e,e])));else{const t=I(r,n.pop(),y);for(let n=0,r=(0,s.len)(e);n<r;++n){const r=await t([e[n]]);if((0,s.len)(r))return r;a.push([e[n],c.pop()])}}const o=a[0][1].t;return a.some((([e,{t}])=>t!==o||!(0,s.has)(["num","str"],t)))?w("can only sort by all number or all string"):((0,t.visNum)(a[0][1])?(0,s.sortBy)(a,(([e,t],[n,r])=>v(t)>v(r)?1:-1)):(0,s.sortBy)(a,(([e,t],[n,r])=>x(t)>x(r)?1:-1)),p(a.map((([e])=>e))),[])}case"range":{const[e,t,a]=n.map(v),o=a&&a<0&&e<t,[i,c]=(0,s.len)(n)>1?o?[t-1,e-1]:[e,t]:[0,e],u=(0,s.sign)((c-i)*(a||1))*(a||1),l=(0,s.ceil)((0,s.abs)((c-i)/u));if(l>r.rangeBudget)return[{e:"Budget",m:"range too large",errCtx:y}];const m=(0,s.range)(l).map((e=>e*u+i));return p(m.map((e=>({t:"num",v:e})))),[]}case"empty?":return u(!(0,s.len)(A(n[0]))),[];case"keys":case"vals":return p(b(n[0])["keys"===e?"keys":"vals"]),[];case"starts-with?":return u((0,s.starts)(x(n[0]),x(n[1]))),[];case"ends-with?":return u((0,s.ends)(x(n[0]),x(n[1]))),[];case"split":return p(x(n[0]).split((0,s.len)(n)>1?x(n[1]):" ").map((e=>({t:"str",v:e})))),[];case"join":return m(h(n[0]).map(i).join((0,s.len)(n)>1?x(n[1]):" ")),[];case"time":return l((0,s.getTimeMs)()),[];case"version":return l(t.insituxVersion),[];case"tests":{const e=await(0,a.doTests)(j,!((0,s.len)(n)&&g(n[0]))),t=e.pop();for(const t of e)await M("print",[{v:t,t:"str"}],r,y);m(t)}return[];case"eval":{delete r.env.funcs.entry;const e=(0,s.len)(c),t=await P(r,x(n[0]),y.invocationId);return(0,s.len)(t)?[{e:"Eval",m:"error within evaluated code",errCtx:y}]:(e===(0,s.len)(c)&&f(),[])}}return[{e:"Unexpected",m:"operation doesn't exist",errCtx:y}]}function I(e,n,r){const a=[{e:"Arity",m:"one argument required",errCtx:r}];if((0,t.visStr)(n)||(0,t.visFun)(n)){const t=n.v;return o.ops[t]?n=>M(t,n,e,r):t in e.env.funcs?n=>E(e,e.env.funcs[t],n):t in e.env.vars?I(e,e.env.vars[t],r):t in e.env.lets[(0,s.len)(e.env.lets)-1]?I(e,e.env.lets[(0,s.len)(e.env.lets)-1][t],r):(0,s.starts)(t,"$")?async n=>{if(!(0,s.len)(n))return a;const o=await e.set((0,s.substr)(t,1),n[0]);return c.push(n[0]),o?[{e:"External",m:o,errCtx:r}]:[]}:async n=>{const{err:s,value:a}=await e.exe(t,n);return s||c.push(a),s?[{e:"External",m:s,errCtx:r}]:[]}}if((0,t.visKey)(n))return async e=>(0,s.len)(e)?"dict"!==e[0].t?[N("argument 1 must be dictionary",r)]:(c.push(B(b(e[0]),n)),[]):a;if((0,t.visNum)(n)){const e=n.v;return async t=>{if(!(0,s.len)(t))return a;const n=t[0];if("str"!==n.t&&"vec"!==n.t&&"dict"!==n.t)return[N("argument must be string, vector, or dictionary",r)];const o=A(n);return(0,s.abs)(e)>=(0,s.len)(o)?f():e<0?c.push(o[(0,s.len)(o)+e]):c.push(o[e]),[]}}if((0,t.visVec)(n)){const{v:e}=n;return async t=>{if(!(0,s.len)(t))return a;const n=e.find((e=>$(e,t[0])));return n?c.push(n):f(),[]}}if((0,t.visDic)(n)){const e=n.v;return async t=>{if(1===(0,s.len)(t))c.push(B(e,t[0]));else{if(2!==(0,s.len)(t))return[{e:"Arity",m:"dict as operation takes one or two arguments",errCtx:r}];c.push((({keys:e,vals:t},n,r)=>{const[a,o]=[(0,s.slice)(e),(0,s.slice)(t)],i=e.findIndex((e=>$(e,n)));return-1!==i?o[i]=r:(a.push(n),o.push(r)),{t:"dict",v:{keys:a,vals:o}}})(e,t[0],t[1]))}return[]}}return async e=>[{e:"Operation",m:`${i(n)} is an invalid operation`,errCtx:r}]}async function E(e,n,r){--e.callBudget,e.env.lets.push({});for(let i=0,d=(0,s.len)(n.ins);i<d;++i){const{typ:v,value:x,errCtx:h}=n.ins[i],b=e.loopBudget<1;if(b||e.callBudget<1)return[{e:"Budget",m:(b?"looped":"called")+" too many times",errCtx:h}];switch(v){case"nul":f();break;case"boo":u(x);break;case"num":l(x);break;case"str":m(x);break;case"key":a=x,c.push({t:"key",v:a});break;case"var":e.env.vars[x]=c[(0,s.len)(c)-1];break;case"let":e.env.lets[(0,s.len)(e.env.lets)-1][x]=c[(0,s.len)(c)-1];break;case"par":{const e=x;-1===e?p(r):(0,s.len)(r)<=e?f():c.push(r[e])}break;case"ref":{const t=x;if(o.ops[t])y(t);else if((0,s.starts)(t,"$")){const{value:n,err:r}=await e.get((0,s.substr)(t,1));if(r)return[{e:"External",m:r,errCtx:h}];c.push(n)}else if(t in e.env.vars)c.push(e.env.vars[t]);else if(t in e.env.lets[(0,s.len)(e.env.lets)-1])c.push(e.env.lets[(0,s.len)(e.env.lets)-1][t]);else{if(!(t in e.env.funcs))return[{e:"Reference",m:`"${t}" did not exist`,errCtx:h}];y(t)}}break;case"op":case"exe":{let[a,o]=x;const u=(0,s.splice)(c,(0,s.len)(c)-o,o);if((0,s.len)(u)!==o)return[{e:"Unexpected",m:`${a} stack depleted`,errCtx:h}];if(i===d-1&&(0,t.visStr)(a)&&a.v===n.name){if(e.env.lets[(0,s.len)(e.env.lets)-1]={},i=-1,r=u,--e.recurBudget,!e.recurBudget)return[{e:"Budget",m:"recurred too many times",errCtx:h}];continue}const l=I(e,a,h),m=await l(u);if((0,s.len)(m))return m}break;case"or":g(c[(0,s.len)(c)-1])?i+=x:c.pop();break;case"if":g(c.pop())||(i+=x);break;case"jmp":i+=x;break;case"loo":i+=x,--e.loopBudget;break;case"pop":(0,s.splice)(c,(0,s.len)(c)-x,x)}}var a;return e.env.lets.pop(),[]}async function P(e,t,n){const a=(0,r.parse)(t,n);return(0,s.len)(a.errors)?a.errors:(e.env.funcs={...e.env.funcs,...a.funcs},"entry"in e.env.funcs?await E(e,e.env.funcs.entry,[]):[])}async function j(e,t,n,r=!1){const{callBudget:a,loopBudget:o,rangeBudget:u}=e,l=await P(e,t,n);return e.env.lets=[],e.callBudget=a,e.loopBudget=o,e.rangeBudget=u,delete e.env.funcs.entry,!(0,s.len)(l)&&r&&(0,s.len)(c)&&await e.exe("print",[{t:"str",v:i(c[(0,s.len)(c)-1])}]),c=[],l}t.exeFunc=E,t.invoke=j,t.symbols=function(e){let t=["function"];return t=(0,s.concat)(t,(0,s.objKeys)(o.ops).filter((e=>"execute-last"!==e))),t=(0,s.concat)(t,(0,s.objKeys)(e.env.funcs)),t=(0,s.concat)(t,(0,s.objKeys)(e.env.vars)),t}},669:(e,t,n)=>{t.invoker=t.Z=void 0;const r=n(607),s=n(17),a=new Map;t.Z=/[\[\]\(\) ]/,t.invoker=async function(e,n){const o=(0,s.getTimeMs)().toString();a.set(o,n);const i=await(0,r.invoke)(e,n,o,!0);let c=[];return i.forEach((({e,m:n,errCtx:{line:r,col:o,invocationId:i}})=>{const u=a.get(i).split("\n")[r-1],l=(0,s.substr)(u,o-1).split(t.Z)[0],m=(0,s.trimStart)((0,s.substr)(u,0,o-1));if(c.push({type:"message",text:(0,s.padEnd)(`${r}`,4)+m}),l){const e=(0,s.substr)(u,o-1+l.length);c.push({type:"error",text:l}),c.push({type:"message",text:`${e}\n`})}else{const e=(0,s.substr)(u,o);c.push({type:"error",text:u[o-1]}),c.push({type:"message",text:`${e}\n`})}c.push({type:"message",text:`${e} Error: ${n}.\n`})})),c}},306:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parse=void 0;const r=n(17),s=n(699);function a(e,t){if(!(0,r.len)(e))return[];const{typ:n,text:o,errCtx:i}=e.shift();switch(n){case"str":return[{typ:"str",value:o,errCtx:i}];case"num":return[{typ:"num",value:(0,r.toNum)(o),errCtx:i}];case"sym":return"true"===o||"false"===o?[{typ:"boo",value:"true"===o,errCtx:i}]:"null"===o?[{typ:"nul",value:void 0,errCtx:i}]:(0,r.starts)(o,":")?[{typ:"key",value:o,errCtx:i}]:(0,r.starts)(o,"#")&&(0,r.isNum)((0,r.substr)(o,1))?[{typ:"par",value:(0,r.toNum)((0,r.substr)(o,1)),errCtx:i}]:(0,r.has)(t,o)?[{typ:"par",value:t.indexOf(o),errCtx:i}]:"args"===o?[{typ:"par",value:-1,errCtx:i}]:[{typ:"ref",value:o,errCtx:i}];case"ref":return[{typ:"def",value:o,errCtx:i}];case"(":{const n=e.shift();if(!n)break;const{typ:o,text:i,errCtx:c}=n;let u=i;const l=e=>[{typ:"err",value:e,errCtx:c}];if("var"===u||"let"===u){const[n,s]=[a(e,t),a(e,t)];return(0,r.len)(n)&&(0,r.len)(s)&&!(0,r.len)(a(e,t))?[...s,{typ:u,value:n[0].value,errCtx:c}]:l("must provide reference name and value only")}if("if"===u||"when"===u){const n=a(e,t);if(!(0,r.len)(n))return l("must provide condition");const s=n;if("if"===u){const n=a(e,t);if(!(0,r.len)(n))return l("must provide a branch");s.push({typ:"if",value:(0,r.len)(n)+1,errCtx:c}),(0,r.push)(s,n);const o=a(e,t);if((0,r.len)(o)){if(s.push({typ:"jmp",value:(0,r.len)(o),errCtx:c}),(0,r.push)(s,o),(0,r.len)(a(e,t)))return l("too many branches")}else s.push({typ:"jmp",value:1,errCtx:c}),s.push({typ:"nul",value:void 0,errCtx:c})}else{const n=[];for(;;){const s=a(e,t);if(!(0,r.len)(s))break;(0,r.push)(n,s)}s.push({typ:"if",value:(0,r.len)(n)+1,errCtx:c}),(0,r.push)(s,n),s.push({typ:"jmp",value:1,errCtx:c}),s.push({typ:"nul",value:void 0,errCtx:c})}return s}if("and"===u||"or"===u||"while"===u){const n=[];let s=0;for(;;){const o=a(e,t);if(!(0,r.len)(o))break;n.push(o),s+=(0,r.len)(o)}if((0,r.len)(n)<2)return l("requires at least two arguments");const o=[];if("while"===u){s+=2;const e=n.shift();return(0,r.push)(o,e),o.push({typ:"if",value:s-(0,r.len)(e),errCtx:c}),n.forEach((e=>(0,r.push)(o,e))),o.push({typ:"pop",value:(0,r.len)(n),errCtx:c}),o.push({typ:"loo",value:-(s+1),errCtx:c}),o}s+=(0,r.len)(n),s+=(0,r.toNum)("and"===u);const i="and"===u?"if":"or";for(let e=0;e<(0,r.len)(n);++e)(0,r.push)(o,n[e]),s-=(0,r.len)(n[e]),o.push({typ:i,value:s,errCtx:c}),--s;return"and"===u?(0,r.push)(o,[{typ:"boo",value:!0,errCtx:c},{typ:"jmp",value:1,errCtx:c},{typ:"boo",value:!1,errCtx:c}]):o.push({typ:"boo",value:!1,errCtx:c}),o}const m=[];let p=0;if("("===o||(0,r.has)(t,i)||(0,r.starts)(i,"#")){e.unshift(n);const s=a(e,t);(0,r.push)(m,s),u="execute-last",++p}const d=[];for(;(0,r.len)(e);){const n=a(e,t);if(!(0,r.len)(n))break;++p,(0,r.push)(d,n)}return m.push({typ:s.ops[u]?"op":"exe",value:["num"===o?{t:"num",v:(0,r.toNum)(u)}:(0,r.starts)(u,":")?{t:"key",v:u}:s.ops[u]?{t:"func",v:u}:{t:"str",v:u},p],errCtx:c}),[...d,...m]}}return[]}t.parse=function(e,t){const{tokens:n,stringError:s}=function(e,t){const n=[];let s=!1,a=!1,o=[0,0],i=!1,c=!1,u=!1,l=1,m=0;for(let p=0,d=(0,r.slen)(e);p<d;++p){const f=(0,r.strIdx)(e,p),y=p+1!==d?(0,r.strIdx)(e,p+1):"";if(++m,u){"\n"===f&&(u=!1,++l,m=0);continue}if(a){a=!1,s&&(n[(0,r.len)(n)-1].text+={n:"\n",t:"\t"}[f]||`\\${f}`);continue}if("\\"===f){a=!0;continue}if('"'===f){(s=!s)&&(o=[l,m],n.push({typ:"str",text:"",errCtx:{invocationId:t,line:l,col:m}})),c=i=!1;continue}const v=(0,r.sub)(" \t\n\r",f);if(!s&&v){c=i=!1,"\n"===f&&(++l,m=0);continue}if(!s&&";"===f){u=!0;continue}const x={invocationId:t,line:l,col:m},h=e=>(0,r.sub)("0123456789",e),b=(0,r.sub)("()[]{}",f);if(c&&!h(f)&&(c="."===f&&!(0,r.sub)(n[(0,r.len)(n)-1].text,"."),c||b||v||(i=!0,n[(0,r.len)(n)-1].typ="sym")),i&&b&&(i=!1),!s&&!i&&!c){if(b){const e={"[":"(","{":"(","(":"(",")":")","}":")","]":")"}[f];n.push({typ:e,text:e,errCtx:x}),"["===f?n.push({typ:"sym",text:"vec",errCtx:x}):"{"===f&&n.push({typ:"sym",text:"dict",errCtx:x});continue}c=h(f)||"."===f&&h(y)||"-"===f&&(h(y)||"."===y),i=!c;let e=i?"sym":"num";if((0,r.len)(n)){const{typ:t,text:s}=n[(0,r.len)(n)-1];"sym"!==t||"var"!==s&&"let"!==s||(e="ref")}n.push({typ:e,text:"",errCtx:x})}n[(0,r.len)(n)-1].text+=f}return{tokens:n,stringError:s?o:void 0}}(e,t),o=function(e,t,n){const s=[],a=(e,t)=>s.push({e:"Parse",m:e,errCtx:t}),o=e=>(0,r.len)(t.filter((({typ:t})=>t===e))),[i,c]=[o("("),o(")")];{const[e,s]=function(e,t,n){const s=n>=t,[a,o]=[s?"(":")",s?")":"("],i=s?1:-1;for(let t=(0,r.len)(e),n=s?0:t-1,c=0;s?n<t:n>=0;n+=i){const{typ:t,errCtx:{line:s,col:i}}=e[n];if(c+=(0,r.toNum)(t===a)-(0,r.toNum)(t===o),c<0)return[s,i]}return[0,0]}(t,i,c);e+s&&a("unmatched parenthesis",{invocationId:n,line:e,col:s})}if(e){const[t,r]=e;a("unmatched double quotation marks",{invocationId:n,line:t,col:r})}let u;for(let e=0,n=!1;e<(0,r.len)(t);++e){if(n&&")"===t[e].typ){u=t[e];break}n="("===t[e].typ}return u&&a("empty expression forbidden",u.errCtx),s}(s,n,t);if((0,r.len)(o))return{errors:o,funcs:{}};const i=function(e){const t=e=>(0,r.len)(e)>1&&"sym"===e[1].typ&&"function"===e[1].text,n=e.filter((e=>t(e))),s=(0,r.flat)(e.filter((e=>!t(e)))),a=n.map((e=>({name:e[2].text,tokens:(0,r.slice)(e,3),errCtx:e[2].errCtx})));return(0,r.len)(s)?(0,r.concat)(a,[{name:"entry",tokens:s,errCtx:s[0].errCtx}]):a}(function(e){const t=[[]];let n=0;return e.forEach((e=>{t[(0,r.len)(t)-1].push(e),n+=(0,r.toNum)("("===e.text)-(0,r.toNum)(")"===e.text),0===n&&t.push([])})),t}(n)).map((e=>function({name:e,tokens:t},n){const[s,o]=function(e,t){const n=[],s=[];for(let t=0,a=!1;t<(0,r.len)(e);++t)a||(a="sym"!==e[t].typ),(a?s:n).push(e[t]);return[n,s]}(t);if(!(0,r.len)(s)&&!(0,r.len)(o))return{err:{e:"Parse",m:"empty function body",errCtx:n}};if((0,r.len)(o)&&")"===o[0].typ){if(!(0,r.len)(s))return{err:{e:"Parse",m:"empty function body",errCtx:n}};o.unshift(s.shift())}(0,r.len)(s)&&!(0,r.len)(o)&&o.push(s.pop());const i=[];for(;(0,r.len)(o);)(0,r.push)(i,a(o,s.map((e=>e.text))));const c=i.filter((e=>"err"===e.typ));return(0,r.len)(c)?{err:{e:"Parse",m:c[0].value,errCtx:c[0].errCtx}}:{func:{name:e,ins:i}}}(e,{invocationId:t,line:e.errCtx.line,col:e.errCtx.col}))),[c,u]=function(e,t){const n=[],r=[];return e.forEach((e=>{return(t=e,t.err?r:n).push(e);var t})),[n,r]}(i);(0,r.push)(o,u.map((e=>e.err)));const l={};return c.forEach((({func:e})=>l[e.name]=e)),{errors:o,funcs:l}}},17:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.pi=t.sign=t.ceil=t.floor=t.round=t.sqrt=t.tan=t.cos=t.sin=t.max=t.min=t.abs=t.getTimeMs=t.objKeys=t.range=t.randInt=t.randNum=t.padEnd=t.trimStart=t.trim=t.reverse=t.sortBy=t.push=t.concat=t.flat=t.ends=t.starts=t.has=t.subIdx=t.sub=t.strIdx=t.substr=t.isArray=t.isNum=t.slen=t.len=t.splice=t.slice=t.toNum=void 0,t.toNum=e=>Number(e),t.slice=(e,t,n)=>e.slice(t,n),t.splice=(e,t,n)=>e.splice(t,n),t.len=e=>e.length,t.slen=e=>e.length,t.isNum=e=>!Number.isNaN(Number(e)),t.isArray=e=>Array.isArray(e),t.substr=(e,t,n)=>e.substring(t,n?t+n:e.length),t.strIdx=(e,t)=>e[t],t.sub=(e,t)=>e.includes(t),t.subIdx=(e,t)=>e.indexOf(t),t.has=(e,t)=>e.includes(t),t.starts=(e,t)=>e.startsWith(t),t.ends=(e,t)=>e.endsWith(t),t.flat=e=>e.flat(),t.concat=(e,t)=>e.concat(t),t.push=(e,t)=>e.push(...t),t.sortBy=(e,t)=>e.sort(t),t.reverse=e=>e.reverse(),t.trim=e=>e.trim(),t.trimStart=e=>e.trimStart(),t.padEnd=(e,t)=>e.padEnd(t),t.randNum=(e,t)=>e+Math.random()*(t-e),t.randInt=(e,n)=>Math.floor((0,t.randNum)(e,n)),t.range=e=>[...Array(e).keys()],t.objKeys=e=>Object.keys(e),t.getTimeMs=()=>(new Date).getTime(),t.abs=Math.abs,t.min=Math.min,t.max=Math.max,t.sin=Math.sin,t.cos=Math.cos,t.tan=Math.tan,t.sqrt=Math.sqrt,t.round=Math.round,t.floor=Math.floor,t.ceil=Math.ceil,t.sign=Math.sign,t.pi=Math.PI},127:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.doTests=void 0;const r=n(17);async function s(e,t){return e.dict.has(t)?{value:e.dict.get(t),err:void 0}:{value:{t:"null",v:void 0},err:`"${t} not found.`}}async function a(e,t,n){e.dict.set(t,n)}async function o(e,t,n){const r={t:"null",v:void 0};switch(t){case"print-str":e.output+=n[0].v;break;case"print":case"test.function":e.output+=n[0].v+"\n";break;default:return{value:r,err:"operation does not exist"}}return{value:r,err:void 0}}const i=[{name:"Hello, world!",code:'"Hello, world!"',out:"Hello, world!"},{name:"Say Hello, world!",code:'(print "Hello, world!")',out:"Hello, world!\nnull"},{name:"1 + 1 = 2",code:"(+ 1 1)",out:"2"},{name:"Negate 1 = -1",code:"(- 1)",out:"-1"},{name:"(1+1)+1+(1+1) = 5",code:"(+ (+ 1 1) 1 (+ 1 1))",out:"5"},{name:"Conditional head",code:"((if true + -) 12 9 1)",out:"22"},{name:"Whens",code:'[(when 123 (print "hi") 234) (when false (print "bye"))]',out:"hi\n[234 null]"},{name:"Cond number head",code:"((if false 1 2) [:a :b :c])",out:":c"},{name:"and & short-circuit",code:"[(and true (if true null 1) true) (and 1 2 3)]",out:"[false true]"},{name:"or & short-circuit",code:'[(or true (print "hello") 1) (or false (print-str "-> ") 1)]',out:"-> [true 1]"},{name:"String retrieve",code:'(2 "Hello")',out:"l"},{name:"Vector retrieve",code:"(2 [:a :b :c :d])",out:":c"},{name:"Key as operation",code:'(:age {:name "Patrick" :age 24})',out:"24"},{name:"Dictionary as op 1",code:'({"name" "Patrick" "age" 24} "age")',out:"24"},{name:"Dictionary as op 2",code:'({"name" "Patrick"} "age" 24)',out:"{name Patrick, age 24}"},{name:"Equalities",code:'[(= 1 2 1)\n            (!= 1 2 1)\n            (= "Hello" "hello")\n            (!= "world" "world")\n            (= [0 [1]] [0 [1]])]',out:"[false true false false true]"},{name:"Define and retrieve",code:"(var a 1) a",out:"1"},{name:"Define and add",code:"(var a 1) (inc a)",out:"2"},{name:"Define op and call",code:"(var f +) (f 2 2)",out:"4"},{name:"Define vec and call",code:"(var f [1]) (f 1)",out:"1"},{name:"Define num op and call",code:"(var f 1) (f [:a :b :c])",out:":b"},{name:"Print simple vector",code:"[1 2 3]",out:"[1 2 3]"},{name:"Sum vector of numbers",code:"[(reduce + [1 2 3]) (reduce + [1 2 3] 3)]",out:"[6 9]"},{name:"Sum vectors of numbers",code:"(map + [1 2 3] [1 2 3 4])",out:"[2 4 6]"},{name:"Filter by integer",code:'(filter 2 [[1] [:a :b :c] "hello" "hi"])',out:"[[:a :b :c] hello]"},{name:"Comments, short decimal",code:';((print "Hello")\n           .456',out:"0.456"},{name:"Dictionary into vector",code:"(into [1 2] {3 4 5 6})",out:"[1 2 [3 4] [5 6]]"},{name:"Vector into dictionary",code:"(into {[0] 1 [2] 3} [[0] 2])",out:"{[0] 2, [2] 3}"},{name:"While loop",code:"(var n 5)\n           (while (< 0 n)\n             (print-str n)\n             (var n (dec n)))",out:"543215"},{name:"Define with no call",code:'(function func (print "Nothing."))'},{name:"Call greet func",code:'(function greeting (print "Hello!")) (greeting)',out:"Hello!\nnull"},{name:"Call const value func",code:"(function const 123) (const)",out:"123"},{name:"Call identity funcs",code:"(function id1 #)\n           (function id2 x x)\n           [(id1 123) (id2 456)]",out:"[123 456]"},{name:"Call greet with name",code:'(function greeting name (print "Hello, " name "!"))\n           (greeting "Patrick")',out:"Hello, Patrick!\nnull"},{name:"Call with too few args",code:"(function func a b c [a b c]) (func 1 2)",out:"[1 2 null]"},{name:"Define func and call",code:"(function func a b (+ a b)) (var f func) (f 2 2)",out:"4"},{name:"Anonymous parameters",code:"(function avg<n? (< (/ (.. + #) (len #)) #1))\n           (avg<n? [0 10 20 30 40] 5)",out:"false"},{name:"Call parameter",code:'(function f x (x "hello")) (f print)',out:"hello\nnull"},{name:"Let and retrieve",code:"(function f (let a 1) a) (f)",out:"1"},{name:"Let num op and call",code:"(function f (let n 0) (n [0])) (f)",out:"0"},{name:"String instead of number",code:'(function sum (.. + args))\n           (print (sum 2 2))\n           (sum 2 "hi")',out:"4",err:["Type"]},{name:"Reference non-existing",code:"x",err:["Reference"]},{name:"Expired let retrieve",code:"(function f (let a 1) a) (f) a",err:["Reference"]},{name:"Call non-existing",code:"(x)",err:["External"]},{name:"Call budget",code:"(function f (f)) (f)",err:["Budget"]},{name:"Loop budget",code:"(var n 10000)\n           (while (< 0 n)\n             (var n (dec n)))",err:["Budget"]},{name:"Range budget",code:"(range 10000)",err:["Budget"]},{name:"Fibonacci 13",code:"(function fib n\n             (if (< n 2) n\n               (+ (fib (dec n))\n                  (fib (- n 2)))))\n           (fib 13)",out:"233"},{name:"dedupe (tail-call optim)",code:"(function dedupe list -out\n             (let out (or -out []))\n             (let next (if (out (0 list)) [] [(0 list)]))\n             (if (empty? list) out\n                 (dedupe (sect list) (into out next))))\n           (dedupe [1 1 2 3 3 3])",out:"[1 2 3]"},{name:"set get",code:"[($globals.time_offset 5.5) $globals.time_offset]",out:"[5.5 5.5]"},{name:"exe",code:"(test.function 123)",out:"123\nnull"},{name:"Empty parens",code:"()",err:["Parse"]},{name:"Imbalanced parens 1",code:'(print ("hello!")',err:["Parse"]},{name:"Imbalanced parens 2",code:'print "hello!")',err:["Parse"]},{name:"Imbalanced quotes 1",code:'(print "Hello)',err:["Parse","Parse"]},{name:"Imbalanced quotes 2",code:'print "Hello")',err:["Parse"]},{name:"Function as op",code:"(function)",err:["Parse"]},{name:"Function without body",code:"(function func)",err:["Parse"]}];t.doTests=async function(e,t=!0){const n=[];for(let t=0;t<(0,r.len)(i);++t){const{name:c,code:u,err:l,out:m}=i[t],p={dict:new Map,output:""},d={funcs:{},vars:{},lets:[]},f=(0,r.getTimeMs)(),y=await e({get:e=>s(p,e),set:(e,t)=>a(p,e,t),exe:(e,t)=>o(p,e,t),env:d,loopBudget:1e4,rangeBudget:1e3,callBudget:1e3,recurBudget:1e4},u,"testing",!0),v=(l||[]).join()===y.map((({e})=>e)).join(),x=!m||(0,r.trim)(p.output)===m,h=(0,r.getTimeMs)()-f,[b,g,A,k]=[(0,r.padEnd)(`${t+1}`,3),(0,r.padEnd)(c,24),(0,r.padEnd)(`${h}ms`,6),v||y.map((({e,m:t,errCtx:{line:n,col:r}})=>`${e} ${n}:${r}: ${t}`))];n.push({okErr:v,okOut:x,elapsedMs:h,display:`${b} ${g} ${A} ${x} ${k}`})}const c=n.reduce(((e,{elapsedMs:t})=>e+t),0),u=(0,r.len)(n.filter((({okOut:e,okErr:t})=>e&&t)));return(0,r.concat)(n.filter((e=>!t||!e.okOut||!e.okErr)).map((e=>e.display)),[`----- ${u}/${(0,r.len)(n)} tests passed in ${c}ms.`])}},699:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.typeNames=t.ops=void 0,t.ops={print:{},"print-str":{},"execute-last":{},"!":{exactArity:1},"=":{minArity:2},"!=":{minArity:2},"+":{minArity:2,onlyNum:!0},"-":{minArity:1,onlyNum:!0},"*":{minArity:2,onlyNum:!0},"/":{minArity:2,onlyNum:!0},"//":{minArity:2,onlyNum:!0},"**":{minArity:1,onlyNum:!0},"<":{minArity:2,onlyNum:!0},">":{minArity:2,onlyNum:!0},"<=":{minArity:2,onlyNum:!0},">=":{minArity:2,onlyNum:!0},inc:{exactArity:1,onlyNum:!0},dec:{exactArity:1,onlyNum:!0},min:{minArity:2,onlyNum:!0},max:{minArity:2,onlyNum:!0},abs:{exactArity:1,onlyNum:!0},sqrt:{exactArity:1,onlyNum:!0},round:{exactArity:1,onlyNum:!0},floor:{exactArity:1,onlyNum:!0},ceil:{exactArity:1,onlyNum:!0},"odd?":{exactArity:1,onlyNum:!0},"even?":{exactArity:1,onlyNum:!0},"pos?":{exactArity:1,onlyNum:!0},"neg?":{exactArity:1,onlyNum:!0},"zero?":{exactArity:1,onlyNum:!0},"null?":{exactArity:1},"num?":{exactArity:1},"bool?":{exactArity:1},"str?":{exactArity:1},"vec?":{exactArity:1},"dict?":{exactArity:1},"key?":{exactArity:1},"func?":{exactArity:1},rem:{minArity:2,onlyNum:!0},sin:{exactArity:1,onlyNum:!0},cos:{exactArity:1,onlyNum:!0},tan:{exactArity:1,onlyNum:!0},vec:{},dict:{},len:{exactArity:1,types:[["str","vec","dict"]]},num:{exactArity:1,types:[["str","num"]]},"has?":{exactArity:2,types:["str","str"]},idx:{exactArity:2,types:[["str","vec"]]},map:{minArity:2},for:{minArity:2},reduce:{minArity:2,maxArity:3},filter:{exactArity:2},str:{},"rand-num":{maxArity:2,onlyNum:!0},"rand-int":{maxArity:2,onlyNum:!0},while:{},"..":{minArity:2},into:{exactArity:2,types:[["vec","dict"],["vec","dict"]]},push:{minArity:2,maxArity:3,types:[["vec","dict"]]},sect:{minArity:1,maxArity:3,types:[["vec","str"],"num","num"]},reverse:{exactArity:1,types:[["vec","str"]]},sort:{minArity:1,maxArity:2,types:["vec"]},keys:{exactArity:1,types:["dict"]},vals:{exactArity:1,types:["dict"]},do:{minArity:1},val:{minArity:1},range:{minArity:1,maxArity:3,types:["num","num","num"]},"empty?":{exactArity:1,types:[["str","vec","dict"]]},"starts-with?":{exactArity:2,types:["str","str"]},"ends-with?":{exactArity:2,types:["str","str"]},split:{minArity:1,maxArity:2,types:["str","str"]},join:{minArity:1,maxArity:2,types:["vec","str"]},time:{exactArity:0},version:{exactArity:0},tests:{minArity:0,maxArity:1,types:["bool"]},eval:{exactArity:1,types:["str"]}},t.typeNames={null:"null",str:"string",num:"number",bool:"boolean",key:"keyword",ref:"reference",vec:"vector",dict:"dictionary",func:"function"}}},t={},n=function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}(669);window.insitux=n.invoker})();