(()=>{"use strict";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.d(t,{invoker:()=>Ft});var r={};e.r(r),e.d(r,{abs:()=>N,ceil:()=>V,concat:()=>h,cos:()=>O,ends:()=>y,flat:()=>x,floor:()=>L,getTimeMs:()=>H,has:()=>d,isArray:()=>u,isNum:()=>c,len:()=>o,log10:()=>z,log2:()=>K,logn:()=>_,lowerCase:()=>C,max:()=>q,min:()=>S,objKeys:()=>M,padEnd:()=>B,push:()=>b,randInt:()=>E,randNum:()=>P,range:()=>j,reverse:()=>A,round:()=>R,sign:()=>W,sin:()=>D,slen:()=>i,slice:()=>s,sortBy:()=>g,splice:()=>a,sqrt:()=>F,starts:()=>f,strIdx:()=>v,sub:()=>p,subIdx:()=>m,substr:()=>l,tan:()=>T,toNum:()=>n,trim:()=>w,trimEnd:()=>I,trimStart:()=>$,upperCase:()=>k});const n=e=>Number(e),s=(e,t,r)=>e.slice(t,r),a=(e,t,r)=>e.splice(t,r),o=e=>e.length,i=e=>e.length,c=e=>!Number.isNaN(Number(e)),u=e=>Array.isArray(e),l=(e,t,r)=>e.substring(t,t+(r??e.length)),v=(e,t)=>e[t],p=(e,t)=>e.includes(t),m=(e,t)=>e.indexOf(t),d=(e,t)=>e.includes(t),f=(e,t)=>e.startsWith(t),y=(e,t)=>e.endsWith(t),x=e=>e.flat(),h=(e,t)=>e.concat(t),b=(e,t)=>e.push(...t),g=(e,t)=>e.sort(t),A=e=>e.reverse(),C=e=>e.toLowerCase(),k=e=>e.toUpperCase(),w=e=>e.trim(),$=e=>e.trimStart(),I=e=>e.trimEnd(),B=(e,t)=>e.padEnd(t),P=(e,t)=>e+Math.random()*(t-e),E=(e,t)=>Math.floor(P(e,t)),j=e=>[...Array(e).keys()],M=e=>Object.keys(e),H=()=>(new Date).getTime(),N=Math.abs,S=Math.min,q=Math.max,D=Math.sin,O=Math.cos,T=Math.tan,F=Math.sqrt,R=Math.round,L=Math.floor,V=Math.ceil,W=Math.sign,_=Math.log,K=Math.log2,z=Math.log10,U={print:{returns:["null"]},"print-str":{returns:["null"]},"!":{exactArity:1,returns:["bool"]},"=":{minArity:2},"!=":{minArity:2},"+":{minArity:2,numeric:!0},"-":{minArity:1,numeric:!0},"*":{minArity:2,numeric:!0},"/":{minArity:2,numeric:!0},"//":{minArity:2,numeric:!0},"**":{minArity:1,maxArity:2,numeric:!0},"<":{minArity:2,numeric:!0},">":{minArity:2,numeric:!0},"<=":{minArity:2,numeric:!0},">=":{minArity:2,numeric:!0},"fast=":{exactArity:2},"fast!=":{exactArity:2},"fast+":{exactArity:2,numeric:!0},"fast-":{exactArity:2,numeric:!0},"fast*":{exactArity:2,numeric:!0},"fast/":{exactArity:2,numeric:!0},"fast//":{exactArity:2,numeric:!0},"fast<":{exactArity:2,numeric:!0},"fast>":{exactArity:2,numeric:!0},"fast<=":{exactArity:2,numeric:!0},"fast>=":{exactArity:2,numeric:!0},inc:{exactArity:1,numeric:!0},dec:{exactArity:1,numeric:!0},min:{minArity:2,numeric:!0},max:{minArity:2,numeric:!0},abs:{exactArity:1,numeric:!0},sqrt:{exactArity:1,numeric:!0},round:{minArity:1,maxArity:2,numeric:!0},floor:{exactArity:1,numeric:!0},ceil:{exactArity:1,numeric:!0},logn:{exactArity:1,numeric:!0},log2:{exactArity:1,numeric:!0},log10:{exactArity:1,numeric:!0},and:{minArity:1},or:{minArity:1},"odd?":{exactArity:1,numeric:"in only",returns:["bool"]},"even?":{exactArity:1,numeric:"in only",returns:["bool"]},"pos?":{exactArity:1,numeric:"in only",returns:["bool"]},"neg?":{exactArity:1,numeric:"in only",returns:["bool"]},"zero?":{exactArity:1,numeric:"in only",returns:["bool"]},"null?":{exactArity:1,returns:["bool"]},"num?":{exactArity:1,returns:["bool"]},"bool?":{exactArity:1,returns:["bool"]},"str?":{exactArity:1,returns:["bool"]},"vec?":{exactArity:1,returns:["bool"]},"dict?":{exactArity:1,returns:["bool"]},"key?":{exactArity:1,returns:["bool"]},"func?":{exactArity:1,returns:["bool"]},rem:{minArity:2,numeric:!0},sin:{exactArity:1,numeric:!0},cos:{exactArity:1,numeric:!0},tan:{exactArity:1,numeric:!0},vec:{returns:["vec"]},dict:{returns:["dict"]},len:{exactArity:1,types:[["str","vec","dict"]],returns:["num"]},"to-num":{exactArity:1,types:[["str","num"]],returns:["num","null"]},"to-key":{exactArity:1,types:[["str","num"]],returns:["key"]},"has?":{exactArity:2,types:["str","str"],returns:["bool"]},idx:{minArity:2,maxArity:3,types:[["str","vec"]],returns:["num"]},map:{minArity:2,returns:["vec"]},for:{minArity:2,returns:["vec"]},reduce:{minArity:2,maxArity:3},filter:{minArity:2,returns:["vec"]},remove:{minArity:2,returns:["vec"]},find:{minArity:2},count:{minArity:2,returns:["num"]},str:{returns:["str"]},rand:{maxArity:2,numeric:!0,returns:["num"]},"rand-int":{maxArity:2,numeric:!0,returns:["num"]},while:{},"..":{minArity:2},"...":{minArity:2},into:{exactArity:2,types:[["vec","dict"],["vec","dict"]],returns:["vec","dict"]},push:{minArity:2,maxArity:3,types:[["vec","dict"]],returns:["vec","dict"]},sect:{minArity:1,maxArity:3,types:[["vec","str"],"num","num"],returns:["vec","str"]},reverse:{exactArity:1,types:[["vec","str"]],returns:["vec","str"]},sort:{minArity:1,maxArity:2,types:["vec"],returns:["vec"]},keys:{exactArity:1,types:["dict"]},vals:{exactArity:1,types:["dict"]},do:{minArity:1},val:{minArity:1},range:{minArity:1,maxArity:3,numeric:!0},"empty?":{exactArity:1,types:[["str","vec","dict"]],returns:["bool"]},split:{minArity:1,maxArity:2,types:["str","str"],returns:["vec"]},join:{minArity:1,maxArity:2,types:["vec","str"],returns:["str"]},"starts-with?":{exactArity:2,types:["str","str"],returns:["bool"]},"ends-with?":{exactArity:2,types:["str","str"],returns:["bool"]},"lower-case":{exactArity:1,types:["str"],returns:["str"]},"upper-case":{exactArity:1,types:["str"],returns:["str"]},trim:{exactArity:1,types:["str"],returns:["str"]},"trim-start":{exactArity:1,types:["str"],returns:["str"]},"trim-end":{exactArity:1,types:["str"],returns:["str"]},"str*":{exactArity:2,types:["str","num"],returns:["str"]},time:{exactArity:0,returns:["num"]},version:{exactArity:0,returns:["num"]},tests:{minArity:0,maxArity:1,types:["bool"],returns:["str"]},symbols:{exactArity:0,returns:["vec"]},eval:{exactArity:1,types:["str"]},reset:{exactArity:0}},G={null:"null",str:"string",num:"number",bool:"boolean",key:"keyword",ref:"reference",vec:"vector",dict:"dictionary",func:"function",clo:"closure"},J=({v:e})=>e,Q=({v:e})=>e,X=({v:e})=>e,Y=({v:e})=>e,Z=e=>e.reduce(((e,t)=>e+ee(t)),""),ee=e=>{const t=e=>"str"===e.t?`"${e.v}"`:ee(e);if("clo"===e.t)return`#${e.v.name}`;if("vec"===e.t)return`[${e.v.map(t).join(" ")}]`;if("dict"===e.t){const{keys:r,vals:n}=e.v,[s,a]=[r.map(t),n.map(t)];return`{${s.map(((e,t)=>`${e} ${a[t]}`)).join(", ")}}`}return"null"===e.t?"null":`${e.v}`},te=e=>"vec"===e.t?s(e.v):"str"===e.t?[...e.v].map((e=>({t:"str",v:e}))):"dict"===e.t?e.v.keys.map(((t,r)=>({t:"vec",v:[t,e.v.vals[r]]}))):[],re=e=>{o(e)%2==1&&e.pop();const t=e.filter(((e,t)=>t%2==0)),r=e.filter(((e,t)=>t%2==1)),n=[],s=[];return t.forEach(((e,t)=>{const a=n.findIndex((t=>ie(t,e)));-1===a?(n.push(e),s.push(r[t])):s[a]=r[t]})),{t:"dict",v:{keys:n,vals:s}}},ne=({keys:e,vals:t},r)=>{const n=e.findIndex((e=>ie(e,r)));return-1===n?{t:"null",v:void 0}:t[n]},se=({keys:e,vals:t},r,n)=>{const[a,o]=[s(e),s(t)],i=e.findIndex((e=>ie(e,r)));return-1!==i?o[i]=n:(a.push(r),o.push(n)),{keys:a,vals:o}},ae=e=>"bool"===e.t?e.v:"null"!==e.t,oe=(e,t)=>o(e)===o(t)&&!e.some(((e,r)=>!ie(e,t[r]))),ie=(e,t)=>{if(e.t!==t.t)return!1;switch(e.t){case"null":return!0;case"bool":case"num":return e.v===t.v;case"vec":return oe(e.v,X(t));case"dict":{const r=Y(t);return o(e.v.keys)===o(r.keys)&&oe(e.v.keys,r.keys)}case"str":case"ref":case"key":case"func":return Q(e)===Q(t);case"clo":return e.v.name===t.v.name}return 0};function ce(e,t,r){const{exactArity:n,maxArity:s,minArity:a}=U[e],o=(n,s)=>[{e:"Arity",m:`${e} needs ${n} argument${1!==s?"s":""}, not ${t}`,errCtx:r}];if(void 0!==n){if(t!==n)return o(`exactly ${n}`,n)}else{if(a&&!s&&t<a)return o(`at least ${a}`,a);if(!a&&s&&t>s)return o(`at most ${s}`,s);if(a&&s&&(t<a||t>s))return o(`between ${a} and ${s}`,s)}}function ue(e,t,r,n=!1){const{types:s,numeric:a}=U[e],i=o(t);if(a){const s=t.findIndex((e=>!!o(e)&&(n?!e.find((e=>"num"===e)):"num"!==e[0])));if(-1===s)return;const a=t[s].map((e=>G[e])).join(", ");return[le(`${e} takes numeric arguments only, not ${a}`,r)]}if(!s)return;const c=s.map(((e,r)=>{if(r>=i||!t[r])return!1;const s=t[r];if(u(e)){if(n?!o(s)||s.some((t=>d(e,t))):1===o(s)&&d(e,s[0]))return!1;const t=s.map((e=>G[e]));return`argument ${r+1} must be either: ${e.map((e=>G[e])).join(", ")}, not ${t}`}{if(n?!o(s)||d(s,e):1===o(s)&&e===s[0])return!1;const t=s.map((e=>G[e]));return`argument ${r+1} must be ${G[e]}, not ${t}`}})).filter((e=>!!e));return o(c)?c.map((e=>le(e,r))):void 0}const le=(e,t)=>({e:"Type",m:e,errCtx:t});function ve(e,t){const r=t.map((e=>G[e])).join(", ");return[le(`number as operation argument must be string, vector, or dictionary, not ${r}`,e)]}function pe(e,t){const r=t.map((e=>G[e])).join(", ");return[le(`keyword as operation argument must be dictionary or vector, not ${r}`,e)]}const{concat:me,has:de,flat:fe,push:ye,slice:xe,splice:he}=r,{slen:be,starts:ge,sub:Ae,substr:Ce,strIdx:ke}=r,{isNum:we,len:$e,toNum:Ie}=r,Be={t:"null",v:void 0};function Pe(e,t){const r=[];for(;;){const n=Ee(e,t);if(!$e(n))break;ye(r,n)}return r}function Ee(e,t,r=!0){if(!$e(e))return[];const{typ:n,text:s,errCtx:a}=e.shift();if("sym"===n&&Ae("#@",s)&&$e(e)&&"("===e[0].typ){const r=e.map((e=>e.text)),n=Ee(e,t,"@"!==s),o=n.find((e=>"err"===e.typ));return o?[o]:[{typ:"#"===s?"clo":"par",value:[xe(r,0,$e(r)-$e(e)).join(" "),n],errCtx:a}]}switch(n){case"str":return[{typ:"val",value:{t:"str",v:s},errCtx:a}];case"num":return[{typ:"val",value:{t:"num",v:Ie(s)},errCtx:a}];case"sym":if("true"===s||"false"===s)return[{typ:"val",value:{t:"bool",v:"true"===s},errCtx:a}];if("null"===s)return[{typ:"val",value:Be,errCtx:a}];if(ge(s,":"))return[{typ:"val",value:{t:"key",v:s},errCtx:a}];if(ge(s,"%")&&we(Ce(s,1))){const e=Ie(Ce(s,1));return e<0?[{typ:"val",value:Be,errCtx:a}]:[{typ:"upa",value:e,errCtx:a}]}return de(t,s)?[{typ:"npa",value:t.indexOf(s),errCtx:a}]:"args"===s?[{typ:"upa",value:-1,errCtx:a}]:"PI"===s||"E"===s?[{typ:"val",value:{t:"num",v:"PI"===s?3.141592653589793:2.718281828459045},errCtx:a}]:U[s]?[{typ:"val",value:{t:"func",v:s},errCtx:a}]:[{typ:"ref",value:s,errCtx:a}];case"(":return function(e,t,r=!0){const n=e.shift();if(!n)return[];const{typ:s,text:a,errCtx:o}=n;let i=a;const c=e=>[{typ:"err",value:e,errCtx:o}];if("catch"===i){if("("!==e[0].typ)return c("argument 1 must be expression");const r=Ee(e,t),n=Pe(e,t);return $e(r)&&$e(n)?[...r,{typ:"cat",value:$e(n),errCtx:o},...n]:c("must provide at least 2 arguments")}if("var"===i||"let"===i){const r=[];for(;;){const n=Ee(e,t);if($e(r)&&!$e(n))return r;const s=Ee(e,t);if(!($e(r)||$e(n)&&$e(s)))return c("must provide at least one declaration name and value");if(!$e(s))return c("must provide a value after each declaration name");const a=n[0];if("ref"!==a.typ)return c("declaration name must be symbol");ye(r,s),r.push({typ:i,value:a.value,errCtx:o})}}else{if("if"===i||"when"===i){const r=Ee(e,t);if(!$e(r))return c("must provide condition");const n=r;if("if"===i){const r=Ee(e,t);if(!$e(r))return c("must provide a branch");n.push({typ:"if",value:$e(r)+1,errCtx:o}),ye(n,r);const s=Ee(e,t);if($e(s)){if(n.push({typ:"jmp",value:$e(s),errCtx:o}),ye(n,s),$e(Ee(e,t)))return c("too many branches")}else n.push({typ:"jmp",value:1,errCtx:o}),n.push({typ:"val",value:Be,errCtx:o})}else{const r=Pe(e,t);n.push({typ:"if",value:$e(r)+1,errCtx:o}),ye(n,r),n.push({typ:"jmp",value:1,errCtx:o}),n.push({typ:"val",value:Be,errCtx:o})}return n}if("and"===i||"or"===i||"while"===i||"recur"===i){const r=[];let n=0;for(;;){const s=Ee(e,t);if(!$e(s))break;r.push(s),n+=$e(s)}if("recur"===i)return[...fe(r),{typ:"rec",value:$e(r),errCtx:o}];if($e(r)<2)return c("requires at least two arguments");const s=[];if("while"===i){s.push({typ:"val",value:Be,errCtx:o}),n+=2;const e=r.shift();return ye(s,e),s.push({typ:"if",value:n-$e(e),errCtx:o}),s.push({typ:"pop",value:$e(r),errCtx:o}),r.forEach((e=>ye(s,e))),s.push({typ:"loo",value:-(n+1),errCtx:o}),s}n+=$e(r),n+=Ie("and"===i);const a="and"===i?"if":"or";for(let e=0;e<$e(r);++e)ye(s,r[e]),n-=$e(r[e]),s.push({typ:a,value:n,errCtx:o}),--n;return"and"===i?ye(s,[{typ:"val",value:{t:"bool",v:!0},errCtx:o},{typ:"jmp",value:1,errCtx:o},{typ:"val",value:{t:"bool",v:!1},errCtx:o}]):s.push({typ:"val",value:{t:"bool",v:!1},errCtx:o}),s}}const u=[];let l=0;if("("===s||de(t,a)||Ae("%#@",ke(a,0))){e.unshift(n);const r=Ee(e,t);ye(u,r)}const v=[];for(;$e(e);){const r=Ee(e,t);if(!$e(r))break;++l,ye(v,r)}if("return"===i)return[...v,{typ:"ret",value:!!$e(v),errCtx:o}];if(U[i]&&r){const e=ce(i,l,o);ye(u,e?.map((e=>c(e.m)[0]))??[]),e||2===l&&U[`fast${i}`]&&(i=`fast${i}`)}if($e(u))u.push({typ:"exe",value:l,errCtx:o});else{const e="num"===s?{t:"num",v:Ie(i)}:ge(i,":")?{t:"key",v:i}:U[i]?{t:"func",v:i}:"true"===i||"false"===i?{t:"bool",v:"true"===i}:{t:"str",v:i};u.push({typ:"val",value:e,errCtx:o}),u.push({typ:"exe",value:l,errCtx:o})}return[...v,...u]}(e,t,r);case")":case"rem":return[];default:return 0}}function je(e){const t=[];for(let r=0,n=$e(e);r<n;++r){const n=e[r];switch(n.typ){case"val":t.push({types:[n.value.t],val:n.value});break;case"exe":{const e=t.pop(),r=he(t,$e(t)-n.value,n.value),s=e=>r.findIndex((({types:t})=>t&&!e.find((e=>de(t,e))))),a=t=>e.val?e.val.t===t:e.types&&1===$e(e.types)&&e.types[0]===t;if(e.val&&"func"===e.val.t){const s=ue(e.val.v,r.map((e=>e.types??[])),n.errCtx,!0);if(s)return s;const{returns:a,numeric:o}=U[e.val.v];t.push(o&&"in only"!==o?{types:["num"]}:{types:a})}else if(a("num")){const e=s(["str","dict","vec"]);if(-1!==e)return ve(n.errCtx,r[e].types);t.push({})}else if(a("key")){const e=s(["dict","vec"]);if(-1!==e)return pe(n.errCtx,r[e].types);t.push({})}break}case"cat":case"or":case"var":case"let":case"loo":case"jmp":break;case"clo":case"par":{const e=je(n.value[1]);if(e)return e}case"ref":case"npa":case"upa":t.push({});break;case"if":{t.pop(),t.push({});const s=je(xe(e,r+1,n.value+1));if(s)return s;r+=n.value-1;break}case"pop":case"rec":he(t,$e(t)-n.value,n.value);break;case"ret":n.value&&t.pop()}}}function Me(e,t){const{tokens:r,stringError:n}=function(e,t,r=!0,n=!1){const s=[];let a=!1,o=!1,i=[0,0],c=!1,u=!1,l=!1,v=1,p=0;for(let m=0,d=be(e);m<d;++m){const f=ke(e,m),y=m+1!==d?ke(e,m+1):"";if(++p,l){"\n"===f?(l=!1,++v,p=0):n&&(s[$e(s)-1].text+=f);continue}if(o){o=!1,a&&(s[$e(s)-1].text+={n:"\n",t:"\t",'"':'"'}[f]||`\\${f}`);continue}if("\\"===f){o=!0;continue}if('"'===f){(a=!a)&&(i=[v,p],s.push({typ:"str",text:"",errCtx:{sourceId:t,line:v,col:p}})),u=c=!1;continue}const x=Ae(" \t\n\r,",f);if(!a&&x){u=c=!1,"\n"===f&&(++v,p=0);continue}if(!a&&";"===f){l=!0,n&&s.push({typ:"rem",text:"",errCtx:{sourceId:t,line:v,col:p}});continue}const h={sourceId:t,line:v,col:p},b=e=>Ae("0123456789",e),g=Ae("()[]{}",f);if(u&&!b(f)&&(u="."===f&&!Ae(s[$e(s)-1].text,"."),u||g||x||(c=!0,s[$e(s)-1].typ="sym")),c&&g&&(c=!1),!a&&!c&&!u){if(g){const e={"[":"(","{":"(","(":"(",")":")","}":")","]":")"}[f];s.push({typ:e,text:r?e:f,errCtx:h}),r&&("["===f?s.push({typ:"sym",text:"vec",errCtx:h}):"{"===f&&s.push({typ:"sym",text:"dict",errCtx:h}));continue}u=b(f)||"."===f&&b(y)||"-"===f&&(b(y)||"."===y),c=!u;const e=c?"sym":"num";s.push({typ:e,text:"",errCtx:h})}s[$e(s)-1].text+=f}return{tokens:s,stringError:a?i:void 0}}(e,t),s=function(e,t){const r=$e(t)?t[0].errCtx.sourceId:"",n=[],s=(e,t)=>n.push({e:"Parse",m:e,errCtx:t}),a=e=>$e(t.filter((({typ:t})=>t===e))),[o,i]=[a("("),a(")")];{const[e,n]=function(e,t,r){const n=r>=t,[s,a]=[n?"(":")",n?")":"("],o=n?1:-1;for(let t=$e(e),r=n?0:t-1,i=0;n?r<t:r>=0;r+=o){const{typ:t,errCtx:{line:n,col:o}}=e[r];if(i+=Ie(t===s)-Ie(t===a),i<0)return[n,o]}return[0,0]}(t,o,i);e+n&&s("unmatched parenthesis",{sourceId:r,line:e,col:n})}if(e){const[t,n]=e;s("unmatched double quotation marks",{sourceId:r,line:t,col:n})}let c;for(let e=0,r=!1;e<$e(t);++e){if(r&&")"===t[e].typ){c=t[e];break}r="("===t[e].typ}return c&&s("empty expression forbidden",c.errCtx),n}(n,r);if($e(s))return{errors:s,funcs:{}};const a=function(e){const t=[[]];let r=0;return e.forEach((e=>{t[$e(t)-1].push(e),r+=Ie("("===e.typ)-Ie(")"===e.typ),0===r&&t.push([])})),t}(r),o=function(e){const t=e=>$e(e)>1&&"sym"===e[1].typ&&"function"===e[1].text,r=e.filter((e=>t(e))),n=fe(e.filter((e=>!t(e)))),s=r.map((e=>({name:e[2].text,tokens:xe(e,3),errCtx:e[2].errCtx})));return $e(n)?me(s,[{name:"entry",tokens:n,errCtx:n[0].errCtx}]):s}(a),i=o.map((e=>function({name:e,tokens:t},r){const n=(e,t=r)=>["err",{e:"Parse",m:e,errCtx:t}],s=t.findIndex((e=>"sym"!==e.typ||Ae("%#@",e.text))),a=xe(t,0,s),o=xe(t,s);if("("===e)return n("nameless function");if(!$e(a)&&!$e(o))return n("empty function body");if($e(o)&&")"===o[0].typ){if(!$e(a))return n("empty function body");o.unshift(a.pop())}$e(a)&&!$e(o)&&o.push(a.pop());const i=[];for(;$e(o);)ye(i,Ee(o,a.map((e=>e.text))));const c=i.find((e=>"err"===e.typ));return c?n(c.value,c.errCtx):["func",{name:e,ins:i}]}(e,{sourceId:t,line:e.errCtx.line,col:e.errCtx.col}))),c=[],u=[];i.forEach((e=>{"err"===e[0]?u.push(e[1]):c.push(e[1])})),ye(u,fe(c.map((e=>je(e.ins)??[]))));const l={};return c.forEach((e=>l[e.name]=e)),{errors:u,funcs:l}}async function He(e,t){return e.dict.has(t)?{kind:"val",value:e.dict.get(t)}:{kind:"err",err:`"${t} not found.`}}async function Ne(e,t,r){e.dict.set(t,r)}async function Se(e,t,r){switch(t){case"print-str":e.output+=r[0].v;break;case"print":case"test.function":e.output+=r[0].v+"\n";break;default:return{kind:"err",err:`operation ${t} does not exist`}}return{kind:"val",value:{t:"null",v:void 0}}}const qe=[{name:"Hello, world!",code:'"Hello, world!"',out:"Hello, world!"},{name:"Say Hello, world!",code:'(print "Hello, world!")',out:"Hello, world!\nnull"},{name:"1 + 1 = 2",code:"(+ 1 1)",out:"2"},{name:"Negate 1 = -1",code:"(- 1)",out:"-1"},{name:"(1+1)+1+(1+1) = 5",code:"(+ (+ 1 1) 1 (+ 1 1))",out:"5"},{name:"Conditional head",code:"((if true + -) 12 9 1)",out:"22"},{name:"Whens",code:'[(when 123 (print "hi") 234) (when false (print "bye"))]',out:"hi\n[234 null]"},{name:"Cond number head",code:"((if false 1 2) [:a :b :c])",out:":c"},{name:"and & short-circuit",code:"[(and true (if true null 1) true) (and 1 2 3)]",out:"[false true]"},{name:"or & short-circuit",code:'[(or true (print "hello") 1) (or false (print-str "-> ") 1)]',out:"-> [true 1]"},{name:"String retrieve",code:'(2 "Hello")',out:"l"},{name:"Vector retrieve",code:"(2 [:a :b :c :d])",out:":c"},{name:"Key as operation",code:'[(:age {:name "Patrick" :age 24}) (:abc [:a :abc :c])]',out:"[24 :abc]"},{name:"Dictionary as op 1",code:'({"name" "Patrick" "age" 24} "age")',out:"24"},{name:"Dictionary as op 2",code:'({"name" "Patrick"} "age" 24)',out:'{"name" "Patrick", "age" 24}'},{name:"Equalities",code:'[(= 1 2 1)\n            (!= 1 2 1)\n            (= "Hello" "hello")\n            (!= "world" "world")\n            (= [0 [1]] [0 [1]])]',out:"[false 1 false false [0 [1]]]"},{name:"Define and retrieve",code:"(var a 1) a",out:"1"},{name:"Define and add",code:"(var a 1) (inc a)",out:"2"},{name:"Define op and call",code:"(var f +) (f 2 2)",out:"4"},{name:"Define vec and call",code:"(var f [1]) (f 1)",out:"1"},{name:"Define num and call",code:"(var f 1) (f [:a :b :c])",out:":b"},{name:"Print simple vector",code:"[1 2 3]",out:"[1 2 3]"},{name:"Boolean select",code:"[(true 1 2) (false 1)]",out:"[1 null]"},{name:"Sum vector of numbers",code:"[(reduce + [1 2 3]) (reduce + [1 2 3] 3)]",out:"[6 9]"},{name:"Sum vectors of numbers",code:"(map + [1 2 3] [1 2 3 4])",out:"[2 4 6]"},{name:"Filter by integer",code:'(filter 2 [[1] [:a :b :c] "hello" "hi"])',out:'[[:a :b :c] "hello"]'},{name:"Comments, short decimal",code:';((print "Hello")\n           .456',out:"0.456"},{name:"Dictionary into vector",code:"(into [1 2] {3 4 5 6})",out:"[1 2 [3 4] [5 6]]"},{name:"Vector into dictionary",code:"(into {[0] 1 [2] 3} [[0] 2])",out:"{[0] 2, [2] 3}"},{name:"While loop",code:"(var n 5)\n           (while (< 0 n)\n             (print-str n)\n             (var n (dec n)))",out:"543210"},{name:"Catch error",code:'(catch\n             (:e (catch (do (let a :a) (+ 1 a)) (0 errors)))\n             (print "hi"))',out:"Type"},{name:"Define with no call",code:'(function func (print "Nothing."))'},{name:"Call greet func",code:'(function greeting (print "Hello!")) (greeting)',out:"Hello!\nnull"},{name:"Call const value func",code:"(function const 123) (const)",out:"123"},{name:"Call identity funcs",code:"(function id1 %)\n           (function id2 x x)\n           [(id1 123) (id2 456)]",out:"[123 456]"},{name:"Call greet with name",code:'(function greeting name (print "Hello, " name "!"))\n           (greeting "Patrick")',out:"Hello, Patrick!\nnull"},{name:"Call with too few args",code:"(function func a b c [a b c]) (func 1 2)",out:"[1 2 null]"},{name:"Define func and call",code:"(function func a b (+ a b)) (var f func) (f 2 2)",out:"4"},{name:"Anonymous parameters",code:"(function avg<n? (< (/ (.. + %) (len %)) %1))\n           (avg<n? [0 10 20 30 40] 5)",out:"false"},{name:"Call parameter",code:'(function f x (x "hello")) (f print)',out:"hello\nnull"},{name:"Let and retrieve",code:"(function f (let a 1) a) (f)",out:"1"},{name:"Let num op and call",code:"(function f (let n 0) (n [1])) (f)",out:"1"},{name:"Explicit return",code:"(function f (return 123) (print 456)) (f)",out:"123"},{name:"Closure 1",code:"(let x 10)\n           (let closure #(+ x x))\n           (let x 11)\n           (closure)",out:"20"},{name:"Closure 2",code:"(filter #(or (.. = args) (even? %)) (range 10) 5)",out:"[0 2 4 5 6 8]"},{name:"Closure 3",code:"(function f #(+ x x))\n           (var x 10) (let c20 (f))\n           (var x 20) (let c40 (f))\n           [(c20) (c40)]",out:"[20 40]"},{name:"Func returns closure",code:"(function f x #(x 2 2))\n           (let closure (f +))\n           (closure)",out:"4"},{name:"Dictionary closure",code:"(function f x #{x 2})\n           (let closure (f :a))\n           (closure)",out:"{:a 2}"},{name:"Vector closure",code:"(function f x #[1 x %])\n           (let closure (f 2))\n           (closure 3)",out:"[1 2 3]"},{name:"Closure as head",code:"(#[% %1 %2] 1 2 3)",out:"[1 2 3]"},{name:"Partial closure 1",code:"(@[] 1 2 3)",out:"[1 2 3]"},{name:"String instead of number",code:'(function sum (.. + args))\n           (print (sum 2 2))\n           (sum 2 "hi")',out:"4",err:["Type"]},{name:"Reference non-existing",code:"x",err:["Reference"]},{name:"Expired let retrieve",code:"(function f (let a 1) a) (f) a",err:["Reference"]},{name:"Call non-existing",code:"(x)",err:["External"]},{name:"Call budget",code:"(function f (f)) (f)",err:["Budget"]},{name:"Loop budget",code:"(var n 10000)\n           (while (< 0 n)\n             (var n (dec n)))",err:["Budget"]},{name:"Range budget",code:"(range 10000)",err:["Budget"]},{name:"Fibonacci 13",code:"(function fib n\n             (if (< n 2) n\n               (+ (fib (dec n))\n                  (fib (- n 2)))))\n           (fib 13)",out:"233"},{name:"dedupe (recur)",code:"(function dedupe list -out\n             (let out (or -out []))\n             (let next (if (out (0 list)) [] [(0 list)]))\n             (if (empty? list) out\n                 (recur (sect list) (into out next))))\n           (dedupe [1 1 2 3 3 3])",out:"[1 2 3]"},{name:"set get",code:"[($globals.time_offset 5.5) $globals.time_offset]",out:"[5.5 5.5]"},{name:"exe",code:"(test.function 123)",out:"123\nnull"},{name:"Empty parens",code:"()",err:["Parse"]},{name:"Imbalanced parens 1",code:'(print ("hello!")',err:["Parse"]},{name:"Imbalanced parens 2",code:'print "hello!")',err:["Parse"]},{name:"Imbalanced quotes 1",code:'(print "Hello)',err:["Parse","Parse"]},{name:"Imbalanced quotes 2",code:'print "Hello")',err:["Parse"]},{name:"Function as op",code:"(function)",err:["Parse"]},{name:"Function without name",code:"(function (+))",err:["Parse"]},{name:"Function without body",code:"(function func)",err:["Parse"]},{name:"Variable not symbol",code:"(var 1 2)",err:["Parse"]},{name:"Parser type error 1",code:"(function f (+ 1 :a))",err:["Type"]},{name:"Parser type error 2",code:"(function f (+ 1 (into {} {})))",err:["Type"]},{name:"Parser type error 3",code:"(function f (if true (into 2 {}) (+ 2 2)))",err:["Type"]}],{abs:De,cos:Oe,sin:Te,tan:Fe,sign:Re,sqrt:Le,floor:Ve,ceil:We,round:_e,max:Ke,min:ze}=r,{logn:Ue,log2:Ge,log10:Je}=r,{concat:Qe,has:Xe,flat:Ye,push:Ze,reverse:et,slice:tt,splice:rt,sortBy:nt}=r,{ends:st,slen:at,starts:ot,sub:it,subIdx:ct,substr:ut,upperCase:lt,lowerCase:vt}=r,{trim:pt,trimStart:mt,trimEnd:dt}=r,{getTimeMs:ft,randInt:yt,randNum:xt}=r,{isNum:ht,len:bt,objKeys:gt,range:At,toNum:Ct}=r;let kt=[],wt=[];const $t=e=>kt.push({t:"bool",v:e}),It=e=>kt.push({t:"num",v:e}),Bt=(e="")=>kt.push({t:"str",v:e}),Pt=(e=[])=>kt.push({t:"vec",v:e}),Et=e=>kt.push({t:"dict",v:e}),jt=()=>kt.push({t:"null",v:void 0}),Mt=e=>kt.push({t:"func",v:e});function Ht(e,t,r,n=!0){const i=[{e:"Arity",m:"one argument required",errCtx:r}];if("str"===t.t||"func"===t.t){const c=t.v;return U[c]?t=>async function(e,t,r,n,i){const c=e=>[le(e,n)];if(i){const r=ce(e,bt(t),n);if(r)return r}{const r=ue(e,t.map((e=>[e.t])),n);if(r)return r}switch(e){case"str":return void kt.push({t:"str",v:Z(t)});case"print":case"print-str":return r.exe(e,[{t:"str",v:Z(t)}]),void jt();case"vec":return void Pt(t);case"dict":return void kt.push(re(t));case"len":return void It("str"===t[0].t?at(t[0].v):"vec"===t[0].t?bt(t[0].v):bt(Y(t[0]).keys));case"to-num":return void(ht(t[0].v)?It(Ct(t[0].v)):jt());case"to-key":return void kt.push({t:"key",v:`:${ee(t[0])}`});case"!":return void $t(!ae(t[0]));case"=":case"!=":for(let r=1,n=bt(t);r<n;++r)if(ie(t[r-1],t[r])!==("="===e))return void $t(!1);return void kt.push(t[0]);case"-":return void It(1===bt(t)?-J(t[0]):t.map(J).reduce(((e,t)=>e-t)));case"**":return void It(J(t[0])**(1===bt(t)?2:J(t[1])));case"+":return void It(t.map(J).reduce(((e,t)=>e+t)));case"*":return void It(t.map(J).reduce(((e,t)=>e*t)));case"/":return void It(t.map(J).reduce(((e,t)=>e/t)));case"//":return void It(t.map(J).reduce(((e,t)=>Ve(e/t))));case"fast=":case"fast!=":return ie(t[0],t[1])!==("fast="===e)?void $t(!1):void kt.push(t[0]);case"fast-":return void It(t[0].v-t[1].v);case"fast+":return void It(t[0].v+t[1].v);case"fast*":return void It(t[0].v*t[1].v);case"fast/":return void It(t[0].v/t[1].v);case"fast//":return void It(Ve(t[0].v/t[1].v));case"fast<":return void $t(t[0].v<t[1].v);case"fast>":return void $t(t[0].v>t[1].v);case"fast<=":return void $t(t[0].v<=t[1].v);case"fast>=":return void $t(t[0].v>=t[1].v);case"rem":return void It(t.map(J).reduce(((e,t)=>e%t)));case"min":return void It(t.map(J).reduce(((e,t)=>ze(e,t))));case"max":return void It(t.map(J).reduce(((e,t)=>Ke(e,t))));case"<":case">":case"<=":case">=":for(let r=1,n=bt(t);r<n;++r){const[n,s]=[t[r-1].v,t[r].v];if("<"===e&&n>=s||">"===e&&n<=s||"<="===e&&n>s||">="===e&&n<s)return void $t(!1)}return void $t(!0);case"inc":return void It(t[0].v+1);case"dec":return void It(t[0].v-1);case"abs":return void It(De(t[0].v));case"round":if(2===bt(t)){const e=10**t[1].v;It(_e(t[0].v*e)/e)}else It(_e(t[0].v));return;case"sin":case"cos":case"tan":case"sqrt":case"floor":case"ceil":case"logn":case"log2":case"log10":return void It({sin:Te,cos:Oe,tan:Fe,sqrt:Le,floor:Ve,ceil:We,logn:Ue,log2:Ge,log10:Je}[e](J(t[0])));case"and":return void $t(t.every(ae));case"or":return void $t(t.some(ae));case"odd?":case"even?":return void $t(J(t[0])%2==("odd?"===e?1:0));case"pos?":case"neg?":case"zero?":{const r=J(t[0]);return void $t("pos?"===e?r>0:"neg?"===e?r<0:!r)}case"null?":case"num?":case"bool?":case"str?":case"dict?":case"vec?":case"key?":case"func?":return void $t("null?"===e&&"null"===t[0].t||"num?"===e&&"num"===t[0].t||"bool?"===e&&"bool"===t[0].t||"str?"===e&&"str"===t[0].t||"dict?"===e&&"dict"===t[0].t||"vec?"===e&&"vec"===t[0].t||"key?"===e&&"key"===t[0].t||"func?"===e&&("func"===t[0].t||"clo"===t[0].t));case"has?":return void $t(it(Q(t[0]),Q(t[1])));case"idx":{let e=-1;if("str"===t[0].t){if("str"!==t[1].t)return c("strings can only contain strings");if(!(bt(t)<3)){const e=t[0].v.split("");return e[J(t[2])]=t[1].v,void Bt(e.join(""))}e=ct(t[0].v,t[1].v)}else if("vec"===t[0].t){if(!(bt(t)<3)){const e=tt(t[0].v);return e[J(t[2])]=t[1],void Pt(e)}e=t[0].v.findIndex((e=>ie(e,t[1])))}return void(-1===e?jt():It(e))}case"map":case"for":case"reduce":case"filter":case"remove":case"find":case"count":{const s=Ht(r,t.shift(),n),a=e=>"vec"===e||"str"===e||"dict"===e,o="map"===e||"for"===e?t.findIndex((({t:e})=>!a(e))):a(t[0].t)?-1:0;if(-1!==o)return c(`argument 2 must be either: string, vector, dictionary, not ${G[t[o].t]}`);if("for"===e){const e=t.map(te),a=e.map(bt),o=a.map(((e,t)=>tt(a,0,t+1).reduce(((e,t)=>e*t))));o.unshift(1);const i=o.pop();if(i>r.loopBudget)return[{e:"Budget",m:"would exceed loop budget",errCtx:n}];const c=[];for(let t=0;t<i;++t){const r=o.map(((e,r)=>Ve(t/e%a[r]))),n=await s(e.map(((e,t)=>e[r[t]])));if(n)return n;c.push(kt.pop())}return void Pt(c)}if("map"===e){const e=t.map(te),r=ze(...e.map(bt)),n=[];for(let t=0;t<r;++t){const r=await s(e.map((e=>e[t])));if(r)return r;n.push(kt.pop())}return void Pt(n)}const i=te(t.shift());if("reduce"!==e){const r="remove"===e,n="find"===e,a="count"===e,o=[];let c=0;for(let e=0,u=bt(i);e<u;++e){const u=await s([i[e],...t]);if(u)return u;const l=ae(kt.pop());if(a)c+=l?1:0;else{if(n&&l)return void kt.push(i[e]);n||l===r||o.push(i[e])}}switch(e){case"count":return void It(c);case"find":return void jt();default:return void Pt(o)}}if(!bt(i))return void(bt(t)?kt.push(t[0]):Pt());if(bt(i)<2&&!bt(t))return void Ze(kt,i);let u=(bt(t)?t:i).shift();for(let e=0,t=bt(i);e<t;++e){const t=await s([u,i[e]]);if(t)return t;u=kt.pop()}kt.push(u)}return;case"rand-int":case"rand":{const r=bt(t),[n,s]=[r<2?0:J(t[0]),0===r?1+Ct("rand-int"===e):J(1===r?t[0]:t[1])];It("rand-int"===e?yt(n,s):xt(n,s))}return;case"do":case"val":return void kt.push("do"===e?t.pop():t.shift());case"..":case"...":{const s=Ht(r,t.shift(),n);let a=t;if(".."===e)a=Ye(t.map((e=>"vec"===e.t?e.v:[e])));else{const e=a.pop();Ze(a,Ye(["vec"===e.t?e.v:[e]]))}return await s(a)}case"into":if("vec"===t[0].t)Pt(Qe(t[0].v,te(t[1])));else if("vec"===t[1].t)kt.push(re(Qe(Ye(te(t[0]).map(X)),t[1].v)));else{const{keys:e,vals:r}=Y(t[0]),n=Y(t[1]);Et({keys:Qe(e,n.keys),vals:Qe(r,n.vals)})}return;case"push":if("vec"===t[0].t){const e=t[0].v;if(bt(t)<3)Pt(Qe(e,[t[1]]));else{const r=J(t[2]);Pt(Qe(Qe(tt(e,0,r),[t[1]]),tt(e,r)))}}else bt(t)<3?kt.push((({keys:e,vals:t},r)=>{const[n,o]=[s(e),s(t)],i=e.findIndex((e=>ie(e,r)));return-1!==i&&(a(n,i,1),a(o,i,1)),{t:"dict",v:{keys:n,vals:o}}})(Y(t[0]),t[1])):Et(se(Y(t[0]),t[1],t[2]));return;case"sect":{const e=t[0],r="vec"===e.t?bt(e.v):at(Q(e));let n=0,s=r;switch(bt(t)){case 1:n=1;break;case 2:{const e=J(t[1]);e<0?s+=e:n+=e;break}case 3:{const e=J(t[1]),a=J(t[2]);n=e<0?r+e+(a<0?a:0):n+e,s=(a<0?s:n)+a;break}}return n=Ke(n,0),s=ze(s,r),n>s?void("vec"===e.t?Pt:Bt)():void("vec"===e.t?Pt(tt(e.v,n,s)):Bt(ut(Q(t[0]),n,s-n)))}case"reverse":return void("str"===t[0].t?Bt(Z(et(te(t[0])))):Pt(et(te(t[0]))));case"sort":{if(!bt(X(t[0])))return void Pt();const e=te(t[0]),s=[];if(1===bt(t))Ze(s,e.map((e=>[e,e])));else{const a=Ht(r,t.pop(),n);for(let t=0,r=bt(e);t<r;++t){const r=await a([e[t]]);if(r)return r;s.push([e[t],kt.pop()])}}const a=s[0][1].t;return s.some((([e,{t}])=>t!==a||!Xe(["num","str"],t)))?c("can only sort by all number or all string"):("num"===s[0][1].t?nt(s,(([e,t],[r,n])=>J(t)>J(n)?1:-1)):nt(s,(([e,t],[r,n])=>Q(t)>Q(n)?1:-1)),void Pt(s.map((([e])=>e))))}case"range":{const[e,s,a]=t.map(J),o=a&&a<0&&e<s,[i,c]=bt(t)>1?o?[s-1,e-1]:[e,s]:[0,e],u=Re((c-i)*(a||1))*(a||1),l=We(De((c-i)/u));if(!l)return void Pt([]);if(l>r.rangeBudget)return[{e:"Budget",m:"range budget depleted",errCtx:n}];r.rangeBudget-=l;const v=At(l).map((e=>e*u+i));return void Pt(v.map((e=>({t:"num",v:e}))))}case"empty?":return void $t(!bt(te(t[0])));case"keys":case"vals":return void Pt(Y(t[0])["keys"===e?"keys":"vals"]);case"split":return void Pt(Q(t[0]).split(bt(t)>1?Q(t[1]):" ").map((e=>({t:"str",v:e}))));case"join":return void Bt(X(t[0]).map(ee).join(bt(t)>1?Q(t[1]):" "));case"starts-with?":case"ends-with?":return void $t(("starts-with?"===e?ot:st)(Q(t[0]),Q(t[1])));case"upper-case":case"lower-case":case"trim":case"trim-start":case"trim-end":return void Bt(("upper-case"===e?lt:"lower-case"===e?vt:"trim"===e?pt:"trim-start"===e?mt:dt)(Q(t[0])));case"str*":{const e=Q(t[0]);return void Bt(At(Ke(J(t[1]),0)).map((t=>e)).join(""))}case"time":return void It(ft());case"version":return void It(20211011);case"tests":return void Bt((await async function(e,t=!0){const r=[];for(let t=0;t<o(qe);++t){const{name:n,code:s,err:a,out:o}=qe[t],i={dict:new Map,output:""},c={funcs:{},vars:{}},u=H(),l=await e({get:e=>He(i,e),set:(e,t)=>Ne(i,e,t),exe:(e,t)=>Se(i,e,t),env:c,loopBudget:1e4,rangeBudget:1e3,callBudget:1e3,recurBudget:1e4},s,"testing",!0),v=(a||[]).join()===l.map((({e})=>e)).join(),p=!o||w(i.output)===o,m=H()-u,[d,f,y,x,h]=[B(`${t+1}`,3),B(n,24),B(`${m}ms`,6),p||o+"\t=/=\t"+w(i.output),v||l.map((({e,m:t,errCtx:{line:r,col:n}})=>`${e} ${r}:${n}: ${t}`))];r.push({okErr:v,okOut:p,elapsedMs:m,display:`${d} ${f} ${y} ${x} ${h}`})}const n=r.reduce(((e,{elapsedMs:t})=>e+t),0),s=o(r.filter((({okOut:e,okErr:t})=>e&&t)));return h(r.filter((e=>!t||!e.okOut||!e.okErr)).map((e=>e.display)),[`---- ${s}/${o(r)} tests passed in ${n}ms.`])}(Dt,!(bt(t)&&ae(t[0])))).join("\n"));case"symbols":return void Pt(function(e,t=!0){let r=t?["function","let","var"]:[];Ze(r,["args","PI","E"]),r=Qe(r,gt(U)),r=Qe(r,gt(e.env.funcs)),r=Qe(r,gt(e.env.vars));const n=["entry"];return r.filter((e=>!Xe(n,e)))}(r,!1).map((e=>({t:"str",v:e}))));case"eval":{delete r.env.funcs.entry;const e=bt(kt),s=`${n.sourceId} eval`,a=await qt(r,Q(t[0]),s);return a?[{e:"Eval",m:"error within evaluated code",errCtx:n},...a]:void(e===bt(kt)&&jt())}case"reset":return r.env.vars={},r.env.funcs={},wt=[],void jt()}return[{e:"Unexpected",m:"operation doesn't exist",errCtx:n}]}(c,t,e,r,n):c in e.env.funcs?t=>St(e,e.env.funcs[c],t):c in e.env.vars?Ht(e,e.env.vars[c],r):c in wt[bt(wt)-1]?Ht(e,wt[bt(wt)-1][c],r):ot(c,"$")?async t=>{if(!bt(t))return i;const n=await e.set(ut(c,1),t[0]);return kt.push(t[0]),n?[{e:"External",m:n,errCtx:r}]:void 0}:async t=>{const n=await e.exe(c,t);if("val"!==n.kind)return[{e:"External",m:n.err,errCtx:r}];kt.push(n.value)}}if("clo"===t.t)return r=>St(e,t.v,r);if("key"===t.t)return async e=>{if(!bt(e))return i;if("dict"===e[0].t)kt.push(ne(Y(e[0]),t));else{if("vec"!==e[0].t)return pe(r,[e[0].t]);{const r=X(e[0]).find((e=>ie(e,t)));kt.push(r??{t:"null",v:void 0})}}};if("num"===t.t){const e=Ve(t.v);return async t=>{if(!bt(t))return i;const n=t[0];if("str"!==n.t&&"vec"!==n.t&&"dict"!==n.t)return ve(r,[n.t]);const s=te(n);De(e)>=bt(s)?jt():e<0?kt.push(s[bt(s)+e]):kt.push(s[e])}}if("vec"===t.t){const{v:e}=t;return async t=>{if(!bt(t))return i;const r=e.find((e=>ie(e,t[0])));r?kt.push(r):jt()}}if("dict"===t.t){const e=t.v;return async t=>{if(1===bt(t))kt.push(ne(e,t[0]));else{if(2!==bt(t))return[{e:"Arity",m:"dictionary as operation takes one or two arguments only",errCtx:r}];Et(se(e,t[0],t[1]))}}}if("bool"===t.t){const e=t.v;return async t=>{if(!bt(t)||bt(t)>2)return[{e:"Arity",m:"boolean as operation takes one or two arguments only",errCtx:r}];kt.push(e?t[0]:bt(t)>1?t[1]:{t:"null",v:void 0})}}return async e=>[{e:"Operation",m:`${ee(t)} is an invalid operation`,errCtx:r}]}function Nt(e){const t=(e,t,r)=>se(e,{t:"key",v:t},r);return e.map((({e,m:r,errCtx:n})=>{let s=t({keys:[],vals:[]},":e",{t:"str",v:e});return s=t(s,":m",{t:"str",v:r}),s=t(s,":line",{t:"num",v:n.line}),s=t(s,":col",{t:"num",v:n.col}),{t:"dict",v:s}}))}async function St(e,t,r,n=!1){--e.callBudget,n||wt.push({});const s=bt(kt);for(let n=0,s=bt(t.ins);n<s;++n){const a=t.ins[n],{errCtx:o}=t.ins[n],i=e.loopBudget<1;if(i||e.callBudget<1)return[{e:"Budget",m:(i?"looped":"called")+" too many times",errCtx:o}];switch(a.typ){case"val":kt.push(a.value);break;case"var":e.env.vars[a.value]=kt[bt(kt)-1];break;case"let":wt[bt(wt)-1][a.value]=kt[bt(kt)-1];break;case"npa":case"upa":{const e=a.value;-1===e?Pt(r):bt(r)<=e?jt():kt.push(r[e])}break;case"ref":{const t=a.value;if(U[t])Mt(t);else if(ot(t,"$")){const r=await e.get(ut(t,1));if("err"===r.kind)return[{e:"External",m:r.err,errCtx:o}];kt.push(r.value)}else if(t in e.env.vars)kt.push(e.env.vars[t]);else if(t in wt[bt(wt)-1])kt.push(wt[bt(wt)-1][t]);else{if(!(t in e.env.funcs))return[{e:"Reference",m:`"${t}" did not exist`,errCtx:o}];Mt(t)}}break;case"exe":{const r=Ht(e,kt.pop(),o,!1),s=a.value,i=rt(kt,bt(kt)-s,s),c=await r(i);if(c){const e=tt(t.ins,n).findIndex((e=>"cat"===e.typ));if(-1!==e){n+=e,wt[bt(wt)-1].errors={t:"vec",v:Nt(c)};break}return c}}break;case"or":ae(kt[bt(kt)-1])?n+=a.value:kt.pop();break;case"if":ae(kt.pop())||(n+=a.value);break;case"jmp":case"cat":n+=a.value;break;case"loo":n+=a.value,--e.loopBudget;break;case"pop":rt(kt,bt(kt)-a.value,a.value);break;case"ret":a.value?rt(kt,0,bt(kt)-1):jt(),n=s;break;case"rec":{wt[bt(wt)-1]={},n=-1;const t=a.value;if(r=rt(kt,bt(kt)-t,t),--e.recurBudget,!e.recurBudget)return[{e:"Budget",m:"recurred too many times",errCtx:o}]}continue;case"clo":case"par":{const t=a.value[0];let n=a.value[1];const s=({typ:e,value:t},r)=>"ref"===e&&!n.find((e=>"let"===e.typ&&e.value===t))||"npa"===e||"val"===e&&r+1!==bt(n)&&"exe"===n[r+1].typ,i={name:"",ins:n.map(((e,t)=>{if(t+1===bt(n))return e;const r="val"===e.typ&&"str"===e.value.t&&"exe"===n[t+1].typ&&wt[bt(wt)-1][e.value.v];return r?{typ:"val",value:r}:e})).filter(s)},c=await St(e,i,r,!0);if(c)return c;const u=bt(i.ins),l=rt(kt,bt(kt)-u,u);if(n=n.map(((e,t)=>s(e,t)?{typ:"val",value:l.shift(),errCtx:o}:e)),"par"===a.typ){const{value:e,errCtx:t}=n.pop();n.unshift(n.pop()),n.push({typ:"upa",value:-1,errCtx:t}),n.push({typ:"val",value:{t:"str",v:"..."},errCtx:t}),n.push({typ:"exe",value:e+2,errCtx:t})}kt.push({t:"clo",v:{name:t,ins:n}})}}}n||(wt.pop(),rt(kt,s,bt(kt)-(s+1)))}async function qt(e,t,r){const n=Me(t,r);return bt(n.errors)?n.errors:(e.env.funcs={...e.env.funcs,...n.funcs},"entry"in e.env.funcs?await St(e,e.env.funcs.entry,[]):void 0)}async function Dt(e,t,r,n=!1){const{callBudget:s,loopBudget:a,recurBudget:o,rangeBudget:i}=e,c=await qt(e,t,r);return e.callBudget=s,e.recurBudget=o,e.loopBudget=a,e.rangeBudget=i,delete e.env.funcs.entry,!c&&n&&bt(kt)&&await e.exe("print",[{t:"str",v:ee(kt[bt(kt)-1])}]),kt=[],wt=[],c??[]}const Ot=new Map,Tt=/[\[\]\(\) ,]/;async function Ft(e,t){const r=H().toString();Ot.set(r,t);const n=await Dt(e,t,r,!0);let s=[];return n.forEach((({e,m:t,errCtx:{line:r,col:n,sourceId:a}})=>{const o=Ot.get(a);if(!o)return void s.push({type:"message",text:`${e} Error: line ${r} col ${n}: ${t}\n`});const c=o.split("\n")[r-1],u=l(c,n-1).split(Tt)[0],v=$(l(c,0,n-1));if(s.push({type:"message",text:B(`${r}`,4)+v}),u){const e=l(c,n-1+i(u));s.push({type:"error",text:u}),s.push({type:"message",text:`${e}\n`})}else{const e=l(c,n);s.push({type:"error",text:c[n-1]}),s.push({type:"message",text:`${e}\n`})}s.push({type:"message",text:`${e} Error: ${t}.\n`})})),s}window.insitux=t.invoker})();
//# sourceMappingURL=insitux.js.map