(()=>{"use strict";var t={d:(e,r)=>{for(var s in r)t.o(r,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:r[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.d(e,{tokenise:()=>lt});var r={};t.r(r),t.d(r,{abs:()=>B,ceil:()=>z,charCode:()=>w,codeChar:()=>A,concat:()=>x,cos:()=>F,ends:()=>b,flat:()=>f,floor:()=>$,getTimeMs:()=>q,has:()=>p,isArray:()=>l,isNum:()=>c,len:()=>i,log10:()=>Q,log2:()=>J,logn:()=>H,lowerCase:()=>v,max:()=>W,min:()=>D,objKeys:()=>P,padEnd:()=>j,push:()=>g,randInt:()=>I,randNum:()=>E,range:()=>T,reverse:()=>C,round:()=>U,sign:()=>G,sin:()=>_,slen:()=>a,slice:()=>n,sortBy:()=>M,splice:()=>o,sqrt:()=>L,starts:()=>y,strIdx:()=>d,sub:()=>h,subIdx:()=>m,substr:()=>u,tan:()=>K,toNum:()=>s,trim:()=>S,trimEnd:()=>O,trimStart:()=>k,upperCase:()=>N});const s=t=>Number(t),n=(t,e,r)=>t.slice(e,r),o=(t,e,r)=>t.splice(e,r),i=t=>t.length,a=t=>t.length,c=t=>!Number.isNaN(Number(t)),l=t=>Array.isArray(t),u=(t,e,r)=>t.substring(e,e+(r??t.length)),d=(t,e)=>t[e],h=(t,e)=>t.includes(e),m=(t,e)=>t.indexOf(e),p=(t,e)=>t.includes(e),y=(t,e)=>t.startsWith(e),b=(t,e)=>t.endsWith(e),f=t=>t.flat(),x=(t,e)=>t.concat(e),g=(t,e)=>t.push(...e),M=(t,e)=>t.sort(e),C=t=>t.reverse(),v=t=>t.toLowerCase(),N=t=>t.toUpperCase(),S=t=>t.trim(),k=t=>t.trimStart(),O=t=>t.trimEnd(),j=(t,e)=>t.padEnd(e),w=t=>t.charCodeAt(0),A=t=>String.fromCharCode(t),E=(t,e)=>t+Math.random()*(e-t),I=(t,e)=>Math.floor(E(t,e)),T=t=>[...Array(t).keys()],P=t=>Object.keys(t),q=()=>(new Date).getTime(),B=Math.abs,D=Math.min,W=Math.max,_=Math.sin,F=Math.cos,K=Math.tan,L=Math.sqrt,U=Math.round,$=Math.floor,z=Math.ceil,G=Math.sign,H=Math.log,J=Math.log2,Q=Math.log10,{has:R,flat:V,push:X,slice:Y,splice:Z}=r,{slen:tt,starts:et,sub:rt,substr:st,strIdx:nt,subIdx:ot}=r,{isNum:it,len:at,toNum:ct}=r;function lt(t,e,r=!0,s=!1){const n=[],o=t=>rt("0123456789",t);let[i,a,c,l]=[!1,1,0,[1,0]],[u,d,h]=[!1,!1,!1];for(let m=0,p=tt(t);m<p;++m){const y=nt(t,m),b=m+1!==p?nt(t,m+1):"";if(++c,"\\"===y&&i){n[at(n)-1].text+={n:"\n",t:"\t",r:"\r",'"':'"'}[b]||("\\"===b?"\\":`\\${b}`),++c,++m;continue}const f={invokeId:e,line:a,col:c};if('"'===y){(i=!i)&&(l=[a,c],n.push({typ:"str",text:"",errCtx:f})),d=u=!1;continue}const x=rt(" \t\n\r,",y);if(!i&&x){d=u=!1,"\n"===y&&(++a,c=0);continue}if(!i&&";"===y){const e=ot(st(t,++m),"\n"),r=st(t,m,e>0?e:p-m);m+=tt(r),++a,c=0,s&&n.push({typ:"rem",text:r,errCtx:f});continue}const g=rt("()[]{}",y);if(d&&!o(y)){const t="x"===y&&"0"===n[at(n)-1].text;h=h||t,d="b"===y&&"0"===n[at(n)-1].text||"."===y&&!rt(n[at(n)-1].text,".")||h&&(t||rt("ABCDEFabcdef",y)),d||g||x||(u=!0,n[at(n)-1].typ="sym")}if(u&&g&&(u=!1),!i&&!u&&!d){if(g){const t=-1===ot("[{(",y)?")":"(";n.push({typ:t,text:r?t:y,errCtx:f}),!r||"["!==y&&"{"!==y||n.push({typ:"sym",text:"["===y?"vec":"dict",errCtx:f});continue}d=o(y)||"."===y&&o(b)||"-"===y&&(o(b)||"."===b),h=u=!d;const t=u?"sym":"num";n.push({typ:t,text:"",errCtx:f})}n[at(n)-1].text+=y}return{tokens:n,stringError:i?l:void 0}}window.insituxTokenise=e.tokenise})();
//# sourceMappingURL=insitux-tokenise.js.map